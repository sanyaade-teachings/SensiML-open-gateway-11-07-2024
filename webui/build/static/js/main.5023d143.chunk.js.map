{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/Configure/Configure.js","components/ConfigureStream/ConfigureStream.js","components/SensorStream/SensorStream.js","components/Results/Results.js","components/Main/Main.js","App.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","notSelected","blueGrey","error","red","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","InconSelector","index","NavBar","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","toolbar","alignItems","mixins","Configure","useState","config","setConfig","useEffect","axios","get","process","then","res","data","console","log","streaming","column_location","Object","keys","sort","join","Grid","xs","source","sample_rate","formControl","margin","details","flexDirection","flex","controls","paddingLeft","paddingBottom","ConfigureStream","React","setSource","modeUrl","setModeUrl","deviceID","setDeviceID","setError","helperText","setHelperText","deviceRows","setDeviceRows","field","headerName","deviceColumns","container","direction","onSubmit","preventDefault","post","device_id","toLowerCase","response","catch","message","status","headers","request","FormControl","component","FormLabel","RadioGroup","aria-label","name","value","target","FormControlLabel","control","Radio","label","item","Switch","checked","TextField","id","Button","type","FormHelperText","rows","columns","Main","activeView","setActiveView","CssBaseline","justify","newValue","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5023d143.chunk.js","sourcesContent":["import React from \"react\";\nimport { lightBlue, deepOrange, red, blueGrey } from \"@material-ui/core/colors\";\nimport {\n  useTheme,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\n\nconst LightTheme = props => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800])\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500])\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600])\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600])\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500])\n      }\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Streaming Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <SettingsIcon />;\n    case 1:\n      return <InfoIcon />;\n    case 2:\n      return <AssessmentIcon />;\n    case 3:\n      return <AssignmentIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Configure Gateway\", \"Gateway Status\"].map((text, index) => (\n            <ListItem button key={text} onClick={handleMenu(index)}>\n              <ListItemIcon>\n                <InconSelector index={index}> </InconSelector>\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 40),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction mapdata(data) {\n  console.log(data);\n  data.streaming = data.streaming ? \"Yes\" : \"No\";\n  data.column_location =\n    \"column_location\" in data\n      ? Object.keys(data.column_location).sort().join(\", \")\n      : [];\n  return data;\n}\n\nconst Configure = () => {\n  let [config, setConfig] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}config`)\n      .then((res) => setConfig(mapdata(res.data)));\n  }, []);\n\n  return (\n    <Grid xs={12}>\n      <Typography color=\"primary\">Streaming: </Typography>\n      <Typography>{config.streaming}</Typography>\n      <Typography color=\"primary\">Sensor: </Typography>\n      <Typography>{config.source}</Typography>\n      <Typography color=\"primary\">Sample Rate: </Typography>\n      <Typography>{config.sample_rate}</Typography>\n      <Typography color=\"primary\">Columns:</Typography>\n      <Typography>{config.column_location}</Typography>\n    </Grid>\n  );\n};\n\nexport default Configure;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst ConfigureStream = () => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(\"Serial\");\n  const [modeUrl, setModeUrl] = React.useState(\"config\");\n  const [deviceID, setDeviceID] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 120 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ]);\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.value);\n  };\n\n  const handleSwitchChange = (event) => {\n    console.log(\"HEREREER\");\n    console.log(event.target.checked);\n    if (event.target.checked) {\n      setModeUrl(\"config-results\");\n    } else {\n      setModeUrl(\"config\");\n    }\n  };\n\n  const handleDeviceIDChange = (event) => {\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(source);\n    console.log(deviceID);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + modeUrl, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setHelperText(\"Configured Device\");\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setHelperText(error.response.data.error.message[0]);\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handleDeviceScan = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setDeviceRows(response.data);\n      });\n  };\n\n  // \"Configure the gateway to  use a Serial Connection to  connect to the remote  node.\" />\n  // \"Configure the gateway to  use a BLE Connection to connect to remote node.\"\n  // \"Configure the gateway to mock a node sending test data.\"\n  return (\n    <Grid xs={12} container direction=\"columns\">\n      <Grid xs={4}>\n        <form onSubmit={handleSubmit}>\n          <FormControl\n            component=\"fieldset\"\n            error={error}\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Source:</FormLabel>\n            <RadioGroup\n              aria-label=\"source\"\n              name=\"source\"\n              value={source}\n              onChange={handleRadioChange}\n            >\n              <FormControlLabel\n                value=\"Serial\"\n                control={<Radio />}\n                label=\"Serial\"\n              />\n              <FormControlLabel value=\"BLE\" control={<Radio />} label=\"BLE\" />\n              <FormControlLabel value=\"Test\" control={<Radio />} label=\"Test\" />\n            </RadioGroup>\n            <Typography component=\"div\">\n              <FormLabel component=\"legend\">Mode:</FormLabel>\n              <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\n                <Grid item>Sensor Data</Grid>\n                <Grid item>\n                  <Switch name=\"checkedC\" onChange={handleSwitchChange} />\n                </Grid>\n                <Grid item>KP Results</Grid>\n              </Grid>\n            </Typography>\n            <FormLabel component=\"legend\">Device ID:</FormLabel>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"DeviceID\"\n              variant=\"outlined\"\n              value={deviceID}\n              onChange={handleDeviceIDChange}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Configure\n            </Button>\n            <FormHelperText>{helperText}</FormHelperText>\n          </FormControl>\n        </form>\n      </Grid>\n      <Grid xs={8}>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => {\n            handleDeviceScan(\"clicked\", { source });\n          }}\n        >\n          Scan\n        </Button>\n        <DataGrid rows={deviceRows} columns={deviceColumns} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ConfigureStream;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport StreamChart from \"./StreamChart\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst handleDisconnectRequest = (event) => {\n  axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((response) => {\n    console.log(response.data);\n  });\n};\n\nconst handleStreamRequest = (event, url, setStreamCallback) => {\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            //setStreamCallback(value);\n            setStreamCallback([\n              {\n                x: [-3, -2, -1],\n                y: [\n                  parseInt(Math.random() * 10),\n                  parseInt(Math.random() * 10),\n                  parseInt(Math.random() * 10),\n                ],\n                name: \"Line 1\",\n              },\n              {\n                x: [1, 2, 3],\n                y: [\n                  parseInt(Math.random() * 10),\n                  parseInt(Math.random() * 10),\n                  parseInt(Math.random() * 10),\n                ],\n                name: \"Line 2\",\n              },\n            ]);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst SensorStream = () => {\n  let [streamData, setStreamData] = useState([]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            Sensor Data\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n          <StreamChart data={streamData} />\n          <div className={classes.controls}>\n            <Button\n              aria-label=\"disconnect\"\n              onClick={() => {\n                handleStreamRequest(\n                  \"clicked\",\n                  `${process.env.REACT_APP_API_URL}stream`,\n                  setStreamData\n                );\n              }}\n            >\n              Stream\n            </Button>\n            <Button\n              aria-label=\"disconnect\"\n              onClick={() => {\n                handleDisconnectRequest(\"clicked\");\n              }}\n            >\n              Disconnect\n            </Button>\n          </div>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport default SensorStream;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst handleDisconnectRequest = (event) => {\n  axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((response) => {\n    console.log(response.data);\n  });\n};\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (event, url, setStreamCallback) => {\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            //setStreamCallback(bin2String(value));\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst Results = () => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"model\", headerName: \"Model\", width: 120 },\n    { field: \"classification\", headerName: \"Classification\", width: 120 },\n  ]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            Model Result\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n          <div className={classes.controls}>\n            <Button\n              aria-label=\"disconnect\"\n              onClick={() => {\n                handleStreamRequest(\n                  \"clicked\",\n                  `${process.env.REACT_APP_API_URL}results`,\n                  setDeviceRows\n                );\n              }}\n            >\n              Connect\n            </Button>\n            <Button\n              aria-label=\"disconnect\"\n              onClick={() => {\n                handleDisconnectRequest(\"clicked\");\n              }}\n            >\n              Disconnect\n            </Button>\n          </div>\n        </CardContent>\n      </div>\n      <div style={{ height: 400, width: \"100%\" }}>\n        <DataGrid rows={deviceRows} columns={deviceColumns} pageSize={10} />\n      </div>\n    </Card>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Configure } from \"../Configure\";\nimport { ConfigureStream } from \"../ConfigureStream\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst Main = () => {\n  const [activeView, setActiveView] = React.useState(0);\n\n  function handleChange(newValue) {\n    setActiveView(newValue);\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar onChange={handleChange} />\n        <main className={classes.content}>\n          {activeView === 0 ? <ConfigureStream /> : null}\n          {activeView === 1 ? <Configure /> : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nconst App = () => {\n  return (\n    <LightTheme>\n      <Main />\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}