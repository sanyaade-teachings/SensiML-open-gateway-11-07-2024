{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/Configure/Configure.js","components/ConfigureStream/ConfigureStream.js","components/SensorStream/StreamChart.js","components/SensorStream/SensorStream.js","components/Results/ResultsFilter.js","components/Results/Results.js","components/Main/Main.js","App.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","notSelected","blueGrey","error","red","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","InconSelector","index","NavBar","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","toolbar","alignItems","mixins","details","flexDirection","flex","controls","paddingLeft","paddingBottom","section1","margin","section2","textAlign","Configure","useState","config","setConfig","useEffect","axios","get","process","then","res","mapdata","data","mode","setStreamingMode","streaming","setColumns","Object","keys","column_location","sort","setStreamingSource","source","setDeviceID","device_id","join","Grid","container","rows","item","xs","component","Button","aria-label","handleConnectRequest","handleDisconnectRequest","sample_rate","formControl","ConfigureStream","React","streamingSource","setSource","streamingMode","modeUrl","setModeUrl","deviceID","setError","helperText","setHelperText","deviceRows","setDeviceRows","field","headerName","deviceColumns","direction","onSubmit","preventDefault","console","log","post","toLowerCase","response","catch","message","status","headers","request","FormControl","FormLabel","RadioGroup","name","value","target","FormControlLabel","control","Radio","label","TextField","id","type","FormHelperText","columns","onRowSelected","StreamChart","layout","autosize","handleStreamRequest","url","setStreamCallback","setIsStreaming","fetch","method","reader","body","getReader","stream","ReadableStream","start","controller","push","read","done","close","int16Array","Int16Array","buffer","size","length","x_array","Array","lines","x","y","i","col","splitArray","Response","SensorStream","streamData","setStreamData","isStreaming","disabled","Divider","ResultsFilter","filter_length","m","Classification","max","entries","key","filterData","id_counter","sliderroot","sliderinput","results","array","String","fromCharCode","apply","split","pop","JSON","parse","bin2String","Results","filterLength","setfilterLength","alignContent","Slider","newValue","aria-labelledby","min","style","height","pageSize","sortModel","Main","activeView","setActiveView","CssBaseline","justify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ef576b8.chunk.js","sourcesContent":["import React from \"react\";\nimport { lightBlue, deepOrange, red, blueGrey } from \"@material-ui/core/colors\";\nimport {\n  useTheme,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\n\nconst LightTheme = props => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800])\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500])\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600])\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600])\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500])\n      }\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Streaming Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <InfoIcon />;\n    case 1:\n      return <SettingsIcon />;\n    case 2:\n      return <AssessmentIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Gateway Status\", \"Configure Gateway\", \"Stream\"].map(\n            (text, index) => (\n              <ListItem button key={text} onClick={handleMenu(index)}>\n                <ListItemIcon>\n                  <InconSelector index={index}> </InconSelector>\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 40),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\n\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [config, setConfig] = useState([]);\n\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}config`)\n      .then((res) => setConfig(mapdata(res.data)));\n  }, []);\n\n\n  const handleDisconnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => setConfig(mapdata(res.data)))\n  };\n\n\n  const handleConnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}connect`).then((res) => setConfig(mapdata(res.data)))\n  };\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    data.streaming = data.streaming ? \"Yes\" : \"No\";\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    return data;\n  }\n  return (\n    <Grid>\n      <Grid container spacing={2} rows>\n        <Grid item xs={8}>\n          <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n            Connected: {config.streaming}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={4}>\n          <div className={classes.controls}>\n\n            <Grid container rows spacing={2}>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  aria-label=\"connect\"\n                  onClick={() => {\n                    handleConnectRequest(\"clicked\", setConfig);\n                  }}\n\n                >\n                  Connect\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  aria-label=\"disconnect\"\n                  onClick={() => {\n                    handleDisconnectRequest(\"clicked\", setConfig);\n                  }}\n                >\n                  Disconnect\n</Button>\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n\n      </Grid>\n\n      <Grid xs={12}>\n        <Grid>\n\n          <Typography color=\"primary\"> Configured Mode: </Typography>\n          <Typography>{config.mode}</Typography>\n\n          <Typography color=\"primary\">Sensors: </Typography>\n          <Typography>{config.source}</Typography>\n          <Typography color=\"primary\">Device ID: </Typography>\n          <Typography>{config.device_id}</Typography>\n        </Grid>\n        {config.mode === \"data_capture\" ? (\n          <Grid>\n            <Typography color=\"primary\">Sample Rate: </Typography>\n            <Typography>{config.sample_rate}</Typography>\n            <Typography color=\"primary\">Columns:</Typography>\n            <Typography>{config.column_location}</Typography>\n          </Grid>\n        ) : (\n            <></>\n          )}\n\n      </Grid>\n\n\n    </Grid>\n\n  );\n};\n\nexport default Configure;\n\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst ConfigureStream = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(props.streamingSource);\n  const [modeUrl, setModeUrl] = React.useState(\n    props.streamingMode === \"results\" ? \"config-results\" : \"config\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 120 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ]);\n\n\n\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.value);\n  };\n\n  const handleModeChange = (event) => {\n    setModeUrl(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.data.device_id);\n    setDeviceID(event.data.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + modeUrl, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        console.log(props);\n        props.setStreamingMode(response.data.mode);\n        setHelperText(\"Configured Device\");\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handleDeviceScan = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setDeviceRows(response.data);\n      });\n  };\n\n  // \"Configure the gateway to  use a Serial Connection to  connect to the remote  node.\" />\n  // \"Configure the gateway to  use a BLE Connection to connect to remote node.\"\n  // \"Configure the gateway to mock a node sending test data.\"\n  return (\n    <Grid xs={12} container direction=\"columns\">\n      <Grid xs={4}>\n        <form onSubmit={handleSubmit}>\n          <FormControl\n            component=\"fieldset\"\n            error={error}\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Source:</FormLabel>\n            <RadioGroup\n              aria-label=\"source\"\n              name=\"source\"\n              value={source}\n              onChange={handleRadioChange}\n            >\n              <FormControlLabel\n                value=\"SERIAL\"\n                control={<Radio />}\n                label=\"Serial\"\n              />\n              <FormControlLabel value=\"BLE\" control={<Radio />} label=\"BLE\" />\n              <FormControlLabel\n                value=\"TCPIP\"\n                control={<Radio />}\n                label=\"TCP/IP\"\n              />\n              <FormControlLabel value=\"TEST\" control={<Radio />} label=\"Test\" />\n            </RadioGroup>\n            <FormLabel component=\"legend\">Mode:</FormLabel>\n            <RadioGroup\n              aria-label=\"mode\"\n              name=\"Streaming Source\"\n              value={modeUrl}\n              onChange={handleModeChange}\n            >\n              <FormControlLabel\n                value=\"config\"\n                control={<Radio />}\n                label=\"Data Collection\"\n              />\n              <FormControlLabel\n                value=\"config-results\"\n                control={<Radio />}\n                label=\"Recognition\"\n              />\n            </RadioGroup>\n            <FormLabel component=\"legend\">Device ID:</FormLabel>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={deviceID}\n              onChange={handleDeviceIDChange}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Configure\n            </Button>\n\n            <FormHelperText>{helperText}</FormHelperText>\n          </FormControl>\n        </form>\n      </Grid>\n\n\n      <Grid xs={8} >\n\n        <Grid item>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              handleDeviceScan(\"clicked\", { source });\n            }}\n          >\n            Scan Devices\n        </Button>\n        </Grid>\n\n        <DataGrid\n          rows={deviceRows}\n          columns={deviceColumns}\n          onRowSelected={handleRowSelection}\n        />\n      </Grid>\n\n\n\n    </Grid>\n  );\n};\n\nexport default ConfigureStream;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst StreamChart = (data) => {\n  return (\n    <Plot\n      data={data.data}\n      layout={{\n        autosize: true,\n      }}\n    />\n  );\n};\n\nexport default StreamChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport StreamChart from \"./StreamChart\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\n\nfunction splitArray(data, columns) {\n  var size = data.length / columns.length;\n  var x_array = [...Array(size).keys()];\n  var lines = columns.map((x) => {\n    return {\n      x: x_array,\n      y: [],\n      name: x,\n    };\n  });\n\n  for (var i = 0; i < data.length; i += columns.length) {\n    for (var col = 0; col < columns.length; col++) {\n      lines[col].y.push(data[i + col]);\n    }\n  }\n  return lines;\n}\n\nconst handleStreamRequest = (event, url, setStreamCallback, setIsStreaming, columns) => {\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n\n            var int16Array = new Int16Array(value.buffer);\n            setStreamCallback(splitArray(int16Array, columns));\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst SensorStream = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [streamData, setStreamData] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n\n  return (\n    <div className={classes.details}>\n      <div className={classes.section1}>\n        <Grid container spacing={2} rows>\n          <Grid item xs={10}>\n            <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n              Mode: Data Collection\n            </Typography>\n          </Grid>\n\n          <Grid item xs={2}>\n            <div className={classes.controls}>\n              <Button\n                aria-label=\"disconnect\"\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={isStreaming}\n                onClick={() => {\n                  handleStreamRequest(\n                    \"clicked\",\n                    `${process.env.REACT_APP_API_URL}stream`,\n                    setStreamData,\n                    setIsStreaming,\n                    props.columns\n                  );\n\n                }}\n              >\n                Start Stream\n              </Button>\n            </div>\n          </Grid>\n\n        </Grid>\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.section2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n      </div>\n      <StreamChart data={streamData} />\n    </div>\n  );\n};\n\nexport default SensorStream;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ResultsFilter = (props) => {\n  function filterData(data, filter_length) {\n    if (data.length === 0) {\n      return \"No Results\";\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      return \"UNC\";\n    }\n    return index;\n  }\n\n  return (\n    <Typography variant=\"h1\" component=\"h2\">\n      {filterData(props.data, props.filter_length)}\n    </Typography>\n  );\n};\n\nexport default ResultsFilter;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport ResultsFilter from \"./ResultsFilter\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Divider from \"@material-ui/core/Divider\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex-right\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  sliderroot: {\n    width: 250,\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (event, url, setStreamCallback, setIsStreaming) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ]);\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    console.log(newValue);\n    setfilterLength(newValue);\n  };\n\n  return (\n    <Grid>\n      <div className={classes.section1}>\n        <Grid container spacing={2} rows>\n          <Grid item xs={10}>\n            <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n              Mode: Recogntion\n            </Typography>\n          </Grid>\n\n          <Grid item xs={2}>\n            <div className={classes.controls}>\n              <Button\n                aria-label=\"disconnect\"\n                color=\"primary\"\n                variant=\"contained\"\n                disabled={isStreaming}\n                onClick={() => {\n                  handleStreamRequest(\n                    \"clicked\",\n                    `${process.env.REACT_APP_API_URL}results`,\n                    setDeviceRows,\n                    setIsStreaming\n                  );\n                }}\n              >\n                Start Stream\n              </Button>\n            </div>\n          </Grid>\n\n        </Grid>\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.section2}>\n        <Grid alignContent=\"center\">\n          <ResultsFilter\n            data={deviceRows}\n            filter_length={filterLength}\n          ></ResultsFilter>\n        </Grid>\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.section1}>\n        <Grid container spacing={3} alignItems=\"center\">\n          <Grid item> Filter Length </Grid>\n          <div className={classes.sliderroot}>\n            <Grid item xs>\n              <Slider\n                value={typeof filterLength === \"number\" ? filterLength : 1}\n                onChange={handleFilterLengthSliderChange}\n                aria-labelledby=\"input-slider\"\n                min={1}\n                max={10}\n              />\n            </Grid>\n          </div>\n          <Grid item> {filterLength} </Grid>\n        </Grid>\n      </div>\n      <Divider variant=\"middle\" />\n\n      <div className={classes.section1}>\n        <div style={{ height: 600, width: \"100%\" }}>\n          <DataGrid\n            rows={deviceRows}\n            columns={deviceColumns}\n            pageSize={15}\n            sortModel={[{ field: \"id\", sort: \"desc\" }]}\n          />\n        </div>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Configure } from \"../Configure\";\nimport { ConfigureStream } from \"../ConfigureStream\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst Main = () => {\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState(0);\n  const [streamingSource, setStreamingSource] = React.useState(0);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n\n  function handleChange(newValue) {\n    if (activeView != newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar onChange={handleChange} />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Configure\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            <ConfigureStream\n              setStreamingMode={setStreamingMode}\n              streamingSource={streamingSource}\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n            />\n          ) : null}\n          {activeView === 2 ? (\n            streamingMode == \"results\" ? (\n              <Results />\n            ) : (\n                <SensorStream\n                  columns={columns}\n                />\n              )\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nconst App = () => {\n  return (\n    <LightTheme>\n      <Main />\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}