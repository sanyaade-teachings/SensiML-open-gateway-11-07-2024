{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/SimpleCard/SimpleCard.js","components/WebCamera/Camera.js","components/WebCamera/WebCamera.js","components/Status/Status.js","components/Configure/Stepper.js","components/Configure/Configure.js","redux/actions/actionTypes/index.js","components/BaseData/LinkExportToCSV.js","components/SensorStream/SensorDataChart.js","components/SensorStream/SensorStream.js","redux/selectors/sensorData/index.js","components/Results/ResultsFilter.js","components/Results/Results.js","components/Record/Record.js","components/Main/Main.js","redux/sagas/errors/index.js","services/StreamReader/errors.js","services/StreamReader/index.js","configs/index.js","redux/repositories/StreamSensorReader.js","redux/sagas/stream/watchStreamSensorStart.js","redux/sagas/stream/watchStreamSensorStop.js","redux/sagas/stream/index.js","redux/sagas/sensorData/watchSetChunkSensorData.js","redux/sagas/sensorData/index.js","redux/sagas/index.js","redux/reducers/root/index.js","redux/reducers/errors/index.js","redux/reducers/stream/index.js","redux/reducers/sensorData/index.js","redux/reducers/index.js","redux/store.jsx","services/api/index.js","App.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","secondaryRed","red","notSelected","blueGrey","error","record","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","section1","margin","InconSelector","index","Connected","Grid","isConnected","Button","aria-label","text","disabled","NavBar","Drawer","paper","List","map","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","Divider","isCameraConnected","toolbar","alignItems","mixins","minWidth","bullet","transform","title","fontSize","backgroundColor","pos","marginBottom","marginTop","SimpleCard","item","xs","Card","CardContent","align","name","list","dense","value","split","Camera","console","log","src","cameraKey","alt","details","flexDirection","flex","controls","paddingLeft","paddingBottom","section2","textAlign","handleCameraRequest","setCameraView","setIsCameraConnected","setCameraKey","axios","post","process","camera_index","event_type","then","response","data","Math","random","toString","substring","WebCamera","React","useState","component","cameraView","container","rows","fullWidth","Status","config","setConfig","useEffect","get","res","mapdata","mode","setStreamingMode","setIsConnected","streaming","setColumns","Object","keys","column_location","sort","setStreamingSource","source","setDeviceID","device_id","camera_on","join","class","columns","sample_rate","handleDisconnectRequest","handleConnectRequest","backButton","marginRight","instructions","stepIcon","HorizontalLabelPositionBelowStepper","steps","Stepper","activeStep","alternativeLabel","label","Step","StepLabel","active","StepIconProps","Configure","streamingSource","setSource","streamingMode","setMode","deviceID","setError","scanHelperText","setScanHelperText","helperText","setHelperText","deviceRows","setDeviceRows","onSubmit","preventDefault","toLowerCase","catch","message","status","headers","request","FormControl","FormLabel","RadioGroup","target","row","FormControlLabel","control","Radio","TextField","id","type","FormHelperText","style","height","field","headerName","onRowSelected","pageSize","formControl","SET_GLOBAL_LOADER","FETCH_DATA_ERROR_MSG","SET_DATA_ERROR_MSG","START_STREAM_SENSOR_SAGA","STOP_STREAM_SENSOR_SAGA","SET_IS_STREAMING_SENSOR","SET_IS_STREAMING_SENSOR_RECORDING","SET_STREAM_SENSOR_DATA_RESET","SET_CHUNK_SENSOR_DATA_SAGA","SET_STREAM_SENSOR_DATA","SET_STREAM_SENSOR_RECORD_DATA","linkWrapper","link","icon","marginLeft","cursor","LinkExportToCSV","deleteFile","csvReport","filename","Box","SensorDataChart","sensorData","countSamples","revision","setRevision","opacity","length","x","layout","visible","autosize","l","r","b","t","pad","xaxis","autorange","yaxis","cardWrapper","dataWrapper","chartWrapper","buttonWrapper","zeroOpacity","SensorStream","column","COUNT_SAMPLES","dispatch","useDispatch","isSplitCharts","SetIsSplitCharts","useSelector","state","stream","isStreamingSensor","isStreamingSensorRecording","sensorSimpleData","result","y","forEach","el","i","push","floor","sensorRecordedData","unshift","sensorRecordedDataToCsv","exportCsvRecordedData","countRecordedData","startSensorStreaming","useCallback","payload","stopSensorStreaming","setRecording","isRecording","setClearRecording","setClearStream","Switch","checked","inputProps","ResultsFilter","filter_length","m","Classification","max","entries","key","filterData","id_counter","sliderroot","sliderinput","handleStreamRequest","url","setStreamCallback","setIsStreaming","setReader","fetch","method","reader","body","getReader","ReadableStream","start","controller","read","done","close","results","array","String","fromCharCode","apply","pop","JSON","parse","bin2String","Response","Results","isStreaming","filterLength","setfilterLength","cancel","handleStopStreaming","alignContent","Slider","newValue","aria-labelledby","min","sortModel","handleRecordRequest","Record","recording","setFilename","blob","window","URL","createObjectURL","Blob","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","handleDownloadRequest","Main","activeView","setActiveView","useSnackbar","enqueueSnackbar","closeSnackbar","errorDataMsg","errors","alertUser","e","returnValue","addEventListener","removeEventListener","CssBaseline","direction","justify","handleErrorMsg","watchErrorSaga","action","put","delay","takeEvery","BaseStreamHttpError","errorCode","constructor","Error","StreamReader","fetchUrl","this","undefined","ok","statusText","actionType","store","chunk","Int16Array","buffer","apiHosts","streamSensorReader","workerStreamStart","watchStreamSensorStart","call","debug","takeLatest","workerStreamStop","watchStreamSensorStop","streamSagas","all","fork","workerSetStreamChunkSensorData","watchSetChunkSensorData","chunkLength","updatedSensorSimpleData","select","left","right","chunkI","sensorDataSagas","rootSaga","initialState","globalLoader","rootData","streamData","createAppReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","composedEnhancers","composeWithDevTools","applyMiddleware","appReducer","createStore","run","interceptor_401","refreshUrl","init","baseURL","defaults","mount401Interceptor","interceptors","use","a","includes","unmount401Interceptor","eject","setCustomAuthHeader","common","Authorization","setContentType","contentType","removeHeader","resource","delete","customRequest","customJsonRequest","setAuthHeader","App","anchorOrigin","horizontal","vertical","autoHideDuration","ReactDOM","render","getElementById"],"mappings":"4QA2DeA,EAvDI,SAACC,GAClB,IAAMC,EAAQC,cAERC,EAAeC,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,KAChBG,aAAcV,EAAMI,QAAQO,gBAAgBJ,IAAU,OAExDK,OAAQ,CACNN,MAAOO,IAAW,KAClBL,KAAMK,IAAW,KACjBJ,KAAMI,IAAW,KACjBH,aAAcV,EAAMI,QAAQO,gBAAgBE,IAAW,OAEzDC,UAAW,CACTR,MAAOC,IAAU,KACjBC,KAAMD,IAAU,KAChBE,KAAMF,IAAU,KAChBG,aAAcV,EAAMI,QAAQO,gBAAgBJ,IAAU,OAExDQ,aAAc,CACZT,MAAOU,IAAI,KACXR,KAAMQ,IAAI,KACVP,KAAMO,IAAI,KACVN,aAAcV,EAAMI,QAAQO,gBAAgBK,IAAI,OAElDC,YAAa,CACXX,MAAOY,IAAS,KAChBV,KAAMU,IAAS,KACfT,KAAMS,IAAS,KACfR,aAAcV,EAAMI,QAAQO,gBAAgBO,IAAS,OAEvDC,MAAO,CACLb,MAAOU,IAAI,KACXR,KAAMQ,IAAI,KACVP,KAAMO,IAAI,KACVN,aAAcV,EAAMI,QAAQO,gBAAgBK,IAAI,OAElDI,OAAQ,CACNd,MAAOU,IAAI,KACXR,KAAMQ,IAAI,KACVP,KAAMO,IAAI,KACVN,aAAcV,EAAMI,QAAQO,gBAAgBK,IAAI,UAKtD,OACE,cAAC,IAAD,CAAkBhB,MAAOE,EAAzB,SAAwCH,EAAMsB,Y,yCCfnCC,EAXA,WACb,IAAMC,EAzBNC,aAAW,SAACxB,GAAD,MAAY,CACrByB,kBAAmB,CACjBC,QAAQ,OACRC,eAAe,iBAEjBC,eAAgB,CACdF,QAAQ,aACRC,eAAe,iBAEjBE,SAAU,CACRC,eAAe,OACfC,cAAc,YACdC,MAAM,SAERC,OAAQ,CACNC,OAAQlC,EAAMkC,OAAOC,OAAS,MAflCX,GA2BA,OACE,cAACY,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWf,EAAQU,OAA7C,SACE,cAACM,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4C,+IClBFC,EAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEXO,OAAQ,CACNC,OAAQlC,EAAMkC,OAAOC,OAAS,GAEhCA,OAAQ,CACNS,MAVgB,IAWhBC,WAAY,GAEdC,YAAa,CACXF,MAdgB,KAgBlBG,gBAAiB,CACfC,SAAU,QAEZC,QAAS,CACPC,SAAU,EACVC,QAASnD,EAAMoD,QAAQ,IAGzBC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,QAIvBG,EAAgB,SAACxD,GACrB,OAAQA,EAAMyD,OACZ,KAAK,EACH,OAAO,cAAC,IAAD,IACT,KAAK,EACH,OAAO,cAAC,IAAD,IACT,KAAK,EACH,OAAO,cAAC,IAAD,IACT,KAAK,EAEL,QACE,OAAO,cAAC,IAAD,MAIPC,EAAY,SAAC1D,GACjB,OACE,cAAC2D,EAAA,EAAD,UACG3D,EAAM4D,YACL,eAACC,EAAA,EAAD,CAAQ5B,MAAM,UAAUS,QAAQ,YAAYoB,aAAW,YAAvD,UACG9D,EAAM+D,KADT,iBAIA,eAACF,EAAA,EAAD,CAAQnB,QAAQ,YAAYoB,aAAW,aAAaE,UAAU,EAA9D,UACGhE,EAAM+D,KADT,uBAyDOE,EAjDA,SAACjE,GACd,IAAMwB,EAAUmB,IAMhB,OACE,eAACuB,EAAA,EAAD,CACE3B,UAAWf,EAAQY,OACnBM,QAAQ,YACRlB,QAAS,CACP2C,MAAO3C,EAAQuB,aAJnB,UAOE,cAACP,EAAA,EAAD,IACA,qBAAKD,UAAWf,EAAQwB,gBAAxB,SACE,eAACoB,EAAA,EAAD,WACG,CAAC,iBAAkB,YAAa,cAAe,aAAaC,KAC3D,SAACN,EAAMN,GAAP,OACE,eAACa,EAAA,EAAD,CAAUC,QAAM,EAAYC,SAjBpBC,EAiBwChB,EAjB7B,SAACiB,GAC9B1E,EAAM2E,SAASF,KAgBL,UACE,cAACG,EAAA,EAAD,UACE,cAAC,EAAD,CAAenB,MAAOA,EAAtB,iBAEF,cAACoB,EAAA,EAAD,CAAcvE,QAASyD,MAJHA,GAjBf,IAACU,KAyBZ,qBAAKlC,UAAWf,EAAQ8B,SAAxB,SACE,cAACwB,EAAA,EAAD,MAEF,cAACR,EAAA,EAAD,UACE,cAAC,EAAD,CACEP,KAAK,SACLH,YAAa5D,EAAM4D,gBAGvB,cAACU,EAAA,EAAD,UACE,cAAC,EAAD,CACEP,KAAK,QACLH,YAAa5D,EAAM+E,+B,QC7FlBpC,EApBG,kBAChBlB,aAAW,SAACxB,GAAD,MAAY,CACrB2C,KAAM,CACJjB,QAAS,QAEXqD,QAAQ,aACNrD,QAAS,OACTsD,WAAY,SACZrD,eAAgB,WAChBwB,QAASnD,EAAMoD,QAAQ,EAAG,IACvBpD,EAAMiF,OAAOF,SAElB9B,QAAS,CACPC,SAAU,EACVN,MAAO,OACPO,QAASnD,EAAMoD,QAAQ,EAAG,EAAG,EAAG,IAChCzB,eAAgB,eAfpBH,I,mCCOIkB,EAAYlB,YAAW,CAC3BmB,KAAM,CACJuC,SAAU,KAEZC,OAAQ,CACNC,UAAW,cAEbC,MAAO,CACLC,SAAU,GACVC,gBAAiB,WAEnBC,IAAK,CACHC,aAAc,EACdC,UAAW,KA0CAC,EAtCI,SAAC5F,GAClB,IAAMwB,EAAUmB,IAChB,OACE,cAACgB,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI9F,EAAM8F,GAArB,SACE,cAACC,EAAA,EAAD,CAAMxD,UAAWf,EAAQoB,KAAzB,SACE,eAACoD,EAAA,EAAD,WACE,cAACvD,EAAA,EAAD,CACEwD,MAAM,SACN1D,UAAWf,EAAQ8D,MACnBrD,MAAM,cAHR,SAKGjC,EAAMkG,OAERlG,EAAMmG,KACL,qBAAK5D,UAAWf,EAAQ4D,OAAxB,SACE,cAAChB,EAAA,EAAD,CAAMgC,OAAO,EAAb,SACGpG,EAAMqG,MAAMC,MAAM,KAAKjC,KAAI,SAACgC,GAAD,OAC1B,cAAC/B,EAAA,EAAD,UACE,cAACO,EAAA,EAAD,CAAcoB,MAAM,SAAS3F,QAAS+F,aAM9C,cAAC5D,EAAA,EAAD,CACEwD,MAAM,SACN1D,UAAWf,EAAQiE,IACnBxD,MAAM,gBAHR,SAKGjC,EAAMqG,gBC3CNE,EAVA,SAACvG,GAEd,OADAwG,QAAQC,IAAIzG,GAEV,qBACE0G,IAAK,sCAA6C1G,EAAM2G,UACxDC,IAAI,yBCFJjE,EAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEXkF,QAAS,CACPlF,QAAS,OACTmF,cAAe,UAEjB5D,QAAS,CACP6D,KAAM,YAERC,SAAU,CACRrF,QAAS,OACTsD,WAAY,SACZgC,YAAahH,EAAMoD,QAAQ,GAC3B6D,cAAejH,EAAMoD,QAAQ,IAE/BC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,IAE3B8D,SAAU,CACR5D,OAAQtD,EAAMoD,QAAQ,GACtB+D,UAAW,cAITC,EAAsB,SAC1B3C,EACA4C,EACAC,EACAC,GAEAhB,QAAQC,IAAI/B,GAEZ+C,IACGC,KADH,UACWC,yBADX,gBACwD,CACpDC,aAAc,EACdC,WAAYnD,IAEboD,MAAK,SAACC,GACLvB,QAAQC,IAAIsB,EAASC,MACR,aAATtD,IACF4C,GAAc,GACdC,GAAqB,GACrBC,EAAaS,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAClD5B,QAAQC,IAAI,eACZD,QAAQC,IAAI/B,IAED,cAATA,IACF4C,GAAc,GACdC,GAAqB,GACrBf,QAAQC,IAAI,eACZD,QAAQC,IAAI/B,QAmFL2D,EA9EG,SAACrI,GACjB,IAAMwB,EAAUmB,IADW,GAEbzC,cACsBoI,IAAMC,UAAS,IAHxB,mBAGRjB,GAHQ,aAIOgB,IAAMC,SAAS,IAJtB,mBAIpB5B,EAJoB,KAITa,EAJS,KAiB3B,OACE,cAACzB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,qBAAKzD,UAAWf,EAAQ8B,SAAxB,SACE,cAACb,EAAA,EAAD,CAAY+F,UAAU,KAAK9F,QAAQ,KAAKT,MAAM,YAA9C,4BAIF,cAAC,EAAD,CACE0E,UAAWA,EACX8B,WAAYzI,EAAM+E,oBAEpB,cAACD,EAAA,EAAD,CAASpC,QAAQ,WACjB,qBAAKH,UAAWf,EAAQ2F,SAAxB,SACE,cAAC1E,EAAA,EAAD,CAAYC,QAAQ,YAAYT,MAAM,oBAGxC,qBAAKM,UAAWf,EAAQqF,QAAxB,SACE,cAAClD,EAAA,EAAD,CAAM+E,WAAS,EAACC,MAAI,EAACtF,QAAS,EAA9B,SACE,cAACM,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,UAC+B,IAA5B9F,EAAM+E,kBACL,cAAClB,EAAA,EAAD,CACEC,aAAW,eACXpB,QAAQ,YACRkG,WAAW,EACXpE,QAAS,WACP6C,EACE,YACAC,EACAtH,EAAMuH,qBACNC,IATN,0BAgBA,cAAC3D,EAAA,EAAD,CACEC,aAAW,cACXpB,QAAQ,YACRkG,WAAW,EACXpE,QAAS,WACP6C,EACE,aACAC,EACAtH,EAAMuH,qBACNC,IATN,qCC5GV7E,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEXkF,QAAS,CACPlF,QAAS,OACTmF,cAAe,UAEjB5D,QAAS,CACP6D,KAAM,YAERC,SAAU,CACRrF,QAAS,OACTsD,WAAY,cAkID4D,GA9HA,SAAC7I,GACd,IAAMwB,EAAUmB,KADQ,GAEVzC,cACYqI,mBAAS,KAHX,mBAGnBO,EAHmB,KAGXC,EAHW,KAKxBC,qBAAU,WACRvB,IAAMwB,IAAN,UAAatB,yBAAb,WAAoDG,MAAK,SAACoB,GACxDH,EAAUI,EAAQD,EAAIlB,YAEvB,IAeH,SAASmB,EAAQnB,GAcf,OAbIA,EAAKoB,MACPpJ,EAAMqJ,iBAAiBrB,EAAKoB,MAE9BpJ,EAAMsJ,eAAetB,EAAKuB,WAC1BvJ,EAAMwJ,WAAWC,OAAOC,KAAK1B,EAAK2B,iBAAiBC,QACnD5J,EAAM6J,mBAAmB7B,EAAK8B,QAC9B9J,EAAM+J,YAAY/B,EAAKgC,WACvBhK,EAAMuH,qBAAqBS,EAAKiC,WAChCjC,EAAK2B,gBACH,oBAAqB3B,EACjByB,OAAOC,KAAK1B,EAAK2B,iBAAiBC,OAAOM,KAAK,MAC9C,GAEClC,EAET,OACE,qBAAKmC,MAAO3I,EAAQoB,KAApB,SACE,eAACe,EAAA,EAAD,CAAM+E,WAAS,EAACC,MAAI,EAACtF,QAAS,EAA9B,UACE,cAACM,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACrC,EAAA,EAAD,CAAM+E,WAAS,EAAC0B,SAAO,EAAC/G,QAAS,EAAjC,UACE,eAACM,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAI4C,WAAS,EAACC,MAAI,EAACtF,QAAS,EAA3C,UACE,cAAC,EAAD,CACE6C,KAAK,OACLJ,GAAG,IACHO,MAAOyC,EAAOM,OAEhB,cAAC,EAAD,CACElD,KAAK,SACLJ,GAAG,IACHO,MAAOyC,EAAOgB,YAGlB,eAACnG,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAI4C,WAAS,EAACC,MAAI,EAACtF,QAAS,EAA3C,UACE,cAAC,EAAD,CACE6C,KAAK,YACLJ,GAAI,EACJO,MAAOyC,EAAOkB,YAEC,iBAAhBlB,EAAOM,KACN,cAAC,EAAD,CACEtD,GAAG,IACHI,KAAK,cACLG,MAAOyC,EAAOuB,cAEd,QAEN,cAAC1G,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACmB,iBAAhBgD,EAAOM,KACN,cAAC,EAAD,CACElD,KAAK,iBACLG,MAAOyC,EAAOa,gBACdxD,MAAM,IAEN,OAEN,cAACxC,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,qBAAKvD,UAAWf,EAAQwF,SAAxB,SACGhH,EAAM4D,YACL,cAACC,EAAA,EAAD,CACE5B,MAAM,YACNS,QAAQ,YACRoB,aAAW,aACX8E,WAAW,EACXpE,QAAS,YA/EC,SAACE,EAAOqE,GACtCtB,IAAMwB,IAAN,UAAatB,yBAAb,eAAwDG,MAAK,SAACoB,GAC5D1C,QAAQC,IAAIyC,EAAIlB,MAChBe,EAAUI,EAAQD,EAAIlB,UA6EFsC,CAAwB,EAAWvB,IANvC,oCAYA,cAAClF,EAAA,EAAD,CACE5B,MAAM,YACNS,QAAQ,YACRoB,aAAW,UACX8E,WAAW,EACXpE,QAAS,YApFF,SAACE,EAAOqE,GACnCtB,IAAMwB,IAAN,UAAatB,yBAAb,YAAqDG,MAAK,SAACoB,GACzDH,EAAUI,EAAQD,EAAIlB,UAmFFuC,CAAqB,EAAWxB,IANpC,4CAkBd,cAACpF,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,EAAD,CACEyB,qBAAsBvH,EAAMuH,qBAC5BxC,kBAAmB/E,EAAM+E,4B,4GC1I/BpC,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJC,MAAO,QAET2H,WAAY,CACVC,YAAaxK,EAAMoD,QAAQ,IAE7BqH,aAAc,CACZ/E,UAAW1F,EAAMoD,QAAQ,GACzBqC,aAAczF,EAAMoD,QAAQ,IAE9BsH,SAAU,CACR1I,MAAO,eAaX,IA0Be2I,GA1B6B,SAAC5K,GAC3C,IAAMwB,EAAUmB,KACVkI,EAVC,CACL,yBACA,4BACA,cACA,2BAUF,OACE,qBAAKtI,UAAWf,EAAQoB,KAAxB,SACE,cAACkI,GAAA,EAAD,CAASC,WAJI,KAIoBC,kBAAgB,EAAjD,SACGH,EAAMxG,KAAI,SAAC4G,GAAD,OACT,cAACC,GAAA,EAAD,CAAkBjJ,MAAM,UAAxB,SACE,cAACkJ,GAAA,EAAD,CACEC,QAAQ,EACRC,cAAe,CACb7J,QAAS,CAAEoB,KAAMpB,EAAQmJ,WAH7B,SAMGM,KAPMA,WCxBftI,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,YAkQE2J,GA9PG,SAACtL,GACjB,IAAMwB,EAAUmB,KADW,EAEC2F,IAAMC,SAASvI,EAAMuL,iBAFtB,mBAEpBzB,EAFoB,KAEZ0B,EAFY,OAGHlD,IAAMC,SACJ,YAAxBvI,EAAMyL,cAA8B,iBAAmB,UAJ9B,mBAGpBrC,EAHoB,KAGdsC,EAHc,OAMKpD,IAAMC,SAASvI,EAAM2L,UAN1B,mBAMpBA,EANoB,KAMV5B,EANU,OAODzB,IAAMC,UAAS,GAPd,mBAOpBnH,EAPoB,KAObwK,EAPa,OAQiBtD,IAAMC,SAAS,IARhC,mBAQpBsD,EARoB,KAQJC,EARI,OASSxD,IAAMC,SAAS,IATxB,mBASpBwD,EAToB,KASRC,EATQ,OAUS1D,IAAMC,SAAS,IAVxB,mBAUpB0D,EAVoB,KAURC,EAVQ,KAyG3B,OACE,cAACnG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACrC,EAAA,EAAD,CAAM+E,WAAS,EAACC,MAAI,EAACtF,QAAS,EAA9B,UACE,cAAC,GAAD,IACA,cAACM,EAAA,EAAD,CAAMkC,MAAI,EAACuE,SAAO,EAACtE,GAAI,EAAG4C,WAAS,EAACzD,WAAW,SAA/C,SACE,cAACc,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAMmG,SAvCK,SAACzH,GACxB8B,QAAQC,IAAI/B,GACZA,EAAM0H,iBACN3E,IACGC,KADH,UACWC,yBADX,QACgD,CAC5CmC,OAAQA,EAAOuC,gBAEhBvE,MAAK,SAACC,GACLvB,QAAQC,IAAIsB,EAASC,MACrBkE,EAAcnE,EAASC,SAExBsE,OAAM,SAAUlL,GACXA,EAAM2G,UAER+D,EAAkB1K,EAAM2G,SAASC,KAAK5G,MAAMmL,QAAQrC,KAAK,OACzD1D,QAAQC,IAAIrF,EAAM2G,SAASC,MAC3BxB,QAAQC,IAAIrF,EAAM2G,SAASyE,QAC3BhG,QAAQC,IAAIrF,EAAM2G,SAAS0E,UAClBrL,EAAMsL,QAEflG,QAAQC,IAAIrF,EAAMsL,SAGlBlG,QAAQC,IAAI,QAASrF,EAAMmL,aAgBrB,SACE,cAACI,GAAA,EAAD,CAAanE,UAAU,WAAWpH,MAAOA,EAAzC,SACE,eAACuC,EAAA,EAAD,CAAM+E,WAAS,EAAC0B,SAAO,EAAC/G,QAAS,EAAjC,UACE,cAACM,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC4G,GAAA,EAAD,8BACA,eAACC,GAAA,EAAD,CACE/I,aAAW,SACXuC,MAAOyD,EACPnF,SA1GF,SAACD,GACzB8G,EAAU9G,EAAMoI,OAAOzG,QA0GG0G,KAAG,EAJL,UAME,cAACC,GAAA,EAAD,CACE3G,MAAM,SACN4G,QAAS,cAACC,GAAA,EAAD,IACTjC,MAAM,WAER,cAAC+B,GAAA,EAAD,CACE3G,MAAM,MACN4G,QAAS,cAACC,GAAA,EAAD,IACTjC,MAAM,QAER,cAAC+B,GAAA,EAAD,CACE3G,MAAM,QACN4G,QAAS,cAACC,GAAA,EAAD,IACTjC,MAAM,WAER,cAAC+B,GAAA,EAAD,CACE3G,MAAM,OACN4G,QAAS,cAACC,GAAA,EAAD,IACTjC,MAAM,mBAOhB,cAACtH,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC4G,GAAA,EAAD,CAAWpE,UAAU,SAArB,wBACA,cAAC2E,GAAA,EAAD,CACEC,GAAG,iBACH1K,QAAQ,WACR2D,MAAOsF,EACPhH,SAtIC,SAACD,GAC5BqF,EAAYrF,EAAMoI,OAAOzG,OACzB2F,EAAc,KACdJ,GAAS,IAoIiBhD,WAAW,WAMnB,cAACjF,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACjC,EAAA,EAAD,CACEwJ,KAAK,SACL3K,QAAQ,YACRT,MAAM,YACN2G,WAAW,EAJb,oBAUF,cAAC0E,GAAA,EAAD,UAAiBzB,IACjB,cAAClI,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,qBAAKyH,MAAO,CAAEC,OAAQ,IAAK3K,MAAO,QAAlC,SACE,cAAC,KAAD,CACE8F,KAAMsD,EACN7B,QA3KN,CAClB,CAAEqD,MAAO,KAAMC,WAAY,KAAM7K,MAAO,GACxC,CAAE4K,MAAO,YAAaC,WAAY,YAAa7K,MAAO,KACtD,CAAE4K,MAAO,OAAQC,WAAY,OAAQ7K,MAAO,MAyKpB8K,cAxJC,SAACjJ,GAC1B8B,QAAQC,IAAI/B,EAAMsD,KAAKgC,WACvBD,EAAYrF,EAAMsD,KAAKgC,YAuJC4D,SAAU,qBAU5B,cAACjK,EAAA,EAAD,CAAMkC,MAAI,EAACuE,SAAO,EAACtE,GAAI,EAAG4C,WAAS,EAAnC,SACE,cAAC3C,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAMmG,SAjKC,SAACzH,GACpBA,EAAM0H,iBACW,KAAbT,GAIJnF,QAAQC,IAAIqD,GACZtD,QAAQC,IAAIkF,GACZlE,IACGC,KADH,UACWC,yBADX,UACkD,CAC9CqC,UAAW2B,EACX7B,OAAQA,EAAOuC,cACfjD,KAAMA,IAEPtB,MAAK,SAACC,GACLvB,QAAQC,IAAIsB,EAASC,MACrBxB,QAAQC,IAAIzG,GACZA,EAAMqJ,iBAAiBtB,EAASC,KAAKoB,MACrCpJ,EAAMsJ,gBAAe,GACrB0C,EAAc,wDAEfM,OAAM,SAAUlL,GACXA,EAAM2G,UAERiE,EAAc5K,EAAM2G,SAASC,KAAK5G,MAAMmL,QAAQrC,KAAK,OACrD1D,QAAQC,IAAIrF,EAAM2G,SAASC,MAC3BxB,QAAQC,IAAIrF,EAAM2G,SAASyE,QAC3BhG,QAAQC,IAAIrF,EAAM2G,SAAS0E,UAClBrL,EAAMsL,QAEflG,QAAQC,IAAIrF,EAAMsL,SAGlBlG,QAAQC,IAAI,QAASrF,EAAMmL,aA9B/BP,EAAc,sBA8JJ,SACE,cAACW,GAAA,EAAD,CACEnE,UAAU,WACVpH,MAAOA,EACPmB,UAAWf,EAAQqM,YAHrB,SAKE,eAAClK,EAAA,EAAD,CAAM+E,WAAS,EAAC0B,SAAO,EAAC/G,QAAS,EAAjC,UACE,cAACM,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC4G,GAAA,EAAD,CAAWpE,UAAU,SAArB,0BAGA,eAACqE,GAAA,EAAD,CACE/I,aAAW,OACXoC,KAAK,mBACLG,MAAO+C,EACPzE,SAjMH,SAACD,GACxBgH,EAAQhH,EAAMoI,OAAOzG,QAiMK0G,KAAG,EALL,UAOE,cAACC,GAAA,EAAD,CACE3G,MAAM,eACN4G,QAAS,cAACC,GAAA,EAAD,IACTjC,MAAM,iBAER,cAAC+B,GAAA,EAAD,CACE3G,MAAM,cACN4G,QAAS,cAACC,GAAA,EAAD,IACTjC,MAAM,0BAMhB,cAACtH,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACjC,EAAA,EAAD,CACEwJ,KAAK,SACL3K,QAAQ,YACRT,MAAM,UACN2G,WAAW,EAJb,iCASF,cAAC0E,GAAA,EAAD,UAAiBvB,yB,6BCvQ1B+B,GAAoB,oBAGpBC,GAAuB,uBACvBC,GAAqB,qBAGrBC,GAA2B,2BAC3BC,GAA0B,0BAG1BC,GAA0B,0BAC1BC,GACX,oCACWC,GAA+B,+BAG/BC,GAA6B,6BAC7BC,GAAyB,yBACzBC,GAAgC,gC,+BCfvC7L,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvCwO,YAAa,CACX9M,QAAS,OACTyB,QAASnD,EAAMoD,QAAQ,GACvBsC,UAAW1F,EAAMoD,QAAQ,IAE3BqL,KAAM,CACJ3M,eAAgB,OAChBJ,QAAS,OACTsD,WAAY,SACZhD,MAAO,WAGT0M,KAAM,CACJC,WAAY3O,EAAMoD,QAAQ,GAC1BwL,OAAQ,eAyBGC,GArBS,SAAC9O,GAAW,IAC1BgI,EAA4BhI,EAA5BgI,KAAM+G,EAAsB/O,EAAtB+O,WAAYzJ,EAAUtF,EAAVsF,MACpB9D,EAAUmB,KACVqM,EAAY,CAChBhH,OACAiH,SAAS,YAEX,OACE,eAACC,GAAA,EAAD,CAAK3M,UAAWf,EAAQiN,YAAxB,UACE,cAAC,WAAD,yBAASlM,UAAWf,EAAQkN,MAAUM,GAAtC,aACG1J,KAEH,cAAC,KAAD,CACEd,QAASuK,EACT9M,MAAM,UACNM,UAAWf,EAAQmN,W,qBCIZQ,GAxCS,SAACnP,GAAW,IAC1BoP,EAAoCpP,EAApCoP,WAA0B9J,GAAUtF,EAAxBqP,aAAwBrP,EAAVsF,OADD,EAEDiD,mBAAS,GAFR,mBAE1B+G,EAF0B,KAEhBC,EAFgB,OAGHhH,mBAAS,KAHN,mBAG1BiH,EAH0B,UAajC,OARAxG,qBAAU,WACRuG,EAAYD,EAAW,GACnBF,GAAcA,EAAWK,QACvBL,EAAW,GAAGM,GAAKN,EAAW,GAAGM,EAAED,SAGxC,CAACL,IAGF,cAAC,KAAD,CACEpH,KAAMoH,EACNE,SAAUA,EACV/B,MAAO,CAAE1K,MAAO,OAAQ2K,OAAQ,OAAQgC,WACxCG,OAAQ,CACNrK,QACAsK,SAAS,EACTC,UAAU,EACVtM,OAAQ,CACNuM,EAAG,GACHC,EAAG,GACHC,EAAG,IACHC,EAAG,IACHC,IAAK,GAEPC,MAAO,CACLC,WAAW,GAEbC,MAAO,CACLD,WAAW,OCVfzN,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvCqQ,YAAa,CACXlN,QAASnD,EAAMoD,QAAQ,IAEzBkN,YAAa,CACXnN,QAASnD,EAAMoD,QAAQ,IAEzBmN,aAAc,CACZ3N,MAAO,OACPU,OAAQtD,EAAMoD,QAAQ,IAExBoN,cAAe,CACb9O,QAAS,OACTgE,UAAW1F,EAAMoD,QAAQ,IAE3BkB,OAAQ,CACNqK,WAAY3O,EAAMoD,QAAQ,IAE5BqN,YAAa,CACXlB,QAAS,SAuJEmB,GAnJM,SAAC3Q,GACpB,IClDgC4Q,EDkD1BC,EAAgB,KACdzG,EAAYpK,EAAZoK,QACF5I,EAAUmB,KACVmO,EAAWC,eAJa,EAKYxI,oBAAS,GALrB,mBAKvByI,EALuB,KAKRC,EALQ,OAM4BC,cACxD,SAACC,GAAD,OAAWA,EAAMC,UADXC,EANsB,EAMtBA,kBAAmBC,EANG,EAMHA,2BAGrBlC,EAAa8B,cC1DaN,ED0DkBxG,EC1DR,SAAC+G,GAAW,IAC9CI,EAAqBJ,EAAM/B,WAA3BmC,iBAEFC,EAASZ,EAAOvM,KAAI,SAAA6B,GACxB,MAAO,CACLwJ,EAAG,GACH+B,EAAG,GACHpE,KAAM,UACNjE,KAAM,QACNlD,WAQJ,OAJAqL,EAAiBG,SAAQ,SAACC,EAAIC,GAC5BJ,EAAOI,EAAIhB,EAAOnB,QAAQC,EAAEmC,KAAK5J,KAAK6J,MAAMF,EAAIhB,EAAOnB,SACvD+B,EAAOI,EAAIhB,EAAOnB,QAAQgC,EAAEI,KAAKF,MAE5BH,KDgCuB,EAUqBN,aCvCd,SAAAN,GAAM,OAAI,SAACO,GAAW,IACnDY,EAAuBZ,EAAM/B,WAA7B2C,mBAEJP,EAASZ,EAAOvM,KAAI,SAAA6B,GACtB,MAAO,CAACA,MAOV,OALAsL,EAAOQ,QAAQ,CAAC,WAEhBD,EAAmBL,SAAQ,SAACC,EAAIC,GAC9BJ,EAAOI,EAAIhB,EAAOnB,OAAS,GAAGoC,KAAKF,MAE9B,CAACH,EAAQO,EAAmBtC,SD6BjCwC,CAAwB7H,IAXI,mBAUvB8H,EAVuB,KAUAC,EAVA,KAcxBC,EAAuBC,uBAE3B,kBACEvB,EAAS,CACPzD,KAAMY,GACNqE,QAAS,CACPjD,aAAcwB,GAAkBzG,IAAO,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAASqF,SAAW,QAGrE,CAACqB,IAGGyB,EAAsBF,uBAC1B,kBAAMvB,EAAS,CAAEzD,KAAMa,OACvB,CAAC4C,IAGG0B,EAAeH,uBACnB,SAACI,GAAD,OACE3B,EAAS,CACPzD,KAAMe,GACNkE,QAASG,MAEb,CAAC3B,IAGG4B,EAAoBL,uBACxB,SAACI,GAAD,OACE3B,EAAS,CAAEzD,KAAMmB,GAA+B8D,QAAS,OAC3D,CAACxB,IAGG6B,EAAiBN,uBACrB,kBAAMvB,EAAS,CAAEzD,KAAMgB,GAA8BiE,QAAS,OAC9D,CAACxB,IA+BH,OACE,cAACnN,EAAA,EAAD,UACE,cAACoC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACvD,EAAA,EAAD,CAAY+F,UAAU,KAAK9F,QAAQ,KAAKT,MAAM,YAA9C,qCAGA,eAACiN,GAAA,EAAD,CAAK3M,UAAWf,EAAQ+O,YAAxB,UACE,eAACrB,GAAA,EAAD,CAAK3M,UAAWf,EAAQgP,aAAxB,UACE,eAACtB,GAAA,EAAD,CAAK3M,WAAY8O,GAAqB7P,EAAQkP,YAA9C,UACE,cAACkC,GAAA,EAAD,CACEC,QAAS7B,EACTrM,SAAU,WAvCxBsM,GAAkBD,IAwCJ8B,WAAY,CAAE,aAAc,wBAC3B,IALL,kBAQC1D,GAAcA,EAAWK,QAAUuB,EAClC5B,EAAW/K,KAAI,SAAC2D,GAAD,OACb,cAAC,GAAD,CACE1C,MAAO0C,EAAK9B,KACZmJ,aAAcwB,EACdzB,WAAY,CAACpH,GACbqJ,kBAAmBA,OAIvB,cAAC,GAAD,CACEhC,aAAcwB,EACdzB,WAAYA,EACZiC,kBAAmBA,OAIzB,eAACnC,GAAA,EAAD,CAAK3M,UAAWf,EAAQiP,cAAxB,UACE,cAAC5M,EAAA,EAAD,CACEnB,QAAQ,YACRT,MAAM,UACNM,UAAWf,EAAQ+C,OACnBC,QAAS,kBA9DrBgC,QAAQC,IAAI,YAAa4K,QACrBA,GACFmB,GAAa,GACbD,MAEAI,IACAP,OAoDQ,SAMGf,EAAoB,OAAS,SAEhC,cAACxN,EAAA,EAAD,CACEnB,QAAQ,WACRsB,UAAWqN,EACX9O,UAAWf,EAAQ+C,OACnBC,QAAS,kBA3DhB8M,GAEDoB,SAGJF,GAAclB,IAkDJ,SAMGA,EAA6B,iBAAmB,cAGrD,cAACpC,GAAA,EAAD,UACGiD,EACC,cAAC,GAAD,CACEnK,KAAMkK,EACN5M,MAAK,gCAA2B6M,EAA3B,WACLpD,WA7DQ,WACtB2D,OA8Dc,kB,mBE/IHK,GAzCO,SAAC/S,GAkCrB,OACE,cAACyC,EAAA,EAAD,CAAYwD,MAAM,SAASvD,QAAQ,KAAK8F,UAAU,KAAlD,SAlCF,SAAoBR,EAAMgL,GACxB,GAAoB,IAAhBhL,EAAKyH,OACP,MAAO,aAGLuD,EAAgBhL,EAAKyH,SACvBuD,EAAgBhL,EAAKyH,OAAS,GAIhC,IADA,IAAIwD,EAAI,GACCrB,EAAI5J,EAAKyH,OAASuD,EAAepB,EAAI5J,EAAKyH,OAAQmC,IACrD5J,EAAK4J,GAAGsB,kBAAkBD,EAC5BA,EAAEjL,EAAK4J,GAAGsB,iBAAmB,EAE7BD,EAAEjL,EAAK4J,GAAGsB,gBAAkB,EAMhC,IAFA,IAAIzP,EAAQ,EACR0P,EAAM,EACV,MAA2B1J,OAAO2J,QAAQH,GAA1C,eAA8C,CAAC,IAAD,sBAAlCI,EAAkC,KAA7BhN,EAA6B,KACxCA,EAAQ8M,IACVA,EAAM9M,EACN5C,EAAQ4P,GAIZ,OAAIF,EAAMH,EAAgB,EACjB,MAEFvP,EAKJ6P,CAAWtT,EAAMgI,KAAMhI,EAAMgT,kBC7BhCO,GAAa,EAEX5Q,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC+G,SAAU,CACRrF,QAAS,OACTsD,WAAY,SACZgC,YAAahH,EAAMoD,QAAQ,GAC3B6D,cAAejH,EAAMoD,QAAQ,IAE/BT,KAAM,CACJC,MAAO,SAET2Q,WAAY,CACV3Q,MAAO,QAET4Q,YAAa,CACX5Q,MAAO,IAETS,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,IAE3B8D,SAAU,CACR5D,OAAQtD,EAAMoD,QAAQ,GACtB+D,UAAW,cAaf,IAAMsM,GAAsB,SAC1BhP,EACAiP,EACAC,EACAC,EACAC,GAEAP,GAAa,EACbK,EAAkB,IAClBC,GAAe,GACfE,MAAMJ,EAAK,CACTK,OAAQ,QACPlM,MAAK,SAACC,GACP,IAAMkM,EAASlM,EAASmM,KAAKC,YAC7BL,EAAUG,GACV,IAAM7C,EAAS,IAAIgD,eAAe,CAChCC,MADgC,SAC1BC,IAEJ,SAASzC,IAEPoC,EAAOM,OAAOzM,MAAK,YAAsB,IAAnB0M,EAAkB,EAAlBA,KAAMnO,EAAY,EAAZA,MAE1B,GAAImO,EAIF,OAFAX,GAAe,QACfS,EAAWG,QAIb,IADA,IAAIC,EArChB,SAAoBC,GAClB,IAAID,EAAUE,OAAOC,aAAaC,MAAM,KAAMH,GAAOrO,MAAM,MAG3D,OAFAoO,EAAQK,MAEDL,EAAQrQ,KAAI,SAACqL,GAClB,OAAOsF,KAAKC,MAAMvF,MAgCIwF,CAAW7O,GAChBuL,EAAI,EAAGA,EAAI8C,EAAQjF,OAAQmC,IAClCpL,QAAQC,IAAIiO,EAAQ9C,IACpB8C,EAAQ9C,GAAGxE,GAAKmG,GAChBA,IAAc,EACdK,GAAkB,SAAClE,GAAD,6BAAWA,GAAX,CAAcgF,EAAQ9C,QAG1CC,OAIJA,MAIJ,OAAO,IAAIsD,SAAS/D,EAAQ,CAAE3E,QAAS,CAAE,eAAgB,mBAW7D,IAqIe2I,GArIC,SAACpV,GAAW,IAAD,EACWsI,IAAMC,SAAS,IAD1B,mBAClB0D,EADkB,KACNC,EADM,OAEa5D,IAAMC,UAAS,GAF5B,mBAElB8M,EAFkB,KAELxB,EAFK,OAGGvL,IAAMC,WAHT,mBAGlB0L,EAHkB,KAGVH,EAHU,OASexL,IAAMC,SAAS,GAT9B,mBASlB+M,EATkB,KASJC,EATI,KAWnB/T,EAAUmB,KACFzC,cAOd,OACE,qBAAKqC,UAAWf,EAAQoB,KAAxB,SACE,cAACmD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,sBAAKzD,UAAWf,EAAQ8B,SAAxB,UACE,cAACK,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACrD,EAAA,EAAD,CACEwD,MAAM,SACNuC,UAAU,KACV9F,QAAQ,KACRT,MAAM,YAJR,sCAUF,qBAAKM,UAAWf,EAAQ8B,SAAxB,SACE,cAACwB,EAAA,EAAD,CAASpC,QAAQ,aAGnB,cAACiB,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACGuP,EACC,qBAAK9S,UAAWf,EAAQwF,SAAxB,SACE,cAACnD,EAAA,EAAD,CACEC,aAAW,aACX7B,MAAM,UACNS,QAAQ,YACRkG,WAAW,EACXpE,QAAS,YAtD7B,SAA6BE,EAAOuP,EAAQJ,GAE1CrN,QAAQC,IAAIwN,GACZA,EAAOuB,SACP3B,GAAe,GAmDK4B,CACE,EACAxB,EACAJ,IATN,2BAiBF,qBAAKtR,UAAWf,EAAQwF,SAAxB,SACE,cAACnD,EAAA,EAAD,CACEC,aAAW,aACX7B,MAAM,UACNS,QAAQ,YACRkG,WAAW,EACXpE,QAAS,WACPkP,GACE,EADiB,UAEd/L,yBAFc,WAGjBuE,EACA2H,EACAC,IAXN,iCAsBR,cAACnQ,EAAA,EAAD,CAAMkC,MAAI,EAAC6P,aAAa,SAAS5P,GAAI,GAArC,SACE,cAAC,GAAD,CACEkC,KAAMiE,EACN+G,cAAesC,MAInB,cAACxQ,EAAA,EAAD,CAASpC,QAAQ,WACjB,qBAAKH,UAAWf,EAAQ8B,SAAxB,SACE,eAACK,EAAA,EAAD,CAAM+E,WAAS,EAACrF,QAAS,EAAGsF,MAAI,EAAC1D,WAAW,SAA5C,UACE,cAACtB,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,SACE,eAACrD,EAAA,EAAD,CAAYwD,MAAM,SAASuC,UAAU,KAAK9F,QAAQ,KAAlD,0BACgB,SAIlB,cAACiB,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,SACE,qBAAKvD,UAAWf,EAAQgS,WAAxB,SACE,cAACmC,GAAA,EAAD,CACEtP,MAA+B,kBAAjBiP,EAA4BA,EAAe,EACzD3Q,SAxFqB,SAACD,EAAOkR,GAC7CpP,QAAQC,IAAImP,GACZL,EAAgBK,IAuFAC,kBAAgB,eAChBC,IAAK,EACL3C,IAAK,SAKX,cAACxP,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,SACE,cAACrD,EAAA,EAAD,CAAYwD,MAAM,SAASuC,UAAU,KAAK9F,QAAQ,KAAlD,SACG4S,WAKT,qBAAK/S,UAAWf,EAAQ8B,SAAxB,SACE,qBAAKiK,MAAO,CAAEC,OAAQ,IAAK3K,MAAO,QAAlC,SACE,cAAC,KAAD,CACE8F,KAAMsD,EACN7B,QArHM,CAClB,CAAEqD,MAAO,KAAMC,WAAY,KAAM7K,MAAO,IACxC,CAAE4K,MAAO,cAAeC,WAAY,WAAY7K,MAAO,KACvD,CAAE4K,MAAO,iBAAkBC,WAAY,iBAAkB7K,MAAO,MAmHpD+K,SAAU,GACVmI,UAAW,CAAC,CAAEtI,MAAO,KAAM7D,KAAM,uB,mBCxN3CjH,GAAYlB,aAAW,SAACxB,GAAD,MAAY,CACvC2C,KAAM,CACJjB,QAAS,QAEXkF,QAAS,CACPlF,QAAS,OACTmF,cAAe,UAEjB5D,QAAS,CACP6D,KAAM,YAERC,SAAU,CACRrF,QAAS,OACTsD,WAAY,SACZgC,YAAahH,EAAMoD,QAAQ,GAC3B6D,cAAejH,EAAMoD,QAAQ,IAE/BC,SAAU,CACRC,OAAQtD,EAAMoD,QAAQ,EAAG,IAE3B8D,SAAU,CACR5D,OAAQtD,EAAMoD,QAAQ,GACtB+D,UAAW,cAIT4O,GAAsB,SAACtR,EAAO8N,EAAcvD,GAChDzI,QAAQC,IAAI/B,GAEK,KAAbuK,IACFA,EAAW,QAEbzI,QAAQC,IAAIwI,GACZxH,IACGC,KADH,UACWC,yBADX,UACkD,CAC9CsH,SAAUA,EACVpH,WAAYnD,IAEboD,MAAK,SAACC,GACLvB,QAAQC,IAAIsB,EAASC,MACR,gBAATtD,IACF8N,GAAa,GACbhM,QAAQC,IAAI/B,IAED,eAATA,IACF8N,GAAa,GACbhM,QAAQC,IAAI/B,QAqHLuR,GAvFA,SAACjW,GACd,IAAMwB,EAAUmB,KADQ,GAEVzC,cACsBoI,IAAMC,SAASvI,EAAM+E,oBAHjC,mBAGLuC,GAHK,aAIUgB,IAAMC,UAAS,GAJzB,mBAIjB2N,EAJiB,KAIN1D,EAJM,OAKQlK,IAAMC,SAAS,gBALvB,mBAKjB0G,EALiB,KAKPkH,EALO,KAWxB,OACE,cAACpQ,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,qBAAKzD,UAAWf,EAAQ8B,SAAxB,SACE,cAACb,EAAA,EAAD,CAAY+F,UAAU,KAAK9F,QAAQ,KAAKT,MAAM,YAA9C,uCAIF,cAAC6C,EAAA,EAAD,CAASpC,QAAQ,WACjB,qBAAKH,UAAWf,EAAQ2F,SAAxB,SACE,cAAC1E,EAAA,EAAD,CAAYC,QAAQ,YAAYT,MAAM,oBAExC,cAAC8D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACrC,EAAA,EAAD,CAAM+E,WAAS,EAAC0B,SAAO,EAAC/G,QAAS,EAAGyC,GAAI,EAAxC,UACE,cAACnC,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,GAAf,SACE,cAACqH,GAAA,EAAD,CACEC,GAAG,iBACH1K,QAAQ,WACR2D,MAAO4I,EACPtK,SAxBa,SAACD,GAC5ByR,EAAYzR,EAAMoI,OAAOzG,QAwBXuC,WAAW,EACX5E,SAAUkS,MAGd,cAACvS,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,UACiB,IAAdoQ,EACC,cAACrS,EAAA,EAAD,CACEC,aAAW,SACXpB,QAAQ,YACRkG,WAAW,EACX5E,UAAWsD,EACX9C,QAAS,WACPwR,GACE,eACAxD,EACAvD,IATN,oBAgBA,cAACpL,EAAA,EAAD,CACEC,aAAW,QACXpB,QAAQ,YACRkG,WAAW,EACXpE,QAAS,WACPwR,GAAoB,cAAexD,IALvC,8BAaJ,cAAC7O,EAAA,EAAD,CAAMkC,MAAI,EAACC,GAAI,EAAf,SACE,cAACjC,EAAA,EAAD,CACEC,aAAW,YACXpB,QAAQ,YACRkG,WAAW,EACXpE,QAAS,YAjGG,SAACE,EAAOuK,GACpCzI,QAAQC,IAAI,UAAGkB,yBAAH,aAA8CsH,GAC1D8E,MAAM,UAAGpM,yBAAH,aAA8CsH,EAAU,CAC5D+E,OAAQ,MACRvH,QAAS,CAAE,eAAgB,qBAE1B3E,MAAK,SAACC,GAAD,OAAcA,EAASqO,UAC5BtO,MAAK,SAACsO,GAEL,IAAMzC,EAAM0C,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,KAC3C1H,EAAO+H,SAASC,cAAc,KACpChI,EAAKiI,KAAOhD,EACZjF,EAAKkI,aAAa,WAAY3H,EAAW,QAGzCwH,SAASvC,KAAK2C,YAAYnI,GAG1BA,EAAKoI,QAGLpI,EAAKqI,WAAWC,YAAYtI,MA6EduI,CAAsB,EAAYhI,IALtC,qCC9BDiI,GA1GF,WACX,IAAMpG,EAAWC,eADA,EAEmBzI,IAAMC,SAAS,GAFlC,mBAEV4O,EAFU,KAEEC,EAFF,OAGyB9O,IAAMC,SAAS,GAHxC,mBAGVkD,EAHU,KAGKpC,EAHL,OAI6Bf,IAAMC,SAAS,GAJ5C,mBAIVgD,EAJU,KAIO1B,EAJP,OAKavB,IAAMC,SAAS,IAL5B,mBAKV6B,EALU,KAKDZ,EALC,OAMelB,IAAMC,SAAS,IAN9B,mBAMVoD,EANU,KAMA5B,EANA,OAOqBzB,IAAMC,UAAS,GAPpC,mBAOV3E,EAPU,KAOG0F,EAPH,OAQiChB,IAAMC,UAAS,GARhD,mBAQVxD,EARU,KAQSwC,EART,OAU0B8P,eAAnCC,EAVS,EAUTA,gBACAjG,GAXS,EAUQkG,cACKrG,cAAY,SAACC,GAAD,OAAWA,EAAMC,UAAnDC,mBACAmG,EAAiBtG,cAAY,SAACC,GAAD,OAAWA,EAAMsG,UAA9CD,aAQRxO,qBAAU,WACRvB,IAAMwB,IAAN,UAAatB,yBAAb,UAAoD,IAAIG,MAAK,SAACC,GAC5DR,EAAqBQ,EAASC,KAAKiC,WACnCX,EAAevB,EAASC,KAAKuB,iBAKjC,IAAMmO,EAAY,SAACC,GACbtG,IACFsG,EAAEvL,iBACFuL,EAAEC,YAAc,KAIdrF,EAAsBF,uBAC1B,kBAAMvB,EAAS,CAAEzD,KAAMa,OACvB,CAAC4C,IAIH9H,qBAAU,WACR,GAAIqI,EAGF,OAFAgF,OAAOwB,iBAAiB,eAAgBH,GACxCrB,OAAOwB,iBAAiB,SAAUtF,GAC3B,WACL8D,OAAOyB,oBAAoB,eAAgBJ,GAC3CrB,OAAOyB,oBAAoB,SAAUvF,GACrCA,OAGH,CAAClB,IAEJrI,qBAAU,WACJwO,GACFF,EAAgBE,EAAc,CAAE9U,QAAS,cAE1C,CAAC8U,IAEJ,IAAMhW,EAAUmB,IAChB,OACE,sBAAKJ,UAAWf,EAAQoB,KAAxB,UACE,cAACmV,GAAA,EAAD,IACA,eAACpU,EAAA,EAAD,CAAM+E,WAAS,EAACsP,UAAU,SAASC,QAAQ,SAAShT,WAAW,SAA/D,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CACEN,SApDR,SAAsBiR,GAChBuB,IAAevB,GACjBwB,EAAcxB,IAmDVhS,YAAaA,EACbmB,kBAAmBA,IAErB,uBAAMxC,UAAWf,EAAQ0B,QAAzB,UACkB,IAAfiU,EACC,cAAC,GAAD,CACE9N,iBAAkBA,EAClBG,WAAYA,EACZK,mBAAoBA,EACpBE,YAAaA,EACbT,eAAgBA,EAChB1F,YAAaA,EACb2D,qBAAsBA,EACtBxC,kBAAmBA,IAEnB,KACY,IAAfoS,EACC,cAAC,GAAD,CACE9N,iBAAkBA,EAClBkC,gBAAiBA,EACjBE,cAAeA,EACfE,SAAUA,EACVrC,eAAgBA,IAEhB,KACY,IAAf6N,EACkB,eAAjB1L,EACE,cAAC,GAAD,IAEA,cAAC,GAAD,CAAcrB,QAASA,IAEvB,KACY,IAAf+M,EAAmB,cAAC,GAAD,IAAa,e,uEC5GjCe,I,aAMeC,IANzB,SAAUD,GAAeE,GAAzB,kEACE,OADF,SACQC,aAAI,CAAEhL,KAAMW,GAAoBsE,QAAS8F,EAAO9F,UADxD,OAEE,OAFF,SAEQgG,aAAM,KAFd,OAGE,OAHF,SAGQD,aAAI,CAAEhL,KAAMW,GAAoBsE,QAAS,OAHjD,wCAMe,SAAU6F,KAAV,kEACb,OADa,SACPI,aAAUxK,GAAsBmK,IADzB,wC,2DCbFM,GAAb,oDACE,WAAYC,EAAW1Q,GAAW,IAAD,+BAC/B,gBAEOwE,QADW,MAAdkM,EACa1Q,EAASwE,QAET,yCAEjB,EAAKrG,KAAO,EAAKwS,YAAYxS,KAC7B,EAAKuS,UAAYA,EARc,EADnC,uBAAyCE,QCgE1BC,G,WAtDb,WAAYC,GAAW,qBAErBC,KAAK7E,YAAS8E,EACdD,KAAKD,SAAWA,E,wLAQhBrS,QAAQC,IAAI,oB,kBAEOsN,MAAM+E,KAAKD,U,OAA5B9Q,E,6DAEAvB,QAAQC,IAAR,MACM,IAAI+R,GAAoB,IAAK,CACjCjM,QAAS,gC,WAGRxE,EAASiR,G,uBACN,IAAIR,GAAoBzQ,EAASyE,OAAQ,CAC7CD,QAASxE,EAASkR,a,QAGtBzS,QAAQC,IAAI,kBACZqS,KAAK7E,OAASlM,EAASmM,KAAKC,Y,kQAIxB2E,KAAK7E,SACP6E,KAAK7E,OAAOuB,SACZsD,KAAK7E,YAAS8E,G,yLAIMG,G,wFAAY7J,E,+BAAe,E,uBAOjByJ,KAAK7E,OAAOM,O,mBAAlClO,E,EAAAA,O,EAAOmO,K,mDAEf2E,GAAMrI,SAAS,CACbzD,KAAM6L,EACN5G,QAAS,CAAE8G,MAAO,IAAIC,WAAWhT,EAAMiT,QAASjK,kB,8HCvD3CkK,GAFe5R,yBCGjB6R,QAAqBT,E,aCQtBU,I,aAuBeC,IAvBzB,SAAUD,GAAkBrB,GAA5B,0EAGI,OAHJ,kBAE6BA,QAF7B,IAE6BA,OAF7B,EAE6BA,EAAQ9F,QAAzBjD,EAFZ,EAEYA,aAFZ,SAGUsK,aAAK,CAACH,GAAoB,mBAHpC,OAII,OAJJ,SAIUnB,aAAI,CAAEhL,KAAMc,GAAyBmE,SAAS,IAJxD,OAKI,OALJ,SAKUqH,aACJ,CAACH,GAAoB,qBACrBlL,GACAe,GARN,4DAWI7I,QAAQoT,MAAR,QACI,gBAAapB,IAZrB,iBAaM,OAbN,UAaYH,aAAI,CAAEhL,KAAMU,GAAsBuE,QAAS,KAAE/F,UAbzD,gCAeM,OAfN,UAeY8L,aAAI,CACRhL,KAAMU,GACNuE,QAAS,+BAjBjB,uDAuBe,SAAUoH,KAAV,kEACb,OADa,SACPG,aAAW5L,GAA0BwL,IAD9B,wC,iBC7BLK,I,aASeC,IATzB,SAAUD,GAAiB1B,GAA3B,kEAEI,OAFJ,kBAEUuB,aAAK,CAACH,GAAoB,kBAFpC,OAGI,OAHJ,SAGUnB,aAAI,CAAEhL,KAAMc,GAAyBmE,SAAS,IAHxD,uDAKI9L,QAAQoT,MAAR,MALJ,sDASe,SAAUG,KAAV,kEACb,OADa,SACPF,aAAW3L,GAAyB4L,IAD7B,wC,iBCTUE,IAAV,SAAUA,KAAV,kEACb,OADa,SACPC,aAAI,CACRC,aAAKR,IACLQ,aAAKH,MAHM,wC,iBCELI,I,aAkDeC,IAlDzB,SAAUD,GAA+B/B,GAAzC,kGAMqD,OANrD,WAEoCA,EAAO9F,QAA/B8G,EAFZ,EAEYA,MAAO/J,EAFnB,EAEmBA,aACTgL,EAAejB,GAASA,EAAM3J,QAAW,EAC3C6K,EAA0B,GAJlC,SAM2DC,cACrD,SAACpJ,GAAD,OAAWA,EAAM/B,cAPvB,OAS2C,OAT3C,SAMYmC,EANZ,EAMYA,iBAAkBQ,EAN9B,EAM8BA,mBAN9B,UASiDwI,cAC3C,SAACpJ,GAAD,OAAWA,EAAMC,UAVvB,QAeI,GAfJ,SASYE,EATZ,EASYA,2BAGR9K,QAAQC,IAAI,SAAU4T,EAAW,IAG7BA,GAAehL,EACjBiL,EAAuB,aAAOlB,QACzB,GAAI7H,EAAiB9B,QAAUJ,EAIpC,IAFAiL,EAAuB,aAAO/I,GAFoB,EAGtB,CAAC,EAAGA,EAAiB9B,OAAQ,GAApD+K,EAH6C,KAGvCC,EAHuC,KAGhCC,EAHgC,KAI3CF,EAAOC,GACRA,EAAQD,EAAOH,EACjBC,EAAwBE,GAAQjJ,EAAiBiJ,EAAOH,IAExDC,EAAwBE,GAAQpB,EAAMsB,GACtCA,KAEFF,SAGFF,EAAuB,uBAAO/I,GAAP,aAA4B6H,IAGrD,OAlCJ,UAkCUf,aAAI,CACRhL,KAAMkB,GACN+D,QAASgI,IApCf,YAuCQhJ,EAvCR,iBAwCM,OAxCN,UAwCY+G,aAAI,CACRhL,KAAMmB,GACN8D,QAAQ,GAAD,oBAAMP,GAAN,aAA6BqH,MA1C5C,0DA8CI5S,QAAQoT,MAAR,MA9CJ,uDAkDe,SAAUQ,KAAV,kEACb,OADa,SACPP,aAAWvL,GAA4B6L,IADhC,wC,iBCrDUQ,IAAV,SAAUA,KAAV,kEACb,OADa,SACPV,aAAI,CACRC,aAAKE,MAFM,wC,iBCGUQ,IAAV,SAAUA,KAAV,kEACb,OADa,SACPX,aAAI,CACRC,aAAKF,IACLE,aAAK/B,IACL+B,aAAKS,MAJM,wCCHf,IAAME,GAAe,CACnBC,cAAc,GAID,SAASC,KAAwC,IAA/B5J,EAA8B,uDAAtB0J,GAAczC,EAAQ,uCAC7D,OAAQA,EAAO/K,MACb,KAAKS,GACH,OAAO,2BACFqD,GADL,IAEE2J,aAAc1C,EAAO9F,UAAW,IAEpC,QACE,OAAOnB,GCfb,IAAM0J,GAAe,CACnBrD,aAAc,MAGD,SAASuD,KAAwC,IAA/B5J,EAA8B,uDAAtB0J,GAAczC,EAAQ,uCAC7D,OAAQA,EAAO/K,MACb,KAAKW,GACH,OAAO,2BACFmD,GADL,IAEEqG,aAAcY,EAAO9F,UAEzB,QACE,OAAOnB,GCZb,IAAM0J,GAAe,CACnBxJ,mBAAmB,EACnBC,4BAA4B,GAGf,SAAS0J,KAA0C,IAA/B7J,EAA8B,uDAAtB0J,GAAczC,EAAQ,uCAC/D,OAAQA,EAAO/K,MACb,KAAKc,GACH,OAAO,2BACFgD,GADL,IAEEE,kBAAmB+G,EAAO9F,UAE9B,KAAKlE,GACH,OAAO,2BACF+C,GADL,IAEEG,2BAA4B8G,EAAO9F,UAEvC,QACE,OAAOnB,GCdb,IAAM0J,GAAe,CACnBtJ,iBAAkB,IAAI8H,WACtBtH,mBAAoB,IAAIsH,YAGX,SAASjK,KAA0C,IAA/B+B,EAA8B,uDAAtB0J,GAAczC,EAAQ,uCAC/D,OAAQA,EAAO/K,MACb,KAAKgB,GACH,OAAO,2BACF8C,GADL,IAEEI,iBAAkB,IAAI8H,WACtBtH,mBAAoB,IAAIsH,aAE5B,KAAK9K,GACH,OAAO,2BACF4C,GADL,IAEEI,iBAAiB,aAAK6G,EAAO9F,WAEjC,KAAK9D,GACH,OAAO,2BACF2C,GADL,IAEEY,mBAAmB,aAAKqG,EAAO9F,WAEnC,QACE,OAAOnB,GCvBb,IAOe8J,GAPU,kBAAMC,2BAAgB,CAC7CtY,KAAMmY,GACNtD,UACArG,OAAQ4J,GACR5L,iBCHI+L,GAAiBC,eAGjBC,GAAa,CACjBF,IAGIG,GAAoBC,uBAAmB,WAAnB,GACxBC,mBAAe,WAAf,EAAmBH,KADK,OANR,KAWZI,GAAaR,KAEb9B,GAAQuC,uBACZD,GACAH,IAGFH,GAAeQ,IAAIf,IAEJzB,WC1BI,CAEjByC,gBAAiB,KACjBC,WAAY,gBAEZC,KALiB,SAKZC,GACHtU,IAAMuU,SAASD,QAAUA,GAG3BE,oBATiB,WAUfnD,KAAK8C,gBAAkBnU,IAAMyU,aAAanU,SAASoU,KAAI,SAACpU,GAAD,OAAcA,IAA9C,iCAAAqU,EAAA,MACrB,WAAOhb,GAAP,UAAAgb,EAAA,yDAC+B,MAAzBhb,EAAMsL,QAAQF,OADpB,oBAEQpL,EAAM0H,OAAO6K,IAAI0I,SAAS,QAFlC,sBAIYjb,EAJZ,aAUQA,EAVR,2CADqB,wDAgBzBkb,sBA1BiB,WA4Bf7U,IAAMyU,aAAanU,SAASwU,MAAMzD,KAAK8C,kBAGzCY,oBA/BiB,SA+BGnJ,GAClB5L,IAAMuU,SAASvP,QAAQgQ,OAAOC,cAAgBrJ,GAGhDsJ,eAnCiB,SAmCFtP,GACb5F,IAAMuU,SAASvP,QAAQmQ,YAAcvP,GAGvCwP,aAvCiB,WAwCfpV,IAAMuU,SAASvP,QAAQgQ,OAAS,IAGlCxT,IA3CiB,SA2Cb6T,GACF,OAAOrV,IAAMwB,IAAI6T,IAGnBpV,KA/CiB,SA+CZoV,EAAU9U,GACb,OAAOP,IAAMC,KAAKoV,EAAU9U,IAG9BqQ,IAnDiB,SAmDbyE,EAAU9U,GACZ,OAAOP,IAAM4Q,IAAIyE,EAAU9U,IAG7B+U,OAvDiB,SAuDVD,GACL,OAAOrV,IAAMsV,OAAOD,IAGtBE,cA3DiB,SA2DHhV,GACZ,OAAOP,IAAMO,IAGfiV,kBA/DiB,SA+DCjV,GAGhB,OAFA8Q,KAAKoE,gBACLpE,KAAK6D,eAAe,oBACblV,IAAMO,MCvDN8T,KAAKvC,IdRdC,GAAqB,IAAIZ,GAAJ,UAAqBW,GAArB,YcYvB,IAkBe4D,GAlBH,WACV,OACE,cAAC,EAAD,UACE,cAAC,KAAD,CAAUhE,MAAOA,GAAjB,SACE,cAAC,KAAD,CACEiE,aAAc,CACZC,WAAY,QACZC,SAAU,OAEZC,iBAAmB,IALrB,SAOE,cAAC,GAAD,WCxBVC,IAASC,OACP,cAAC,GAAD,IACAhH,SAASiH,eAAe,W","file":"static/js/main.1c4d9686.chunk.js","sourcesContent":["import React from \"react\";\nimport { blueGrey, deepOrange, lightBlue, red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, MuiThemeProvider, useTheme, } from \"@material-ui/core/styles\";\n\nconst LightTheme = (props) => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800]),\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500]),\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600]),\n      },\n      secondaryRed: {\n        light: red[600],\n        main: red[700],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[600]),\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600]),\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n      record: {\n        light: red[900],\n        main: red[900],\n        dark: red[900],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Streaming Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  section1: {\n    margin: theme.spacing(2, 1),\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <InfoIcon />;\n    case 1:\n      return <AssessmentIcon />;\n    case 3:\n      return <SettingsIcon />;\n    case 4:\n      return <InboxIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst Connected = (props) => {\n  return (\n    <Grid>\n      {props.isConnected ? (\n        <Button color=\"primary\" variant=\"contained\" aria-label=\"connected\">\n          {props.text}: Connected\n        </Button>\n      ) : (\n        <Button variant=\"contained\" aria-label=\"disconnect\" disabled={true}>\n          {props.text}: Disconnected\n        </Button>\n      )}\n    </Grid>\n  );\n};\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Gateway Status\", \"Test Mode\", \"Record Mode\", \"Configure\"].map(\n            (text, index) => (\n              <ListItem button key={text} onClick={handleMenu(index)}>\n                <ListItemIcon>\n                  <InconSelector index={index}> </InconSelector>\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n          <div className={classes.section1}>\n            <Divider></Divider>\n          </div>\n          <ListItem>\n            <Connected\n              text=\"Device\"\n              isConnected={props.isConnected}\n            ></Connected>\n          </ListItem>\n          <ListItem>\n            <Connected\n              text=\"Video\"\n              isConnected={props.isCameraConnected}\n            ></Connected>\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 5, 5, 35),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import { Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    transform: \"scale(1.0)\",\n  },\n  title: {\n    fontSize: 20,\n    backgroundColor: \"#e0e0e0\",\n  },\n  pos: {\n    marginBottom: 2,\n    marginTop: 2,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.xs}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            color=\"textPrimary\"\n          >\n            {props.name}\n          </Typography>\n          {props.list ? (\n            <div className={classes.bullet}>\n              <List dense={true}>\n                {props.value.split(\",\").map((value) => (\n                  <ListItem>\n                    <ListItemText align=\"center\" primary={value} />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          ) : (\n            <Typography\n              align=\"center\"\n              className={classes.pos}\n              color=\"textSecondary\"\n            >\n              {props.value}\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SimpleCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Camera = (props) => {\n  console.log(props);\n  return (\n    <img\n      src={\"http://localhost:5555/stream-video\" + \"?\" + props.cameraKey}\n      alt=\"Camera Not Started.\"\n    />\n  );\n};\n\nexport default Camera;\n","import { Button, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport Camera from \"./Camera\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst handleCameraRequest = (\n  event,\n  setCameraView,\n  setIsCameraConnected,\n  setCameraKey\n) => {\n  console.log(event);\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}config-video`, {\n      camera_index: 0,\n      event_type: event,\n    })\n    .then((response) => {\n      console.log(response.data);\n      if (event == \"camera-on\") {\n        setCameraView(true);\n        setIsCameraConnected(true);\n        setCameraKey(Math.random().toString(36).substring(7));\n        console.log(\"caera event\");\n        console.log(event);\n      }\n      if (event == \"camera-off\") {\n        setCameraView(false);\n        setIsCameraConnected(false);\n        console.log(\"caera event\");\n        console.log(event);\n      }\n    });\n};\n\nconst WebCamera = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [cameraView, setCameraView] = React.useState(false);\n  const [cameraKey, setCameraKey] = React.useState(\"\");\n\n  /*  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}config-video`, {})\n      .then((response) => {\n        setCameraView(response.data.camera_on);\n        setRecording(response.data.camera_record);\n        //console.log(response.data);\n      });\n  });\n*/\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n            Video Source\n          </Typography>\n        </div>\n        <Camera\n          cameraKey={cameraKey}\n          cameraView={props.isCameraConnected}\n        ></Camera>\n        <Divider variant=\"middle\" />\n        <div className={classes.section2}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n        </div>\n\n        <div className={classes.details}>\n          <Grid container rows spacing={2}>\n            <Grid item xs={6}>\n              {props.isCameraConnected === false ? (\n                <Button\n                  aria-label=\"Start Camera\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={() => {\n                    handleCameraRequest(\n                      \"camera-on\",\n                      setCameraView,\n                      props.setIsCameraConnected,\n                      setCameraKey\n                    );\n                  }}\n                >\n                  Start Camera\n                </Button>\n              ) : (\n                <Button\n                  aria-label=\"Stop Camera\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={() => {\n                    handleCameraRequest(\n                      \"camera-off\",\n                      setCameraView,\n                      props.setIsCameraConnected,\n                      setCameraKey\n                    );\n                  }}\n                >\n                  Stop Camera\n                </Button>\n              )}\n            </Grid>\n          </Grid>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default WebCamera;\n","import { CardContent, Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { SimpleCard } from \"../SimpleCard\";\nimport { WebCamera } from \"../WebCamera\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Status = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [config, setConfig] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`).then((res) => {\n      setConfig(mapdata(res.data));\n    });\n  }, []);\n\n  const handleDisconnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => {\n      console.log(res.data);\n      setConfig(mapdata(res.data));\n    });\n  };\n\n  const handleConnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}connect`).then((res) => {\n      setConfig(mapdata(res.data));\n    });\n  };\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    props.setIsConnected(data.streaming);\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    props.setIsCameraConnected(data.camera_on);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    return data;\n  }\n  return (\n    <div class={classes.root}>\n      <Grid container rows spacing={6}>\n        <Grid item xs={6}>\n          <Card>\n            <CardContent>\n              <Grid container columns spacing={4}>\n                <Grid item xs={12} container rows spacing={2}>\n                  <SimpleCard\n                    name=\"Mode\"\n                    xs=\"6\"\n                    value={config.mode}\n                  ></SimpleCard>\n                  <SimpleCard\n                    name=\"Source\"\n                    xs=\"6\"\n                    value={config.source}\n                  ></SimpleCard>\n                </Grid>\n                <Grid item xs={12} container rows spacing={2}>\n                  <SimpleCard\n                    name=\"Device ID\"\n                    xs={6}\n                    value={config.device_id}\n                  ></SimpleCard>\n                  {config.mode === \"data_capture\" ? (\n                    <SimpleCard\n                      xs=\"6\"\n                      name=\"Sample Rate\"\n                      value={config.sample_rate}\n                    ></SimpleCard>\n                  ) : null}\n                </Grid>\n                <Grid item xs={12}>\n                  {config.mode === \"data_capture\" ? (\n                    <SimpleCard\n                      name=\"Sensor Columns\"\n                      value={config.column_location}\n                      list={true}\n                    ></SimpleCard>\n                  ) : null}\n                </Grid>\n                <Grid item xs={12}>\n                  <div className={classes.controls}>\n                    {props.isConnected ? (\n                      <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        aria-label=\"disconnect\"\n                        fullWidth={true}\n                        onClick={() => {\n                          handleDisconnectRequest(\"clicked\", setConfig);\n                        }}\n                      >\n                        Disconnect From Device\n                      </Button>\n                    ) : (\n                      <Button\n                        color=\"secondary\"\n                        variant=\"contained\"\n                        aria-label=\"connect\"\n                        fullWidth={true}\n                        onClick={() => {\n                          handleConnectRequest(\"clicked\", setConfig);\n                        }}\n                      >\n                        Connect To Device\n                      </Button>\n                    )}\n                  </div>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={6}>\n          <WebCamera\n            setIsCameraConnected={props.setIsCameraConnected}\n            isCameraConnected={props.isCameraConnected}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Status;\n","import Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  stepIcon: {\n    color: \"primary\",\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"Select Connection Type\",\n    \"Scan and Select Device ID\",\n    \"Select Mode\",\n    \"Click Configure Gateway\",\n  ];\n}\n\nconst HorizontalLabelPositionBelowStepper = (props) => {\n  const classes = useStyles();\n  const steps = getSteps();\n\n  let activeStep = null;\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label} color=\"primary\">\n            <StepLabel\n              active={true}\n              StepIconProps={{\n                classes: { root: classes.stepIcon },\n              }}\n            >\n              {label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","import { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport HorizontalLabelPositionBelowStepper from \"./Stepper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n}));\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(props.streamingSource);\n  const [mode, setMode] = React.useState(\n    props.streamingMode === \"results\" ? \"config-results\" : \"config\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n  const [scanHelperText, setScanHelperText] = React.useState(\"\");\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 0 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ];\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.value);\n  };\n\n  const handleModeChange = (event) => {\n    setMode(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.data.device_id);\n    setDeviceID(event.data.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}config`, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n        mode: mode,\n      })\n      .then((response) => {\n        console.log(response.data);\n        console.log(props);\n        props.setStreamingMode(response.data.mode);\n        props.setIsConnected(true);\n        setHelperText(\"Gateway Connected to device, now ready to stream.\");\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handleDeviceScan = (event) => {\n    console.log(event);\n    event.preventDefault();\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setDeviceRows(response.data);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setScanHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  // \"Configure the gateway to  use a Serial Connection to  connect to the remote  node.\" />\n  // \"Configure the gateway to  use a BLE Connection to connect to remote node.\"\n  // \"Configure the gateway to mock a node sending test data.\"\n  return (\n    <Card>\n      <CardContent>\n        <Grid container rows spacing={6}>\n          <HorizontalLabelPositionBelowStepper />\n          <Grid item columns xs={6} container alignItems=\"center\">\n            <Card>\n              <CardContent>\n                <form onSubmit={handleDeviceScan}>\n                  <FormControl component=\"fieldset\" error={error}>\n                    <Grid container columns spacing={2}>\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel>Connection Type</FormLabel>\n                            <RadioGroup\n                              aria-label=\"source\"\n                              value={source}\n                              onChange={handleRadioChange}\n                              row\n                            >\n                              <FormControlLabel\n                                value=\"SERIAL\"\n                                control={<Radio />}\n                                label=\"Serial\"\n                              />\n                              <FormControlLabel\n                                value=\"BLE\"\n                                control={<Radio />}\n                                label=\"BLE\"\n                              />\n                              <FormControlLabel\n                                value=\"TCPIP\"\n                                control={<Radio />}\n                                label=\"TCP/IP\"\n                              />\n                              <FormControlLabel\n                                value=\"TEST\"\n                                control={<Radio />}\n                                label=\"Test\"\n                              />\n                            </RadioGroup>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel component=\"legend\">Device ID:</FormLabel>\n                            <TextField\n                              id=\"outlined-basic\"\n                              variant=\"outlined\"\n                              value={deviceID}\n                              onChange={handleDeviceIDChange}\n                              fullWidth={true}\n                            />\n                          </CardContent>\n                        </Card>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          fullWidth={true}\n                        >\n                          Scan\n                        </Button>\n                      </Grid>\n\n                      <FormHelperText>{scanHelperText}</FormHelperText>\n                      <Grid item xs={12}>\n                        <div style={{ height: 350, width: \"100%\" }}>\n                          <DataGrid\n                            rows={deviceRows}\n                            columns={deviceColumns}\n                            onRowSelected={handleRowSelection}\n                            pageSize={4}\n                          />\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </FormControl>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item columns xs={6} container>\n            <Card>\n              <CardContent>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    component=\"fieldset\"\n                    error={error}\n                    className={classes.formControl}\n                  >\n                    <Grid container columns spacing={2}>\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel component=\"legend\">\n                              Device Mode:\n                            </FormLabel>\n                            <RadioGroup\n                              aria-label=\"mode\"\n                              name=\"Streaming Source\"\n                              value={mode}\n                              onChange={handleModeChange}\n                              row\n                            >\n                              <FormControlLabel\n                                value=\"DATA_CAPTURE\"\n                                control={<Radio />}\n                                label=\"Data Capture\"\n                              />\n                              <FormControlLabel\n                                value=\"RECOGNITION\"\n                                control={<Radio />}\n                                label=\"Recognition\"\n                              />\n                            </RadioGroup>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          fullWidth={true}\n                        >\n                          Configure Gateway\n                        </Button>\n                      </Grid>\n                      <FormHelperText>{helperText}</FormHelperText>\n                    </Grid>\n                  </FormControl>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Configure;\n","// root\nexport const SET_GLOBAL_LOADER = \"SET_GLOBAL_LOADER\";\n\n// errors\nexport const FETCH_DATA_ERROR_MSG = \"FETCH_DATA_ERROR_MSG\";\nexport const SET_DATA_ERROR_MSG = \"SET_DATA_ERROR_MSG\";\n\n// stream\nexport const START_STREAM_SENSOR_SAGA = \"START_STREAM_SENSOR_SAGA\";\nexport const STOP_STREAM_SENSOR_SAGA = \"STOP_STREAM_SENSOR_SAGA\";\nexport const SWITCH_STREAM_SENSOR_RECORD_SAGA =\n  \"SWITCH_STREAM_SENSOR_RECORD_SAGA\";\nexport const SET_IS_STREAMING_SENSOR = \"SET_IS_STREAMING_SENSOR\";\nexport const SET_IS_STREAMING_SENSOR_RECORDING =\n  \"SET_IS_STREAMING_SENSOR_RECORDING\";\nexport const SET_STREAM_SENSOR_DATA_RESET = \"SET_STREAM_SENSOR_DATA_RESET\";\n\n// sensor data\nexport const SET_CHUNK_SENSOR_DATA_SAGA = \"SET_CHUNK_SENSOR_DATA_SAGA\";\nexport const SET_STREAM_SENSOR_DATA = \"SET_STREAM_SENSOR_DATA\";\nexport const SET_STREAM_SENSOR_RECORD_DATA = \"SET_STREAM_SENSOR_RECORD_DATA\";\n","import DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CSVLink } from \"react-csv\";\n\nconst useStyles = makeStyles((theme) => ({\n  linkWrapper: {\n    display: \"flex\",\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  link: {\n    textDecoration: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"#0277bd\",\n  },\n\n  icon: {\n    marginLeft: theme.spacing(2),\n    cursor: \"pointer\",\n  },\n}));\n\nconst LinkExportToCSV = (props) => {\n  const { data, deleteFile, title } = props;\n  const classes = useStyles();\n  const csvReport = {\n    data,\n    filename: `data.csv`,\n  };\n  return (\n    <Box className={classes.linkWrapper}>\n      <CSVLink className={classes.link} {...csvReport}>\n        {title}\n      </CSVLink>\n      <DeleteForeverIcon\n        onClick={deleteFile}\n        color=\"primary\"\n        className={classes.icon}\n      />\n    </Box>\n  );\n};\n\nexport default LinkExportToCSV;\n","import React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst SensorDataChart = (props) => {\n  const { sensorData, countSamples, title } = props;\n  const [revision, setRevision] = useState(0);\n  const [opacity, setOpacity] = useState(\"1\");\n\n  useEffect(() => {\n    setRevision(revision + 1);\n    if (sensorData && sensorData.length) {\n      if (sensorData[0].x && sensorData[0].x.length) {\n      }\n    }\n  }, [sensorData]);\n\n  return (\n    <Plot\n      data={sensorData}\n      revision={revision}\n      style={{ width: \"100%\", height: \"100%\", opacity }}\n      layout={{\n        title,\n        visible: false,\n        autosize: true,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 100,\n          t: 100,\n          pad: 4,\n        },\n        xaxis: {\n          autorange: true,\n        },\n        yaxis: {\n          autorange: true,\n        },\n      }}\n    />\n  );\n};\n\nexport default SensorDataChart;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Switch,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  SET_IS_STREAMING_SENSOR_RECORDING,\n  SET_STREAM_SENSOR_DATA_RESET,\n  SET_STREAM_SENSOR_RECORD_DATA,\n  START_STREAM_SENSOR_SAGA,\n  STOP_STREAM_SENSOR_SAGA,\n} from \"../../redux/actions/actionTypes\";\nimport {\n  sensorDataForChart,\n  sensorRecordedDataToCsv,\n} from \"../../redux/selectors/sensorData\";\nimport LinkExportToCSV from \"../BaseData/LinkExportToCSV\";\nimport SensorDataChart from \"./SensorDataChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardWrapper: {\n    padding: theme.spacing(2),\n  },\n  dataWrapper: {\n    padding: theme.spacing(2),\n  },\n  chartWrapper: {\n    width: \"100%\",\n    margin: theme.spacing(1),\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  zeroOpacity: {\n    opacity: \"0\",\n  },\n}));\n\nconst SensorStream = (props) => {\n  const COUNT_SAMPLES = 16000;\n  const { columns } = props;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [isSplitCharts, SetIsSplitCharts] = useState(false);\n  const { isStreamingSensor, isStreamingSensorRecording } = useSelector(\n    (state) => state.stream\n  );\n  const sensorData = useSelector(sensorDataForChart(columns));\n  const [exportCsvRecordedData, countRecordedData] = useSelector(\n    sensorRecordedDataToCsv(columns)\n  );\n\n  const startSensorStreaming = useCallback(\n    // max array is COUNT_SAMPLES * count of data types\n    () =>\n      dispatch({\n        type: START_STREAM_SENSOR_SAGA,\n        payload: {\n          countSamples: COUNT_SAMPLES * ((columns && columns?.length) || 1),\n        },\n      }),\n    [dispatch]\n  );\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const setRecording = useCallback(\n    (isRecording) =>\n      dispatch({\n        type: SET_IS_STREAMING_SENSOR_RECORDING,\n        payload: isRecording,\n      }),\n    [dispatch]\n  );\n\n  const setClearRecording = useCallback(\n    (isRecording) =>\n      dispatch({ type: SET_STREAM_SENSOR_RECORD_DATA, payload: [] }),\n    [dispatch]\n  );\n\n  const setClearStream = useCallback(\n    () => dispatch({ type: SET_STREAM_SENSOR_DATA_RESET, payload: [] }),\n    [dispatch]\n  );\n\n  const switchSplitChart = () => {\n    SetIsSplitCharts(!isSplitCharts);\n  };\n\n  const manageStream = () => {\n    console.log(\"streaming\", isStreamingSensor);\n    if (isStreamingSensor) {\n      setRecording(false);\n      stopSensorStreaming();\n    } else {\n      setClearStream();\n      startSensorStreaming();\n    }\n  };\n\n  const switchRecording = () => {\n    if (!isStreamingSensorRecording) {\n      {\n        setClearRecording();\n      }\n    }\n    setRecording(!isStreamingSensorRecording);\n  };\n\n  const deleteRecording = () => {\n    setClearRecording();\n  };\n\n  return (\n    <Grid>\n      <Card>\n        <CardContent>\n          <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n            Test Mode: Data Capture\n          </Typography>\n          <Box className={classes.dataWrapper}>\n            <Box className={classes.chartWrapper}>\n              <Box className={!isStreamingSensor && classes.zeroOpacity}>\n                <Switch\n                  checked={isSplitCharts}\n                  onChange={() => switchSplitChart()}\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />{\" \"}\n                Split charts\n              </Box>\n              {sensorData && sensorData.length && isSplitCharts ? (\n                sensorData.map((data) => (\n                  <SensorDataChart\n                    title={data.name}\n                    countSamples={COUNT_SAMPLES}\n                    sensorData={[data]}\n                    isStreamingSensor={isStreamingSensor}\n                  />\n                ))\n              ) : (\n                <SensorDataChart\n                  countSamples={COUNT_SAMPLES}\n                  sensorData={sensorData}\n                  isStreamingSensor={isStreamingSensor}\n                />\n              )}\n            </Box>\n            <Box className={classes.buttonWrapper}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                onClick={() => manageStream()}\n              >\n                {isStreamingSensor ? \"Stop\" : \"View\"}\n              </Button>\n              <Button\n                variant=\"outlined\"\n                disabled={!isStreamingSensor}\n                className={classes.button}\n                onClick={() => switchRecording()}\n              >\n                {isStreamingSensorRecording ? \"Stop Recording\" : \"Record\"}\n              </Button>\n            </Box>\n            <Box>\n              {countRecordedData ? (\n                <LinkExportToCSV\n                  data={exportCsvRecordedData}\n                  title={`Export Recorded items ${countRecordedData} to CSV`}\n                  deleteFile={deleteRecording}\n                />\n              ) : null}\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SensorStream;\n","export const sensorDataForChart = column => (state) => {\n  const { sensorSimpleData } = state.sensorData;\n  // generate chart zero array\n  const result = column.map(name => {\n    return {\n      x: [],\n      y: [],\n      type: 'scatter',\n      mode: 'lines',\n      name,\n    };\n  });\n  // fill result array\n  sensorSimpleData.forEach((el, i) => {\n    result[i % column.length].x.push(Math.floor(i / column.length));\n    result[i % column.length].y.push(el);\n  });\n  return result;\n};\n\nexport const sensorRecordedDataToCsv = column => (state) => {\n  const { sensorRecordedData } = state.sensorData;\n  // generate chart zero array\n  let result = column.map(name => {\n    return [name];\n  });\n  result.unshift(['column']);\n  // fill result array\n  sensorRecordedData.forEach((el, i) => {\n    result[i % column.length + 1].push(el);\n  });\n  return [result, sensorRecordedData.length];\n};","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst ResultsFilter = (props) => {\n  function filterData(data, filter_length) {\n    if (data.length === 0) {\n      return \"No Results\";\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      return \"UNC\";\n    }\n    return index;\n  }\n\n  return (\n    <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n      {filterData(props.data, props.filter_length)}\n    </Typography>\n  );\n};\n\nexport default ResultsFilter;\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport React from \"react\";\nimport ResultsFilter from \"./ResultsFilter\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  root: {\n    width: \"800px\",\n  },\n  sliderroot: {\n    width: \"100%\",\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  setReader\n) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    setReader(reader);\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nfunction handleStopStreaming(event, reader, setIsStreaming) {\n  //debugger;\n  console.log(reader);\n  reader.cancel();\n  setIsStreaming(false);\n}\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [reader, setReader] = React.useState();\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ];\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    console.log(newValue);\n    setfilterLength(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardContent>\n          <div className={classes.section1}>\n            <Grid item xs={12}>\n              <Typography\n                align=\"center\"\n                component=\"h2\"\n                variant=\"h2\"\n                color=\"secondary\"\n              >\n                Test Mode: Recognition\n              </Typography>\n            </Grid>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n\n            <Grid item xs={12}>\n              {isStreaming ? (\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStopStreaming(\n                        \"stopstreaming\",\n                        reader,\n                        setIsStreaming\n                      );\n                    }}\n                  >\n                    Stop Stream\n                  </Button>\n                </div>\n              ) : (\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStreamRequest(\n                        \"clicked\",\n                        `${process.env.REACT_APP_API_URL}results`,\n                        setDeviceRows,\n                        setIsStreaming,\n                        setReader\n                      );\n                    }}\n                  >\n                    Start Stream\n                  </Button>\n                </div>\n              )}\n            </Grid>\n          </div>\n\n          <Grid item alignContent=\"center\" xs={12}>\n            <ResultsFilter\n              data={deviceRows}\n              filter_length={filterLength}\n            ></ResultsFilter>\n          </Grid>\n\n          <Divider variant=\"middle\" />\n          <div className={classes.section1}>\n            <Grid container spacing={4} rows alignItems=\"center\">\n              <Grid item xs={4}>\n                <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                  Filter Length{\" \"}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6}>\n                <div className={classes.sliderroot}>\n                  <Slider\n                    value={typeof filterLength === \"number\" ? filterLength : 1}\n                    onChange={handleFilterLengthSliderChange}\n                    aria-labelledby=\"input-slider\"\n                    min={1}\n                    max={10}\n                  />\n                </div>\n              </Grid>\n\n              <Grid item xs={1}>\n                <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                  {filterLength}\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.section1}>\n            <div style={{ height: 600, width: \"100%\" }}>\n              <DataGrid\n                rows={deviceRows}\n                columns={deviceColumns}\n                pageSize={15}\n                sortModel={[{ field: \"id\", sort: \"desc\" }]}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Results;\n","import { Button, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst handleRecordRequest = (event, setRecording, filename) => {\n  console.log(event);\n\n  if (filename === \"\") {\n    filename = \"test\";\n  }\n  console.log(filename);\n  axios\n    .post(`${process.env.REACT_APP_API_URL}record`, {\n      filename: filename,\n      event_type: event,\n    })\n    .then((response) => {\n      console.log(response.data);\n      if (event == \"record-start\") {\n        setRecording(true);\n        console.log(event);\n      }\n      if (event == \"record-stop\") {\n        setRecording(false);\n        console.log(event);\n      }\n    });\n};\n\nconst handleDownloadRequest = (event, filename) => {\n  console.log(`${process.env.REACT_APP_API_URL}download/` + filename);\n  fetch(`${process.env.REACT_APP_API_URL}download/` + filename, {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/zip\" },\n  })\n    .then((response) => response.blob())\n    .then((blob) => {\n      // Create blob link to download\n      const url = window.URL.createObjectURL(new Blob([blob]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", filename + \".zip\");\n\n      // Append to html link element page\n      document.body.appendChild(link);\n\n      // Start download\n      link.click();\n\n      // Clean up and remove the link\n      link.parentNode.removeChild(link);\n    });\n};\n\nconst Record = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [cameraView, setCameraView] = React.useState(props.isCameraConnected);\n  const [recording, setRecording] = React.useState(false);\n  const [filename, setFilename] = React.useState(\"capture_name\");\n\n  const handleFileNameChange = (event) => {\n    setFilename(event.target.value);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n            Record Source and Video\n          </Typography>\n        </div>\n        <Divider variant=\"middle\" />\n        <div className={classes.section2}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n        </div>\n        <Card>\n          <CardContent>\n            <Grid container columns spacing={6} xs={6}>\n              <Grid item xs={12}>\n                <TextField\n                  id=\"outlined-basic\"\n                  variant=\"outlined\"\n                  value={filename}\n                  onChange={handleFileNameChange}\n                  fullWidth={true}\n                  disabled={recording}\n                />\n              </Grid>\n              <Grid item xs={6}>\n                {recording === false ? (\n                  <Button\n                    aria-label=\"Record\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    disabled={!setCameraView}\n                    onClick={() => {\n                      handleRecordRequest(\n                        \"record-start\",\n                        setRecording,\n                        filename\n                      );\n                    }}\n                  >\n                    Record\n                  </Button>\n                ) : (\n                  <Button\n                    aria-label=\"Stop \"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleRecordRequest(\"record-stop\", setRecording);\n                    }}\n                  >\n                    Stop Recording\n                  </Button>\n                )}\n              </Grid>\n\n              <Grid item xs={6}>\n                <Button\n                  aria-label=\"Download \"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  onClick={() => {\n                    handleDownloadRequest(\"download\", filename);\n                  }}\n                >\n                  Download\n                </Button>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Record;\n","import React, { useCallback, useEffect } from \"react\";\n\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Status } from \"../Status\";\nimport { Configure } from \"../Configure\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { STOP_STREAM_SENSOR_SAGA } from \"../../redux/actions/actionTypes\";\nimport { Record } from \"../Record\";\nimport axios from \"axios\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState(0);\n  const [streamingSource, setStreamingSource] = React.useState(0);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [isCameraConnected, setIsCameraConnected] = React.useState(false);\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { isStreamingSensor } = useSelector((state) => state.stream);\n  const { errorDataMsg } = useSelector((state) => state.errors);\n\n  function handleChange(newValue) {\n    if (activeView !== newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      setIsCameraConnected(response.data.camera_on);\n      setIsConnected(response.data.streaming);\n      //console.log(response.data);\n    });\n  });\n\n  const alertUser = (e) => {\n    if (isStreamingSensor) {\n      e.preventDefault();\n      e.returnValue = \"\";\n    }\n  };\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  // before leave handler\n  useEffect(() => {\n    if (isStreamingSensor) {\n      window.addEventListener(\"beforeunload\", alertUser);\n      window.addEventListener(\"unload\", stopSensorStreaming);\n      return () => {\n        window.removeEventListener(\"beforeunload\", alertUser);\n        window.removeEventListener(\"unload\", stopSensorStreaming);\n        stopSensorStreaming();\n      };\n    }\n  }, [isStreamingSensor]);\n\n  useEffect(() => {\n    if (errorDataMsg) {\n      enqueueSnackbar(errorDataMsg, { variant: \"warning\" });\n    }\n  }, [errorDataMsg]);\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar\n          onChange={handleChange}\n          isConnected={isConnected}\n          isCameraConnected={isCameraConnected}\n        />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Status\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n              setIsConnected={setIsConnected}\n              isConnected={isConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              isCameraConnected={isCameraConnected}\n            />\n          ) : null}\n          {activeView === 3 ? (\n            <Configure\n              setStreamingMode={setStreamingMode}\n              streamingSource={streamingSource}\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n              setIsConnected={setIsConnected}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            streamingMode == \"recognition\" ? (\n              <Results />\n            ) : (\n              <SensorStream columns={columns} />\n            )\n          ) : null}\n          {activeView === 2 ? <Record /> : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import { call, delay, put, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_DATA_ERROR_MSG,\n} from \"../../actions/actionTypes\";\n\nfunction* handleErrorMsg(action) {\n  yield put({ type: SET_DATA_ERROR_MSG, payload: action.payload });\n  yield delay(1000);\n  yield put({ type: SET_DATA_ERROR_MSG, payload: null });\n}\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_DATA_ERROR_MSG, handleErrorMsg);\n}\n","export class BaseStreamHttpError extends Error {\n  constructor(errorCode, response) {\n    super();\n    if (errorCode !== 500) {\n      this.message = response.message;\n    } else {\n      this.message = 'Server Error. Please, contact support.';\n    }\n    this.name = this.constructor.name;\n    this.errorCode = errorCode;\n  }\n}","import { BaseStreamHttpError } from \"./errors\";\n\nimport store from \"../../redux/store\";\n\nclass StreamReader {\n  /* *\n   * StreamReader class based on browser fetch method for handling stream data to\n   * @constructs\n   * @param {string} fetchUrl - endpoint fetch url\n   * */\n  constructor(fetchUrl) {\n    /* @param {string} fetchUrl - endpoint fetch url */\n    this.reader = undefined;\n    this.fetchUrl = fetchUrl;\n  }\n\n  async startStreaming() {\n    /*\n      fetch streaming endpoint and setup this.reader\n    */\n    let response;\n    console.log(\"getting response\");\n    try {\n      response = await fetch(this.fetchUrl);\n    } catch (error) {\n      console.log(error);\n      throw new BaseStreamHttpError(404, {\n        message: \"Failed to fetch API service\",\n      });\n    }\n    if (!response.ok) {\n      throw new BaseStreamHttpError(response.status, {\n        message: response.statusText,\n      });\n    }\n    console.log(\"getting reader\");\n    this.reader = response.body.getReader();\n  }\n\n  async stopStreaming() {\n    if (this.reader) {\n      this.reader.cancel();\n      this.reader = undefined;\n    }\n  }\n\n  async readStreamToRedux(actionType, countSamples = 0) {\n    /*\n      read and write array by chunk to redux\n      @param {string} actionType - redux action const name\n      @param {number} maxLength - max length of redux streamed array\n    * */\n    while (true) {\n      const { value, done } = await this.reader.read();\n      if (done) break;\n      store.dispatch({\n        type: actionType,\n        payload: { chunk: new Int16Array(value.buffer), countSamples },\n      });\n    }\n  }\n}\n\nexport { BaseStreamHttpError };\nexport default StreamReader;\n","export const APP_API_ULD =  process.env.REACT_APP_API_URL || '/';\n\nexport const apiHosts = {\n  baseHost: APP_API_ULD,\n};\n","import StreamReader from \"../../services/StreamReader\";\nimport { apiHosts } from \"../../configs\";\n\nexport let streamSensorReader = undefined;\n\nexport const initStreamSensorReader = () => {\n  streamSensorReader = new StreamReader(`${ apiHosts.baseHost }/stream`);\n};","import { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { BaseStreamHttpError } from \"../../../services/StreamReader\";\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_IS_STREAMING_SENSOR,\n  START_STREAM_SENSOR_SAGA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerStreamStart(action) {\n  try {\n    const { countSamples } = action?.payload;\n    yield call([streamSensorReader, \"startStreaming\"]);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: true });\n    yield call(\n      [streamSensorReader, \"readStreamToRedux\"],\n      SET_CHUNK_SENSOR_DATA_SAGA,\n      countSamples\n    );\n  } catch (e) {\n    console.debug(e);\n    if (e instanceof BaseStreamHttpError) {\n      yield put({ type: FETCH_DATA_ERROR_MSG, payload: e.message });\n    } else {\n      yield put({\n        type: FETCH_DATA_ERROR_MSG,\n        payload: \"Failed to read stream data\",\n      });\n    }\n  }\n}\n\nexport default function* watchStreamSensorStart() {\n  yield takeLatest(START_STREAM_SENSOR_SAGA, workerStreamStart);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { SET_IS_STREAMING_SENSOR, STOP_STREAM_SENSOR_SAGA, } from \"../../actions/actionTypes\";\n\n\nfunction* workerStreamStop(action) {\n  try {\n    yield call([streamSensorReader, 'stopStreaming']);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: false });\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchStreamSensorStop() {\n  yield takeLatest(STOP_STREAM_SENSOR_SAGA, workerStreamStop);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchStreamSensorStart from \"./watchStreamSensorStart\";\nimport watchStreamSensorStop from \"./watchStreamSensorStop\";\n\nexport default function* streamSagas() {\n  yield all([\n    fork(watchStreamSensorStart),\n    fork(watchStreamSensorStop),\n  ]);\n}\n\n","import { put, select, takeLatest } from \"redux-saga/effects\";\nimport {\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerSetStreamChunkSensorData(action) {\n  try {\n    const { chunk, countSamples } = action.payload;\n    const chunkLength = (chunk && chunk.length) || 0;\n    let updatedSensorSimpleData = [];\n\n    const { sensorSimpleData, sensorRecordedData } = yield select(\n      (state) => state.sensorData\n    );\n    const { isStreamingSensorRecording } = yield select(\n      (state) => state.stream\n    );\n    console.log(\"called\", chunkLength / (2 * 6));\n\n    // when chunk greater than max of count samples set all chunk data or if countSamples == 0\n    if (chunkLength >= countSamples) {\n      updatedSensorSimpleData = [...chunk];\n    } else if (sensorSimpleData.length >= countSamples) {\n      // when reach countSamples limit\n      updatedSensorSimpleData = [...sensorSimpleData];\n      let [left, right, chunkI] = [0, sensorSimpleData.length, 0];\n      while (left < right) {\n        if (right - left > chunkLength) {\n          updatedSensorSimpleData[left] = sensorSimpleData[left + chunkLength];\n        } else {\n          updatedSensorSimpleData[left] = chunk[chunkI];\n          chunkI++;\n        }\n        left++;\n      }\n    } else {\n      updatedSensorSimpleData = [...sensorSimpleData, ...chunk];\n    }\n\n    yield put({\n      type: SET_STREAM_SENSOR_DATA,\n      payload: updatedSensorSimpleData,\n    });\n    // update whole list if recording\n    if (isStreamingSensorRecording) {\n      yield put({\n        type: SET_STREAM_SENSOR_RECORD_DATA,\n        payload: [...sensorRecordedData, ...chunk],\n      });\n    }\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchSetChunkSensorData() {\n  yield takeLatest(SET_CHUNK_SENSOR_DATA_SAGA, workerSetStreamChunkSensorData);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchSetChunkSensorData from \"./watchSetChunkSensorData\";\n\nexport default function* sensorDataSagas() {\n  yield all([\n    fork(watchSetChunkSensorData),\n  ]);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchErrorSaga from \"./errors\";\nimport streamSagas from \"./stream\";\nimport sensorDataSagas from \"./sensorData\";\n\n\nexport default function* rootSaga() {\n  yield all([\n    fork(streamSagas),\n    fork(watchErrorSaga),\n    fork(sensorDataSagas),\n  ]);\n}\n","import {\n  SET_GLOBAL_LOADER,\n} from '../../actions/actionTypes';\n\nconst initialState = {\n  globalLoader: false,\n};\n\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_GLOBAL_LOADER:\n      return {\n        ...state,\n        globalLoader: action.payload || false,\n      };\n    default:\n      return state;\n  }\n}","import { SET_DATA_ERROR_MSG } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  errorDataMsg: null,\n};\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_DATA_ERROR_MSG:\n      return {\n        ...state,\n        errorDataMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import { SET_IS_STREAMING_SENSOR, SET_IS_STREAMING_SENSOR_RECORDING, } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  isStreamingSensor: false,\n  isStreamingSensorRecording: false,\n};\n\nexport default function streamData(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_STREAMING_SENSOR:\n      return {\n        ...state,\n        isStreamingSensor: action.payload,\n      };\n    case SET_IS_STREAMING_SENSOR_RECORDING:\n      return {\n        ...state,\n        isStreamingSensorRecording: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import {\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n  SET_STREAM_SENSOR_DATA_RESET,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n  sensorSimpleData: new Int16Array(),\n  sensorRecordedData: new Int16Array(),\n};\n\nexport default function sensorData(state = initialState, action) {\n  switch (action.type) {\n    case SET_STREAM_SENSOR_DATA_RESET:\n      return {\n        ...state,\n        sensorSimpleData: new Int16Array(),\n        sensorRecordedData: new Int16Array(),\n      };\n    case SET_STREAM_SENSOR_DATA:\n      return {\n        ...state,\n        sensorSimpleData: [...action.payload],\n      };\n    case SET_STREAM_SENSOR_RECORD_DATA:\n      return {\n        ...state,\n        sensorRecordedData: [...action.payload],\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\n// modules\nimport rootData from \"./root\";\nimport errors from \"./errors\";\nimport streamData from \"./stream\";\nimport sensorData from \"./sensorData\";\n\nconst createAppReducer = () => combineReducers({\n  root: rootData,\n  errors,\n  stream: streamData,\n  sensorData,\n});\n\nexport default createAppReducer;","import createSagaMiddleware from \"redux-saga\";\n\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootSaga from \"./sagas\";\nimport createAppReducer from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancers = [];\n\nconst middleware = [\n  sagaMiddleware,\n];\n\nconst composedEnhancers = composeWithDevTools(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst appReducer = createAppReducer();\n\nconst store = createStore(\n  appReducer,\n  composedEnhancers,\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import axios from \"axios\";\n\n\nconst ApiService = {\n  // Stores the 401 interceptor position so that it can be later ejected when needed\n  interceptor_401: null,\n  refreshUrl: '/auth/refresh',\n\n  init(baseURL) {\n    axios.defaults.baseURL = baseURL;\n  },\n\n  mount401Interceptor() {\n    this.interceptor_401 = axios.interceptors.response.use((response) => response,\n      async (error) => {\n        if (error.request.status === 401) {\n          if (error.config.url.includes('auth')) {\n            // Refresh token has failed or auth endpoint return 401 => Logout the user\n            throw error;\n          } else {\n            // refresh token\n          }\n        }\n        // If error was not 401 just reject as is\n        throw error;\n      });\n  },\n  \n\n  unmount401Interceptor() {\n    // Eject the interceptor\n    axios.interceptors.response.eject(this.interceptor_401);\n  },\n  \n  setCustomAuthHeader(key) {\n    axios.defaults.headers.common.Authorization = key;\n  },\n\n  setContentType(type) {\n    axios.defaults.headers.contentType = type;\n  },\n\n  removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n\n  get(resource) {\n    return axios.get(resource);\n  },\n\n  post(resource, data) {\n    return axios.post(resource, data);\n  },\n\n  put(resource, data) {\n    return axios.put(resource, data);\n  },\n\n  delete(resource) {\n    return axios.delete(resource);\n  },\n\n  customRequest(data) {\n    return axios(data);\n  },\n\n  customJsonRequest(data) {\n    this.setAuthHeader();\n    this.setContentType('application/json');\n    return axios(data);\n  },\n\n};\n\nexport default ApiService;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport store from \"./redux/store\";\nimport ApiService from \"./services/api\";\nimport { initStreamSensorReader } from \"./redux/repositories/StreamSensorReader\";\nimport { apiHosts } from \"./configs\";\n\n// set base host to the axios instance\nApiService.init(apiHosts.baseHost);\n// initialize StreamSensorReader for handle as entrypoint\ninitStreamSensorReader();\n\nconst App = () => {\n  return (\n    <LightTheme>\n      <Provider store={store}>\n        <SnackbarProvider\n          anchorOrigin={{\n            horizontal: \"right\",\n            vertical: \"top\",\n          }}\n          autoHideDuration={ 2000 }\n        >\n          <Main />\n        </SnackbarProvider>\n      </Provider>\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}