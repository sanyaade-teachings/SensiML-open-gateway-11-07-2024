{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/Configure/Configure.js","components/ConfigureStream/ConfigureStream.js","components/SensorStream/StreamChart.js","components/SensorStream/SensorStream.js","components/Results/Results.js","components/Main/Main.js","App.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","notSelected","blueGrey","error","red","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","InconSelector","index","NavBar","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","toolbar","alignItems","mixins","Configure","useState","config","setConfig","useEffect","axios","get","process","then","res","data","mode","setStreamingMode","streaming","setColumns","Object","keys","column_location","sort","setStreamingSource","source","setDeviceID","device_id","join","mapdata","Grid","xs","sample_rate","formControl","margin","details","flexDirection","flex","controls","paddingLeft","paddingBottom","ConfigureStream","React","streamingSource","setSource","streamingMode","modeUrl","setModeUrl","deviceID","setError","helperText","setHelperText","deviceRows","setDeviceRows","field","headerName","deviceColumns","container","direction","onSubmit","preventDefault","console","log","post","toLowerCase","response","catch","message","status","headers","request","FormControl","component","FormLabel","RadioGroup","aria-label","name","value","target","FormControlLabel","control","Radio","label","TextField","id","Button","type","FormHelperText","rows","columns","onRowSelected","StreamChart","layout","autosize","handleStreamRequest","url","setStreamCallback","fetch","method","reader","body","getReader","stream","ReadableStream","start","controller","push","read","done","close","int16Array","Int16Array","buffer","size","length","x_array","Array","lines","x","y","i","col","splitArray","Response","SensorStream","streamData","setStreamData","id_counter","results","array","String","fromCharCode","apply","split","pop","JSON","parse","bin2String","Results","style","height","pageSize","sortModel","Main","activeView","setActiveView","CssBaseline","justify","newValue","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dbd9e45.chunk.js","sourcesContent":["import React from \"react\";\nimport { lightBlue, deepOrange, red, blueGrey } from \"@material-ui/core/colors\";\nimport {\n  useTheme,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\n\nconst LightTheme = props => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800])\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500])\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600])\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600])\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500])\n      }\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Streaming Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <InfoIcon />;\n    case 1:\n      return <SettingsIcon />;\n    case 2:\n      return <AssessmentIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Gateway Status\", \"Configure Gateway\", \"Stream\"].map(\n            (text, index) => (\n              <ListItem button key={text} onClick={handleMenu(index)}>\n                <ListItemIcon>\n                  <InconSelector index={index}> </InconSelector>\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 40),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\n\nconst Configure = (props) => {\n  let [config, setConfig] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}config`)\n      .then((res) => setConfig(mapdata(res.data)));\n  }, []);\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    data.streaming = data.streaming ? \"Yes\" : \"No\";\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    return data;\n  }\n  return (\n    <Grid xs={12}>\n      <Grid>\n        <Typography color=\"primary\"> Configured Mode: </Typography>\n        <Typography>{config.mode}</Typography>\n        <Typography color=\"primary\">Streaming: </Typography>\n        <Typography>{config.streaming}</Typography>\n        <Typography color=\"primary\">Sensors: </Typography>\n        <Typography>{config.source}</Typography>\n      </Grid>\n      {config.mode === \"streaming\" ? (\n        <Grid>\n          <Typography color=\"primary\">Sample Rate: </Typography>\n          <Typography>{config.sample_rate}</Typography>\n          <Typography color=\"primary\">Columns:</Typography>\n          <Typography>{config.column_location}</Typography>\n        </Grid>\n      ) : (\n        <></>\n      )}\n    </Grid>\n  );\n};\n\nexport default Configure;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst ConfigureStream = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(props.streamingSource);\n  const [modeUrl, setModeUrl] = React.useState(\n    props.streamingMode === \"results\" ? \"config-results\" : \"config\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 120 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ]);\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.value);\n  };\n\n  const handleModeChange = (event) => {\n    setModeUrl(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.data.device_id);\n    setDeviceID(event.data.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + modeUrl, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        console.log(props);\n        props.setStreamingMode(response.data.mode);\n        setHelperText(\"Configured Device\");\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handleDeviceScan = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setDeviceRows(response.data);\n      });\n  };\n\n  // \"Configure the gateway to  use a Serial Connection to  connect to the remote  node.\" />\n  // \"Configure the gateway to  use a BLE Connection to connect to remote node.\"\n  // \"Configure the gateway to mock a node sending test data.\"\n  return (\n    <Grid xs={12} container direction=\"columns\">\n      <Grid xs={4}>\n        <form onSubmit={handleSubmit}>\n          <FormControl\n            component=\"fieldset\"\n            error={error}\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Source:</FormLabel>\n            <RadioGroup\n              aria-label=\"source\"\n              name=\"source\"\n              value={source}\n              onChange={handleRadioChange}\n            >\n              <FormControlLabel\n                value=\"SERIAL\"\n                control={<Radio />}\n                label=\"Serial\"\n              />\n              <FormControlLabel value=\"BLE\" control={<Radio />} label=\"BLE\" />\n              <FormControlLabel value=\"TEST\" control={<Radio />} label=\"Test\" />\n            </RadioGroup>\n            <FormLabel component=\"legend\">Mode:</FormLabel>\n            <RadioGroup\n              aria-label=\"mode\"\n              name=\"Streaming Source\"\n              value={modeUrl}\n              onChange={handleModeChange}\n            >\n              <FormControlLabel\n                value=\"config\"\n                control={<Radio />}\n                label=\"Sensor Stream\"\n              />\n              <FormControlLabel\n                value=\"config-results\"\n                control={<Radio />}\n                label=\"Result Stream\"\n              />\n            </RadioGroup>\n            <FormLabel component=\"legend\">Device ID:</FormLabel>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={deviceID}\n              onChange={handleDeviceIDChange}\n            />\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Configure\n            </Button>\n            <FormHelperText>{helperText}</FormHelperText>\n          </FormControl>\n        </form>\n      </Grid>\n      <Grid xs={8}>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          onClick={() => {\n            handleDeviceScan(\"clicked\", { source });\n          }}\n        >\n          Scan\n        </Button>\n        <DataGrid\n          rows={deviceRows}\n          columns={deviceColumns}\n          onRowSelected={handleRowSelection}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ConfigureStream;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst StreamChart = (data) => {\n  return (\n    <Plot\n      data={data.data}\n      layout={{\n        autosize: true,\n      }}\n    />\n  );\n};\n\nexport default StreamChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport StreamChart from \"./StreamChart\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst handleDisconnectRequest = (event) => {\n  axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((response) => {\n    console.log(response.data);\n  });\n};\n\nfunction splitArray(data, columns) {\n  var size = data.length / columns.length;\n  var x_array = [...Array(size).keys()];\n  var lines = columns.map((x) => {\n    return {\n      x: x_array,\n      y: [],\n      name: x,\n    };\n  });\n\n  for (var i = 0; i < data.length; i += columns.length) {\n    for (var col = 0; col < columns.length; col++) {\n      lines[col].y.push(data[i + col]);\n    }\n  }\n  return lines;\n}\n\nconst handleStreamRequest = (event, url, setStreamCallback, columns) => {\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              controller.close();\n              return;\n            }\n            var int16Array = new Int16Array(value.buffer);\n            setStreamCallback(splitArray(int16Array, columns));\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst SensorStream = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div className={classes.details}>\n      <Typography component=\"h5\" variant=\"h5\">\n        Sensor Data\n      </Typography>\n      <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n      <StreamChart data={props.streamData} />\n      <div className={classes.controls}>\n        <Button\n          aria-label=\"disconnect\"\n          onClick={() => {\n            handleStreamRequest(\n              \"clicked\",\n              `${process.env.REACT_APP_API_URL}stream`,\n              props.setStreamData,\n              props.columns\n            );\n          }}\n        >\n          Stream\n        </Button>\n        <Button\n          aria-label=\"disconnect\"\n          onClick={() => {\n            handleDisconnectRequest(\"clicked\");\n          }}\n        >\n          Disconnect\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SensorStream;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst handleDisconnectRequest = (event) => {\n  axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((response) => {\n    console.log(response.data);\n  });\n};\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (event, url, setStreamCallback) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst Results = (props) => {\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ]);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <Grid>\n      <div className={classes.details}>\n        <Typography component=\"h5\" variant=\"h5\">\n          Model Result\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n        <div className={classes.controls}>\n          <Button\n            aria-label=\"disconnect\"\n            onClick={() => {\n              handleStreamRequest(\n                \"clicked\",\n                `${process.env.REACT_APP_API_URL}results`,\n                props.setDeviceRows\n              );\n            }}\n          >\n            Connect\n          </Button>\n          <Button\n            aria-label=\"disconnect\"\n            onClick={() => {\n              handleDisconnectRequest(\"clicked\");\n            }}\n          >\n            Disconnect\n          </Button>\n        </div>\n      </div>\n      <div style={{ height: 600, width: \"100%\" }}>\n        <DataGrid\n          rows={props.deviceRows}\n          columns={deviceColumns}\n          pageSize={15}\n          sortModel={[{ field: \"id\", sort: \"desc\" }]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Configure } from \"../Configure\";\nimport { ConfigureStream } from \"../ConfigureStream\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst Main = () => {\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState(0);\n  const [streamingSource, setStreamingSource] = React.useState(0);\n  const [streamData, setStreamData] = React.useState([]);\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n\n  function handleChange(newValue) {\n    if (activeView != newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar onChange={handleChange} />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Configure\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            <ConfigureStream\n              setStreamingMode={setStreamingMode}\n              streamingSource={streamingSource}\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n            />\n          ) : null}\n          {activeView === 2 ? (\n            streamingMode == \"results\" ? (\n              <Results deviceRows={deviceRows} setDeviceRows={setDeviceRows} />\n            ) : (\n              <SensorStream\n                streamData={streamData}\n                setStreamData={setStreamData}\n                columns={columns}\n              />\n            )\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nconst App = () => {\n  return (\n    <LightTheme>\n      <Main />\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}