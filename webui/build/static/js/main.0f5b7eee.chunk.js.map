{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/SimpleCard/SimpleCard.js","components/Status/Status.js","components/Configure/Stepper.js","components/Configure/Configure.js","components/SensorStream/StreamChart.js","components/SensorStream/SensorStream.js","components/Results/ResultsFilter.js","components/Results/Results.js","components/Main/Main.js","App.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","notSelected","blueGrey","error","red","record","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","InconSelector","index","Connected","Grid","isConnected","Button","aria-label","NavBar","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","toolbar","alignItems","mixins","minWidth","bullet","transform","title","fontSize","backgroundColor","pos","marginBottom","marginTop","SimpleCard","item","xs","Card","CardContent","align","name","list","dense","value","split","details","flexDirection","flex","controls","Status","useState","config","setConfig","useEffect","axios","get","process","then","res","mapdata","data","mode","setStreamingMode","setIsConnected","streaming","setColumns","Object","keys","column_location","sort","setStreamingSource","source","setDeviceID","device_id","join","class","container","columns","rows","sample_rate","fullWidth","console","log","handleDisconnectRequest","handleConnectRequest","backButton","marginRight","instructions","stepIcon","HorizontalLabelPositionBelowStepper","React","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","active","StepIconProps","Configure","streamingSource","setSource","streamingMode","modeUrl","setModeUrl","deviceID","setError","scanHelperText","setScanHelperText","helperText","setHelperText","deviceRows","setDeviceRows","field","headerName","deviceColumns","onSubmit","preventDefault","post","toLowerCase","response","catch","message","status","headers","request","FormControl","component","FormLabel","RadioGroup","target","row","FormControlLabel","control","Radio","TextField","id","type","FormHelperText","style","height","onRowSelected","pageSize","formControl","StreamChart","layout","autosize","paddingLeft","paddingBottom","section1","margin","section2","textAlign","SensorStream","streamData","setStreamData","chartData","setChartData","isStreaming","setIsStreaming","isRecording","setIsRecording","recordBuffer","setRecordBuffer","reader","setReader","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","int16Array","Int16Array","l","i","length","size","x_array","Array","lines","x","y","k","col","push","splitArrays","slice","handleStreamRequest","url","setStreamCallback","setRecordBufferCallback","fetch","method","body","getReader","ReadableStream","start","controller","read","done","close","buffer","Divider","set","cancel","handleStopStreaming","disabled","e","output","csv","marker","toString","convertToCSV","blob1","Blob","document","documentMode","window","navigator","msSaveBlob","link","URL","webkitURL","createObjectURL","a","createElement","download","href","appendChild","click","removeChild","handleStopRecord","handleRecord","ResultsFilter","filter_length","m","Classification","max","entries","key","filterData","id_counter","sliderroot","sliderinput","stream","results","array","String","fromCharCode","apply","pop","JSON","parse","bin2String","Response","Results","filterLength","setfilterLength","alignContent","Slider","newValue","aria-labelledby","min","sortModel","Main","activeView","setActiveView","CssBaseline","direction","justify","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0f5b7eee.chunk.js","sourcesContent":["import React from \"react\";\nimport { lightBlue, deepOrange, red, blueGrey } from \"@material-ui/core/colors\";\nimport {\n  useTheme,\n  createMuiTheme,\n  MuiThemeProvider,\n} from \"@material-ui/core/styles\";\n\nconst LightTheme = (props) => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800]),\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500]),\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600]),\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600]),\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n      record: {\n        light: red[900],\n        main: red[900],\n        dark: red[900],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Streaming Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <InfoIcon />;\n    case 1:\n      return <AssessmentIcon />;\n    case 2:\n      return <SettingsIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst Connected = (props) => {\n  return (\n    <Grid>\n      {props.isConnected ? (\n        <Button color=\"green\" variant=\"contained\" aria-label=\"disconnect\">\n          Connected\n        </Button>\n      ) : (\n        <Button color=\"red\" variant=\"contained\" aria-label=\"disconnect\">\n          Disconnected\n        </Button>\n      )}\n    </Grid>\n  );\n};\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Device Info\", \"Test Stream\", \"Configure Gateway\"].map(\n            (text, index) => (\n              <ListItem button key={text} onClick={handleMenu(index)}>\n                <ListItemIcon>\n                  <InconSelector index={index}> </InconSelector>\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n          <ListItem>\n            <Connected isConnected={props.isConnected}></Connected>\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 40),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { Grid } from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    transform: \"scale(1.0)\",\n  },\n  title: {\n    fontSize: 20,\n    backgroundColor: \"#e0e0e0\",\n  },\n  pos: {\n    marginBottom: 2,\n    marginTop: 2,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.xs}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            color=\"textPrimary\"\n          >\n            {props.name}\n          </Typography>\n          {props.list ? (\n            <div className={classes.bullet}>\n              <List dense={true}>\n                {props.value.split(\",\").map((value) => (\n                  <ListItem>\n                    <ListItemText align=\"center\" primary={value} />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          ) : (\n            <Typography\n              align=\"center\"\n              className={classes.pos}\n              color=\"textSecondary\"\n            >\n              {props.value}\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SimpleCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CardContent, Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { SimpleCard } from \"../SimpleCard\";\nimport Card from \"@material-ui/core/Card\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"700px\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Status = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [config, setConfig] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`).then((res) => {\n      setConfig(mapdata(res.data));\n    });\n  }, []);\n\n  const handleDisconnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => {\n      console.log(res.data);\n      setConfig(mapdata(res.data));\n    });\n  };\n\n  const handleConnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}connect`).then((res) => {\n      setConfig(mapdata(res.data));\n    });\n  };\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    props.setIsConnected(data.streaming);\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    return data;\n  }\n  return (\n    <div class={classes.root}>\n      <Card>\n        <CardContent>\n          <Grid container columns spacing={4}>\n            <Grid item xs={12} container rows spacing={2}>\n              <SimpleCard name=\"Mode\" xs=\"6\" value={config.mode}></SimpleCard>\n              <SimpleCard\n                name=\"Source\"\n                xs=\"6\"\n                value={config.source}\n              ></SimpleCard>\n            </Grid>\n            <Grid item xs={12} container rows spacing={2}>\n              <SimpleCard\n                name=\"Device ID\"\n                xs={6}\n                value={config.device_id}\n              ></SimpleCard>\n              {config.mode === \"data_capture\" ? (\n                <SimpleCard\n                  xs=\"6\"\n                  name=\"Sample Rate\"\n                  value={config.sample_rate}\n                ></SimpleCard>\n              ) : null}\n            </Grid>\n            <Grid item xs={12}>\n              {config.mode === \"data_capture\" ? (\n                <SimpleCard\n                  name=\"Sensor Columns\"\n                  value={config.column_location}\n                  list={true}\n                ></SimpleCard>\n              ) : null}\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.controls}>\n                {props.isConnected ? (\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    aria-label=\"disconnect\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleDisconnectRequest(\"clicked\", setConfig);\n                    }}\n                  >\n                    Disconnect From Device\n                  </Button>\n                ) : (\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    aria-label=\"connect\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleConnectRequest(\"clicked\", setConfig);\n                    }}\n                  >\n                    Connect To Device\n                  </Button>\n                )}\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  stepIcon: {\n    color: \"primary\",\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"Select Connection Type\",\n    \"Scan and Select Device ID\",\n    \"Select Mode\",\n    \"Click Configure Gateway\",\n  ];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return \"Select Connection Type\";\n    case 1:\n      return \"Scan and Select Device ID\";\n    case 2:\n      return \"Select Device Mode\";\n    case 3:\n      return \"Click Configure Gateway\";\n    default:\n      return \"\";\n  }\n}\n\nconst HorizontalLabelPositionBelowStepper = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState();\n  const steps = getSteps();\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label} color=\"primary\">\n            <StepLabel\n              active={true}\n              StepIconProps={{\n                classes: { root: classes.stepIcon },\n              }}\n            >\n              {label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Grid } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport HorizontalLabelPositionBelowStepper from \"./Stepper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n}));\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(props.streamingSource);\n  const [modeUrl, setModeUrl] = React.useState(\n    props.streamingMode === \"results\" ? \"config-results\" : \"config\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n  const [scanHelperText, setScanHelperText] = React.useState(\"\");\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 0 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ]);\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.value);\n  };\n\n  const handleModeChange = (event) => {\n    setModeUrl(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.data.device_id);\n    setDeviceID(event.data.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + modeUrl, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        console.log(props);\n        props.setStreamingMode(response.data.mode);\n        props.setIsConnected(true);\n        setHelperText(\"Gateway Connected to device, now ready to stream.\");\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handleDeviceScan = (event) => {\n    console.log(event);\n    event.preventDefault();\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setDeviceRows(response.data);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setScanHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  // \"Configure the gateway to  use a Serial Connection to  connect to the remote  node.\" />\n  // \"Configure the gateway to  use a BLE Connection to connect to remote node.\"\n  // \"Configure the gateway to mock a node sending test data.\"\n  return (\n    <Card>\n      <CardContent>\n        <Grid xs={12} container rows spacing={6}>\n          <HorizontalLabelPositionBelowStepper />\n          <Grid item columns xs={6} alignItems=\"center\">\n            <Card>\n              <CardContent>\n                <form onSubmit={handleDeviceScan}>\n                  <FormControl component=\"fieldset\" error={error}>\n                    <Grid container columns spacing={2}>\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel>Connection Type</FormLabel>\n                            <RadioGroup\n                              aria-label=\"source\"\n                              value={source}\n                              onChange={handleRadioChange}\n                              row\n                            >\n                              <FormControlLabel\n                                value=\"SERIAL\"\n                                control={<Radio />}\n                                label=\"Serial\"\n                              />\n                              <FormControlLabel\n                                value=\"BLE\"\n                                control={<Radio />}\n                                label=\"BLE\"\n                              />\n                              <FormControlLabel\n                                value=\"TCPIP\"\n                                control={<Radio />}\n                                label=\"TCP/IP\"\n                              />\n                              <FormControlLabel\n                                value=\"TEST\"\n                                control={<Radio />}\n                                label=\"Test\"\n                              />\n                            </RadioGroup>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel component=\"legend\">Device ID:</FormLabel>\n                            <TextField\n                              id=\"outlined-basic\"\n                              variant=\"outlined\"\n                              value={deviceID}\n                              onChange={handleDeviceIDChange}\n                              fullWidth={true}\n                            />\n                          </CardContent>\n                        </Card>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          fullWidth={true}\n                        >\n                          Scan\n                        </Button>\n                      </Grid>\n\n                      <FormHelperText>{scanHelperText}</FormHelperText>\n                      <Grid item xs={12}>\n                        <div style={{ height: 350, width: \"100%\" }}>\n                          <DataGrid\n                            rows={deviceRows}\n                            columns={deviceColumns}\n                            onRowSelected={handleRowSelection}\n                            pageSize={4}\n                          />\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </FormControl>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item columns xs={6} alignItems=\"center\">\n            <Card>\n              <CardContent>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    component=\"fieldset\"\n                    error={error}\n                    className={classes.formControl}\n                  >\n                    <Grid container columns spacing={2}>\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel component=\"legend\">\n                              Device Mode:\n                            </FormLabel>\n                            <RadioGroup\n                              aria-label=\"mode\"\n                              name=\"Streaming Source\"\n                              value={modeUrl}\n                              onChange={handleModeChange}\n                              row\n                            >\n                              <FormControlLabel\n                                value=\"config\"\n                                control={<Radio />}\n                                label=\"Data Collection\"\n                              />\n                              <FormControlLabel\n                                value=\"config-results\"\n                                control={<Radio />}\n                                label=\"Recognition\"\n                              />\n                            </RadioGroup>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          fullWidth={true}\n                        >\n                          Configure Gateway\n                        </Button>\n                      </Grid>\n                      <FormHelperText>{helperText}</FormHelperText>\n                    </Grid>\n                  </FormControl>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Configure;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst StreamChart = (data) => {\n  return (\n    <Plot\n      data={data.data}\n      layout={{\n        autosize: true,\n        width: 1080,\n      }}\n    />\n  );\n};\n\nexport default StreamChart;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport StreamChart from \"./StreamChart\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction splitArrays(data, columns) {\n  var l = 0;\n  for (var i = 0; i < data.length; i++) {\n    l += data[i].length;\n  }\n  var size = l / columns.length;\n  var x_array = [...Array(size).keys()];\n  var lines = columns.map((x) => {\n    return {\n      x: x_array,\n      y: [],\n      name: x,\n    };\n  });\n\n  for (var k = 0; k < data.length; k++) {\n    for (var i = 0; i < data[[k]].length; i += columns.length) {\n      for (var col = 0; col < columns.length; col++) {\n        lines[col].y.push(data[k][i + col]);\n      }\n    }\n  }\n  return lines;\n}\n\nfunction convertToJson(data, columns, isRecording) {\n  if (!isRecording) {\n    {\n      return;\n    }\n  }\n\n  var lines = {};\n  for (col in columns) {\n    lines[columns[col]] = [];\n  }\n\n  for (var k = 0; k < data.length; k++) {\n    for (var i = 0; i < data[k].length; i += columns.length) {\n      for (var col = 0; col < columns.length; col++) {\n        lines[columns[col]].push(data[k][i + col]);\n      }\n    }\n  }\n\n  return lines;\n}\n\nfunction convertToCSV(data, columns, isRecording) {\n  if (!isRecording) {\n    {\n      return;\n    }\n  }\n\n  let csv = \"\";\n  for (col in columns) {\n    csv += columns[col] + \",\";\n  }\n  csv += \"\\n\";\n\n  var marker = columns.length - 1;\n  for (var k = 0; k < data.length; k++) {\n    for (var i = 0; i < data[k].length; i += columns.length) {\n      for (var col = 0; col < columns.length; col++) {\n        csv += data[k][i + col].toString();\n        if (col != marker) {\n          csv += \",\";\n        }\n      }\n      csv += \"\\n\";\n    }\n  }\n\n  return csv;\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nfunction handleRecord(event, setIsRecording, setRecordBuffer) {\n  console.log(\"set recording true\");\n  var int16Array = new Int16Array();\n  setRecordBuffer(int16Array);\n  setIsRecording(true);\n}\n\nfunction handleStopStreaming(\n  event,\n  reader,\n  setIsStreaming,\n  setIsRecording,\n  set\n) {\n  //debugger;\n  reader.cancel();\n  setIsStreaming(false);\n  setIsRecording(false);\n}\n\nconst getReader = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  setRecordBufferCallback,\n  columns,\n  setReader\n) => {\n  return fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    setReader(reader);\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n\n            var int16Array = new Int16Array(value.buffer);\n            setStreamCallback((x) => [...x, int16Array]);\n            setRecordBufferCallback((x) => [...x, int16Array]);\n\n            push();\n          });\n        }\n        push();\n      },\n    });\n  });\n};\n\nconst SensorStream = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [streamData, setStreamData] = React.useState([]);\n  const [chartData, setChartData] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [recordBuffer, setRecordBuffer] = React.useState([]);\n  const [reader, setReader] = React.useState();\n\n  useInterval(() => {\n    if (!isRecording) {\n      var int16Array = new Int16Array();\n      setRecordBuffer(int16Array);\n    }\n    if (isStreaming) {\n      setChartData(splitArrays(streamData, props.columns));\n      if (streamData.length > 40) {\n        setStreamData(streamData.slice(streamData.length - 40));\n      }\n    } else {\n      setStreamData([]);\n    }\n  }, 100);\n\n  const handleStreamRequest = (event, url) => {\n    setIsStreaming(true);\n\n    getReader(\n      event,\n      url,\n      setStreamData,\n      setIsStreaming,\n      setRecordBuffer,\n      props.columns,\n      setReader\n    );\n  };\n\n  function handleStopRecord(event) {\n    event.preventDefault();\n    // Prepare the file\n    let output = convertToCSV(recordBuffer, props.columns, isRecording);\n\n    /* FOR JSON OUTPUT\n    let output = JSON.stringify(\n      convertToJson(recordBuffer, props.columns, isRecording),\n      //{ test: \"test\" },\n      null,\n      4\n    );\n    */\n\n    var blob1 = new Blob([output], { type: \"text/plain;charset=utf-8\" });\n\n    //Check the Browser.\n    var isIE = false || !!document.documentMode;\n    if (isIE) {\n      window.navigator.msSaveBlob(blob1, \"data.csv\");\n    } else {\n      var url = window.URL || window.webkitURL;\n      var link = url.createObjectURL(blob1);\n      var a = document.createElement(\"a\");\n      a.download = \"data.csv\";\n      a.href = link;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n    setIsRecording(false);\n    var int16Array = new Int16Array();\n    setRecordBuffer(int16Array);\n  }\n\n  return (\n    <Grid xs={12}>\n      <Card>\n        <CardContent>\n          <div className={classes.section1}>\n            <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n              Test Mode: Data Stream\n            </Typography>\n          </div>\n          <Divider variant=\"middle\" />\n          <div className={classes.section2}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n          </div>\n          <StreamChart data={chartData} />\n\n          <Grid container rows spacing={3}>\n            {!isStreaming ? (\n              <Grid item xs={3}>\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStreamRequest(\n                        \"clicked\",\n                        `${process.env.REACT_APP_API_URL}stream`\n                      );\n                    }}\n                  >\n                    Start Streaming\n                  </Button>\n                </div>\n              </Grid>\n            ) : (\n              <Grid item xs={3}>\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStopStreaming(\n                        \"stopstreaming\",\n                        reader,\n                        setIsStreaming,\n                        setIsRecording\n                      );\n                    }}\n                  >\n                    Stop Streaming\n                  </Button>\n                </div>\n              </Grid>\n            )}\n            {!isRecording ? (\n              <Grid item xs={3}>\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    disabled={isStreaming ? (isRecording ? true : false) : true}\n                    onClick={() => {\n                      handleRecord(\"record\", setIsRecording, setRecordBuffer);\n                    }}\n                  >\n                    Begin Record\n                  </Button>\n                </div>\n              </Grid>\n            ) : (\n              <Grid item xs={3}>\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    disabled={isStreaming ? (isRecording ? false : true) : true}\n                    onClick={(e) => {\n                      handleStopRecord(e);\n                    }}\n                  >\n                    Stop Record\n                  </Button>\n                </div>\n              </Grid>\n            )}\n          </Grid>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SensorStream;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ResultsFilter = (props) => {\n  function filterData(data, filter_length) {\n    if (data.length === 0) {\n      return \"No Results\";\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      return \"UNC\";\n    }\n    return index;\n  }\n\n  return (\n    <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n      {filterData(props.data, props.filter_length)}\n    </Typography>\n  );\n};\n\nexport default ResultsFilter;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport ResultsFilter from \"./ResultsFilter\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  root: {\n    width: \"800px\",\n  },\n  sliderroot: {\n    width: \"100%\",\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  setReader\n) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    setReader(reader);\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nfunction handleStopStreaming(event, reader, setIsStreaming) {\n  //debugger;\n  console.log(reader);\n  reader.cancel();\n  setIsStreaming(false);\n}\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [reader, setReader] = React.useState();\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ]);\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    console.log(newValue);\n    setfilterLength(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardContent>\n          <div className={classes.section1}>\n            <Grid item xs={12}>\n              <Typography\n                align=\"center\"\n                component=\"h2\"\n                variant=\"h2\"\n                color=\"secondary\"\n              >\n                Device Mode: Recognition\n              </Typography>\n            </Grid>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n\n            <Grid item xs={12}>\n              {isStreaming ? (\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStopStreaming(\n                        \"stopstreaming\",\n                        reader,\n                        setIsStreaming\n                      );\n                    }}\n                  >\n                    Stop Stream\n                  </Button>\n                </div>\n              ) : (\n                <div className={classes.controls}>\n                  <Button\n                    aria-label=\"disconnect\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleStreamRequest(\n                        \"clicked\",\n                        `${process.env.REACT_APP_API_URL}results`,\n                        setDeviceRows,\n                        setIsStreaming,\n                        setReader\n                      );\n                    }}\n                  >\n                    Start Stream\n                  </Button>\n                </div>\n              )}\n            </Grid>\n          </div>\n\n          <Grid item alignContent=\"center\" xs={12}>\n            <ResultsFilter\n              data={deviceRows}\n              filter_length={filterLength}\n            ></ResultsFilter>\n          </Grid>\n\n          <Divider variant=\"middle\" />\n\n          <div className={classes.section1}>\n            <Grid container spacing={4} rows alignItems=\"center\">\n              <Grid item xs={12}>\n                <Typography\n                  align=\"left\"\n                  color=\"primary\"\n                  component=\"h5\"\n                  variant=\"h5\"\n                >\n                  Post Processing:\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                  Buffer:\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6}>\n                <div className={classes.sliderroot}>\n                  <Slider\n                    value={typeof filterLength === \"number\" ? filterLength : 1}\n                    onChange={handleFilterLengthSliderChange}\n                    aria-labelledby=\"input-slider\"\n                    min={1}\n                    max={10}\n                  />\n                </div>\n              </Grid>\n\n              <Grid item xs={1}>\n                <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                  {filterLength}\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n\n          <Divider variant=\"middle\" />\n          <div className={classes.section1}>\n            <div style={{ height: 600, width: \"100%\" }}>\n              <DataGrid\n                rows={deviceRows}\n                columns={deviceColumns}\n                pageSize={15}\n                sortModel={[{ field: \"id\", sort: \"desc\" }]}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Status } from \"../Status\";\nimport { Configure } from \"../Configure\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst Main = () => {\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState(0);\n  const [streamingSource, setStreamingSource] = React.useState(0);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n  const [isConnected, setIsConnected] = React.useState(false);\n\n  function handleChange(newValue) {\n    if (activeView != newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar onChange={handleChange} isConnected={isConnected} />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Status\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n              setIsConnected={setIsConnected}\n              isConnected={isConnected}\n            />\n          ) : null}\n          {activeView === 2 ? (\n            <Configure\n              setStreamingMode={setStreamingMode}\n              streamingSource={streamingSource}\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n              setIsConnected={setIsConnected}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            streamingMode == \"results\" ? (\n              <Results />\n            ) : (\n              <SensorStream columns={columns} />\n            )\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nconst App = () => {\n  return (\n    <LightTheme>\n      <Main />\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}