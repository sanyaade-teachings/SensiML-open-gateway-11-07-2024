{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/SimpleCard/SimpleCard.js","components/Status/Status.js","components/Configure/Scan.js","components/WebCamera/Camera.js","components/WebCamera/WebCamera.js","components/Configure/Configure.js","redux/actions/actionTypes/index.js","components/SensorStream/SensorDataChart.js","components/SensorStream/SensorStream.js","redux/selectors/sensorData/index.js","components/Results/ResultsFilter.js","components/Results/UploadModelJson.js","components/Results/UploadClassImagesJson.js","components/Results/Results.js","components/Record/Record.js","configs/index.js","components/TestMode/TestMode.js","redux/selectors/classes/index.js","components/Main/Main.js","redux/sagas/errors/index.js","services/StreamReader/errors.js","services/StreamReader/index.js","redux/repositories/StreamSensorReader.js","redux/sagas/stream/watchStreamSensorStart.js","redux/sagas/stream/watchStreamSensorStop.js","redux/sagas/stream/index.js","redux/sagas/sensorData/watchSetChunkSensorData.js","redux/sagas/sensorData/index.js","services/api/index.js","redux/sagas/classes/index.js","redux/sagas/index.js","redux/reducers/root/index.js","redux/reducers/errors/index.js","redux/reducers/stream/index.js","redux/reducers/sensorData/index.js","redux/reducers/classes/index.js","redux/reducers/version/index.js","redux/reducers/index.js","redux/store.jsx","App.js","services/VersionCheck/index.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","secondaryRed","red","notSelected","blueGrey","error","record","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","section1","margin","update_available_button","borderColor","no_update_available_button","visibility","InconSelector","index","Connected","Grid","isConnected","style","fontSize","green","grey","updateClicked","window","open","nb","connect","state","localVersion","versionData","cloudVersion","updateAvailable","console","log","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","Divider","isCameraConnected","Button","startIcon","Update","toolbar","alignItems","mixins","minWidth","bullet","transform","title","backgroundColor","pos","marginBottom","marginTop","SimpleCard","item","xs","align","name","list","dense","value","split","Status","container","rows","config","mode","source","device_id","sample_rate","column_location","formControl","AlertDialog","React","useState","setOpen","setIsScanning","deviceRows","setDeviceRows","setScanHelperText","scanningText","setScanningText","handleClose","handleDeviceScan","axios","post","process","toLowerCase","then","response","data","catch","detail","join","status","headers","request","disabled","configuring","fullWidth","preventDefault","Dialog","onClose","maxWidth","DialogContent","DialogContentText","height","columns","field","headerName","onRowClick","handleRowSelection","DialogActions","autoFocus","Camera","cameraKey","Box","cameraViewWrapper","src","alt","details","flexDirection","flex","controls","paddingLeft","paddingBottom","section2","textAlign","divWrapper","minHeight","selectWrapper","selectSource","selectLoading","lineHeight","handleCameraRequest","setCameraView","setIsCameraConnected","setCameraKey","indexSource","camera_index","event_type","Math","random","toString","substring","WebCamera","videoSourceList","setVideoSourceList","SOURCE_SCREEN_INDEX","videoSource","setVideoSource","videoSourceLoading","setVideoSourceLoading","videoSourceLoadError","setVideoSourceLoadError","loadVideoSource","a","get","video_sources","_","isEmpty","isArray","mainSource","find","el","useEffect","getVideoSourceName","useCallback","component","FormControl","sx","m","InputLabel","id","Select","labelId","e","target","label","sourceCam","MenuItem","FormHelperText","Tooltip","IconButton","size","Boolean","Configure","streamingSource","setSource","streamingMode","setMode","deviceID","setDeviceID","setError","helperText","setHelperText","setIsConfiguring","mapdata","setStreamingMode","setIsConnected","streaming","setColumns","Object","keys","sort","setStreamingSource","camera_on","setBaudRate","baud_rate","setConfig","toUpperCase","Card","CardContent","Fragment","type","res","onSubmit","baudRate","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","TextField","SET_GLOBAL_LOADER","FETCH_DATA_ERROR_MSG","SET_DATA_ERROR_MSG","START_STREAM_SENSOR_SAGA","STOP_STREAM_SENSOR_SAGA","SET_IS_STREAMING_SENSOR","SET_IS_STREAMING_SENSOR_RECORDING","SET_STREAM_SENSOR_DATA_RESET","SET_CHUNK_SENSOR_DATA_SAGA","SET_STREAM_SENSOR_DATA","SET_STREAM_SENSOR_RECORD_DATA","FETCH_CLASS_MAP_IMAGES","SET_CLASS_MAP_IMAGES","UPDATE_CLOUD_VERSION","UPDATE_LOCAL_VERSION","UPDATE_AVAILABLE","SensorDataChart","sensorData","revision","setRevision","length","x","opacity","layout","visible","autosize","l","r","b","t","pad","xaxis","autorange","yaxis","cardWrapper","dataWrapper","chartWrapper","buttonWrapper","marginLeft","zeroOpacity","SensorStream","column","dispatch","useDispatch","isSplitCharts","SetIsSplitCharts","useSelector","stream","isStreamingSensor","isStreamingSensorRecording","sensorSimpleData","result","y","forEach","i","push","floor","startSensorStreaming","payload","countSamples","dataType","stopSensorStreaming","setClearStream","Switch","checked","inputProps","ResultsFilter","now","Date","updateTime","setUpdateTime","isIdle","setIsIdle","checkIdle","time","date1","date2","right_now","abs","delay","setLastValue","interval","setInterval","clearInterval","filter_length","Classification","max","entries","key","filterData","UploadModelJson","errorMessage","setErrorMessage","hidden","uploadedFile","files","reader","FileReader","readAsText","onload","json_data","JSON","parse","onerror","UploadClassImagesJson","id_counter","sliderroot","sliderinput","cardBottom","handleStreamRequest","url","setStreamCallback","setIsStreaming","setReader","fetch","method","body","getReader","ReadableStream","start","controller","read","done","close","results","array","String","fromCharCode","apply","pop","bin2String","Response","Results","isStreaming","setDelay","filterLength","setfilterLength","val","valRef","useRef","current","cancel","useCleanup","alignContent","pageSize","sortModel","handleStopStreaming","Slider","newValue","min","Record","isRecording","recording","setRecording","filename","setFilename","recordDistabled","setRecordDistabled","handleRecordRequest","blob","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","handleDownloadRequest","apiHosts","classImageWrapper","classImage","TestMode","currentClass","setCurrentClass","classMapImages","classNameValid","imgPath","lg","md","Paper","imageWrapperCard","Main","activeView","setActiveView","setDataType","useSnackbar","enqueueSnackbar","closeSnackbar","errorDataMsg","errors","data_type","alertUser","returnValue","fetchClassMapImages","addEventListener","removeEventListener","useLayoutEffect","CssBaseline","direction","justify","samplerate","handleErrorMsg","watchErrorSaga","action","put","takeEvery","BaseStreamHttpError","errorCode","constructor","Error","StreamReader","fetchUrl","this","undefined","ok","statusText","actionType","arrayType","Float32Array","Int16Array","store","chunk","buffer","streamSensorReader","workerStreamStart","watchStreamSensorStart","call","debug","takeLatest","workerStreamStop","watchStreamSensorStop","streamSagas","all","fork","workerSetStreamChunkSensorData","watchSetChunkSensorData","chunkLength","updatedSensorSimpleData","select","sensorRecordedData","left","right","chunkI","sensorDataSagas","ApiService","interceptor_401","refreshUrl","init","baseURL","defaults","mount401Interceptor","interceptors","use","includes","unmount401Interceptor","eject","setCustomAuthHeader","common","Authorization","setContentType","contentType","removeHeader","resource","delete","customRequest","customJsonRequest","setAuthHeader","classesMapImagesSagas","reponse","reduce","acc","img","rootSaga","classesSagas","initialState","globalLoader","rootData","streamData","classesData","createAppReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","composedEnhancers","composeWithDevTools","applyMiddleware","appReducer","createStore","run","App","updateVersion","versionCheck","checkUpdate","anchorOrigin","horizontal","vertical","autoHideDuration","VersionCheck","cloudURL","baseurl","cloudurl","localResponse","cloudResp","SensiML_Open_Gateway_Windows","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb92b7f5.chunk.js","sourcesContent":["import React from \"react\";\nimport { blueGrey, deepOrange, lightBlue, red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, MuiThemeProvider, useTheme, } from \"@material-ui/core/styles\";\n\nconst LightTheme = (props) => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800]),\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500]),\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600]),\n      },\n      secondaryRed: {\n        light: red[600],\n        main: red[700],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[600]),\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600]),\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n      record: {\n        light: red[900],\n        main: red[900],\n        dark: red[900],\n        contrastText: theme.palette.getContrastText(red[500]),\n      },\n    },\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import { Button, Grid, Typography } from \"@material-ui/core\";\nimport { green, grey } from \"@material-ui/core/colors\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport { Update } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n\n  section1: {\n    margin: theme.spacing(2, 1),\n  },\n  update_available_button: {\n    color: \"primary\",\n    borderColor: \"primary\",\n    variant: \"outlined\",\n  },\n  no_update_available_button: {\n    visibility: `hidden`,\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <HomeIcon />;\n    case 1:\n      return <AssessmentIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst Connected = (props) => {\n  return (\n    <Grid>\n      {props.isConnected ? (\n        <Typography>\n          {\" \"}\n          <FiberManualRecordIcon\n            style={{ fontSize: 16, color: green[500] }}\n          ></FiberManualRecordIcon>{\" \"}\n          Connected{\" \"}\n        </Typography>\n      ) : (\n        <Typography>\n          {\" \"}\n          <FiberManualRecordIcon style={{ fontSize: 16, color: grey[500] }}>\n            {\" \"}\n          </FiberManualRecordIcon>{\" \"}\n          Not Connected{\" \"}\n        </Typography>\n      )}\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  localVersion: state.versionData.localVersion,\n  cloudVersion: state.versionData.cloudVersion,\n  updateAvailable: state.versionData.updateAvailable,\n});\n\nfunction updateClicked() {\n  window.open(\"https://github.com/sensiml/open-gateway/releases\", \"_blank\");\n}\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n  console.log(props);\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Home\", \"Test Mode\"].map((text, index) => (\n            <ListItem button key={text} onClick={handleMenu(index)}>\n              <ListItemIcon>\n                <InconSelector index={index}> </InconSelector>\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n          <div className={classes.section1}>\n            <Divider></Divider>\n          </div>\n          <ListItem>\n            <Typography color=\"primary\">Device Status</Typography>\n          </ListItem>\n          <ListItem>\n            <Connected\n              text=\"Device\"\n              isConnected={props.isConnected}\n            ></Connected>\n          </ListItem>\n          <ListItem>\n            <Typography color=\"primary\">Video Status</Typography>\n          </ListItem>\n          <ListItem>\n            <Connected\n              text=\"Video\"\n              isConnected={props.isCameraConnected}\n            ></Connected>\n          </ListItem>\n          <ListItem>\n            <Typography color=\"primary\">Version</Typography>\n          </ListItem>\n          <ListItem>\n            <Typography color=\"black\">{props.localVersion}</Typography>\n          </ListItem>\n          <ListItem>\n            <Button\n              aria-multiline={true}\n              startIcon={<Update />}\n              onClick={updateClicked}\n              className={\n                props.updateAvailable\n                  ? classes.update_available_button\n                  : classes.no_update_available_button\n              }\n            >\n              Update Available: {props.cloudVersion}\n            </Button>\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n};\nconst nb = connect(mapStateToProps)(NavBar);\nexport default nb;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 5, 5, 35),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import { Grid } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    transform: \"scale(1.0)\",\n  },\n  title: {\n    fontSize: 20,\n    backgroundColor: \"#e0e0e0\",\n  },\n  pos: {\n    marginBottom: 2,\n    marginTop: 2,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.xs}>\n      <Typography align=\"center\" className={classes.title} color=\"textPrimary\">\n        {props.name}\n      </Typography>\n      {props.list ? (\n        <div className={classes.bullet}>\n          <List dense={true}>\n            {props.value.split(\",\").map((value) => (\n              <ListItem>\n                <ListItemText align=\"center\" primary={value} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      ) : (\n        <Typography\n          align=\"center\"\n          className={classes.pos}\n          color=\"textSecondary\"\n        >\n          {props.value}\n        </Typography>\n      )}\n    </Grid>\n  );\n};\n\nexport default SimpleCard;\n","import { Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { SimpleCard } from \"../SimpleCard\";\n\nconst Status = (props) => {\n  return (\n    <Grid container rows spacing={4}>\n      <Grid item xs={12} container rows spacing={2}>\n        <SimpleCard name=\"Mode\" xs=\"6\" value={props.config.mode}></SimpleCard>\n        <SimpleCard\n          name=\"Source\"\n          xs=\"6\"\n          value={props.config.source}\n        ></SimpleCard>\n      </Grid>\n      <Grid item xs={12} container rows spacing={2}>\n        <SimpleCard\n          name=\"Device ID\"\n          xs={6}\n          value={props.config.device_id}\n        ></SimpleCard>\n        {props.config.mode === \"data_capture\" ? (\n          <SimpleCard\n            xs=\"6\"\n            name=\"Sample Rate\"\n            value={props.config.sample_rate}\n          ></SimpleCard>\n        ) : null}\n      </Grid>\n      <Grid item xs={12}>\n        {props.config.mode === \"data_capture\" ? (\n          <SimpleCard\n            name=\"Sensor Columns\"\n            value={props.config.column_location}\n            list={true}\n          ></SimpleCard>\n        ) : null}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DialogContentText } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 600,\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  section1: {\n    margin: theme.spacing(1, 1),\n  },\n}));\n\nexport default function AlertDialog(props) {\n  const [open, setOpen] = React.useState(false);\n  const [scanning, setIsScanning] = React.useState(false);\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [scanHelperText, setScanHelperText] = React.useState(\"\");\n  const [error, setError] = React.useState(false);\n  const classes = useStyles();\n  const [scanningText, setScanningText] = React.useState(\"Scanning\");\n\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 0 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ];\n\n  const handleClickOpen = (event) => {\n    setDeviceRows([]);\n    setOpen(true);\n    event.preventDefault();\n    handleDeviceScan();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDeviceScan = () => {\n    setScanningText(\"Scanning for \" + props.source + \" Devices....\");\n    setIsScanning(true);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        source: props.source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setIsScanning(false);\n        setDeviceRows(response.data);\n        setScanningText(\"Scanning complete\");\n      })\n      .catch(function (error) {\n        setIsScanning(false);\n        if (error.response) {\n          // Request made and server responded\n          setScanHelperText(error.response.data.detail.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.detail);\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        disabled={props.configuring}\n        fullWidth={true}\n        onClick={handleClickOpen}\n        className={classes.button}\n      >\n        Scan for {props.source} Devices\n      </Button>\n      <Dialog open={open} onClose={handleClose} fullWidth=\"sm\" maxWidth=\"sm\">\n        <DialogContent>\n          <DialogContentText>{scanningText}</DialogContentText>\n\n          <div style={{ height: 600, width: \"100%\" }}>\n            <DataGrid\n              rows={deviceRows}\n              columns={deviceColumns}\n              onRowClick={props.handleRowSelection}\n\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            select\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n} from \"@material-ui/core\";\n\n\nconst Camera = ({ cameraKey, classes, isCameraConnected }) => {\n  return (\n    <Box className={classes.cameraViewWrapper}>\n    { isCameraConnected ?\n      <img\n        src={`http://localhost:5555/stream-video?${cameraKey}`}\n        alt=\"Camera\"\n      />\n      : \"Video Source is not connected\"\n    }\n    </Box>\n  );\n};\n\nexport default Camera;\n","import _ from \"lodash\";\nimport React, { useEffect, useCallback } from \"react\";\nimport {\n  Button,\n  Tooltip,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  FormHelperText,\n  IconButton,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CachedIcon from \"@material-ui/icons/Cached\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport Camera from \"./Camera\";\n\nconst SOURCE_SCREEN_INDEX = -1;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 3, 0),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  divWrapper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2, 2, 2, 2),\n    maxWidth: 800,\n    minHeight: 800,\n  },\n  selectWrapper: {\n    height: \"3.25rem\",\n  },\n  selectSource: {\n    width: \"100%\",\n  },\n  selectLoading: {\n    lineHeight: 3.25,\n  },\n  cameraViewWrapper: {\n    minHeight: \"480px\",\n    minWidth: \"640px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst handleCameraRequest = (\n  event,\n  setCameraView,\n  setIsCameraConnected,\n  setCameraKey,\n  indexSource\n) => {\n  console.log(event);\n\n  axios\n    .post(`${process.env.REACT_APP_API_URL}config-video`, {\n      camera_index: indexSource,\n      event_type: event,\n    })\n    .then((response) => {\n      console.log(response.data);\n      if (event === \"camera-on\") {\n        setCameraView(true);\n        setIsCameraConnected(true);\n        setCameraKey(Math.random().toString(36).substring(7));\n        console.log(\"caera event\");\n        console.log(event);\n      }\n      if (event === \"camera-off\") {\n        setCameraView(false);\n        setIsCameraConnected(false);\n        console.log(\"caera event\");\n        console.log(event);\n      }\n    });\n};\n\nconst WebCamera = (props) => {\n  const classes = useStyles();\n  const [cameraView, setCameraView] = React.useState(false);\n  const [cameraKey, setCameraKey] = React.useState(\"\");\n  const [videoSourceList, setVideoSourceList] = React.useState([]);\n  const [videoSource, setVideoSource] = React.useState(SOURCE_SCREEN_INDEX - 1);\n  const [videoSourceLoading, setVideoSourceLoading] = React.useState(false);\n  const [videoSourceLoadError, setVideoSourceLoadError] = React.useState(\"\");\n\n  const loadVideoSource = async () => {\n    setVideoSourceLoadError(\"\");\n    setVideoSourceLoading(true);\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}scan-video`,\n        {}\n      );\n      const { video_sources } = response.data;\n      if (!_.isEmpty(video_sources) && _.isArray(video_sources)) {\n        const mainSource = video_sources.find((el) => el.index === 0);\n        setVideoSourceList(video_sources);\n        setVideoSource(mainSource.index);\n      }\n    } catch (e) {\n      setVideoSourceLoadError(\n        \"Failed to load video sources, please, try again\"\n      );\n    }\n    setVideoSourceLoading(false);\n  };\n\n  useEffect(() => {\n    loadVideoSource();\n  }, []);\n\n  const getVideoSourceName = useCallback(() => {\n    // useCallback\n    const name = \"Camera\";\n    if (!_.isEmpty(videoSourceList) && _.isArray(videoSourceList)) {\n      return (\n        videoSourceList.find((el) => el.index === videoSource)?.name || name\n      );\n    }\n    return name;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [videoSource]);\n\n  const handleUpdateVideoSourceList = () => {\n    loadVideoSource();\n  };\n\n  const handleCameraSourceSelect = (e) => {\n    setVideoSource(e.target.value);\n  };\n\n  return (\n    <div>\n      <div className={classes.section1}>\n        <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n          Video Source\n        </Typography>\n      </div>\n      <div className={classes.section1}>\n        <Divider variant=\"middle\" />\n      </div>\n\n      <Camera\n        classes={classes}\n        cameraKey={cameraKey}\n        isCameraConnected={props.isCameraConnected}\n      ></Camera>\n      <div className={classes.section2}>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n      </div>\n\n      <div className={classes.details}>\n        <Grid container rows spacing={2}>\n          <Grid item xs={12}>\n            <Box\n              className={classes.selectWrapper}\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              {videoSourceLoadError ? (\n                <Typography color=\"error\"> {videoSourceLoadError} </Typography>\n              ) : videoSourceLoading ? (\n                <Box className={classes.selectLoading}>{\"Loading...\"}</Box>\n              ) : (\n                <>\n                  <FormControl\n                    className={classes.selectSource}\n                    variant=\"standard\"\n                    sx={{ m: 1, minWidth: 120 }}\n                  >\n                    <InputLabel id=\"video_sources_select_label\">\n                      Video Source\n                    </InputLabel>\n                    <Select\n                      labelId=\"video_sources_select_label\"\n                      id=\"video_sources_select\"\n                      value={videoSource}\n                      onChange={handleCameraSourceSelect}\n                      label=\"Video source\"\n                      disabled={props.isCameraConnected !== false}\n                    >\n                      {videoSourceList.map((sourceCam) => (\n                        <MenuItem\n                          value={sourceCam.index}\n                          key={`source_select_${sourceCam.index}`}\n                        >\n                          {sourceCam.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    {props.isCameraConnected !== false ? (\n                      <FormHelperText id=\"my-helper-text\">\n                        To change souce, first disconnect {getVideoSourceName()}\n                      </FormHelperText>\n                    ) : null}\n                  </FormControl>\n                  <Tooltip title=\"Reload video sources\">\n                    <IconButton\n                      aria-label=\"delete\"\n                      size=\"large\"\n                      color=\"primary\"\n                      disabled={props.isCameraConnected !== false}\n                      onClick={handleUpdateVideoSourceList}\n                    >\n                      <CachedIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </Tooltip>\n                </>\n              )}\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            {props.isCameraConnected === false ? (\n              <Button\n                aria-label=\"Start Camera\"\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth={true}\n                disabled={Boolean(videoSource < SOURCE_SCREEN_INDEX)}\n                onClick={() => {\n                  handleCameraRequest(\n                    \"camera-on\",\n                    setCameraView,\n                    props.setIsCameraConnected,\n                    setCameraKey,\n                    videoSource\n                  );\n                }}\n              >\n                Connect to {getVideoSourceName()}\n              </Button>\n            ) : (\n              <Button\n                aria-label=\"Stop Camera\"\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth={true}\n                onClick={() => {\n                  handleCameraRequest(\n                    \"camera-off\",\n                    setCameraView,\n                    props.setIsCameraConnected,\n                    setCameraKey,\n                    videoSource\n                  );\n                }}\n              >\n                Disconnect {getVideoSourceName()}\n              </Button>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default WebCamera;\n","import { Grid, Typography, Divider } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { Status } from \"../Status\";\nimport Scan from \"./Scan\";\nimport { WebCamera } from \"../WebCamera\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  formControl: {\n    margin: theme.spacing(3),\n    minWidth: 600,\n  },\n  divWrapper: {\n    margin: theme.spacing(3),\n    padding: theme.spacing(2, 2, 2, 2),\n    maxWidth: 700,\n    minWidth: 600,\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n  section1: {\n    margin: theme.spacing(2, 0, 1, 0),\n  },\n}));\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(\n    props.streamingSource ? props.streamingSource : \"SERIAL\"\n  );\n\n  const [mode, setMode] = React.useState(\n    props.streamingMode === \"recognition\" ? \"RECOGNITION\" : \"DATA_CAPTURE\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n\n  const [helperText, setHelperText] = React.useState(\"\");\n\n  const [configuring, setIsConfiguring] = React.useState(false);\n\n  const handleRadioChange = (event) => {\n    console.log(\"handle radio\");\n    setSource(event.target.value);\n  };\n\n  const handleDeviceBaudRate = (event) => {\n    console.log(\"handle radio\");\n    props.setBaudRate(event.target.value);\n  };\n\n  const handleModeChange = (event) => {\n    console.log(\"handle mode\");\n    setMode(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    console.log(\"handle device id\");\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.row.device_id);\n    setDeviceID(event.row.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    setIsConfiguring(true);\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      setIsConfiguring(false);\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    let data = {\n      device_id: deviceID,\n      source: source.toLowerCase(),\n      mode: mode,\n    };\n    if (source === \"SERIAL\") {\n      data.baud_rate = props.baudRate;\n    }\n    axios\n      .post(`${process.env.REACT_APP_API_URL}config`, data)\n      .then((response) => {\n        mapdata(response.data);\n        if (response.data.streaming === false) {\n          setHelperText(\n            \"Error starting device, check the logs in the terminal for details for additional details\"\n          );\n        } else {\n          setHelperText(\"Device Connected\");\n        }\n        setIsConfiguring(false);\n      })\n      .catch(function (error) {\n        setIsConfiguring(false);\n        if (error.response) {\n          setHelperText(error.response.data.detail.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.detail);\n          setHelperText(error.response.data.detail.join(\", \"));\n        }\n      });\n  };\n\n  const handleDisconnectRequest = (event) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => {\n      console.log(res.data);\n      mapdata(res.data);\n    });\n  };\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    props.setIsConnected(data.streaming);\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    props.setIsCameraConnected(data.camera_on);\n    props.setBaudRate(data.baud_rate);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    props.setConfig(data);\n  }\n\n  useEffect(() => {\n    setDeviceID(props.deviceID);\n    setSource(props.streamingSource);\n    setMode(props.streamingMode.toUpperCase());\n  }, [props.deviceID, props.streamingMode]);\n\n  return (\n    <Grid container columns>\n      <Grid item>\n        <Card className={classes.divWrapper}>\n          <CardContent>\n            <div className={classes.section1}>\n              <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n                Device Source\n              </Typography>\n            </div>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n            {props.isConnected ? (\n              <React.Fragment>\n                <Status\n                  setStreamingMode={props.setStreamingMode}\n                  setColumns={props.setColumns}\n                  setStreamingSource={props.setStreamingSource}\n                  setDeviceID={props.setDeviceID}\n                  setIsConnected={props.setIsConnected}\n                  isConnected={props.isConnected}\n                  setIsCameraConnected={props.setIsCameraConnected}\n                  isCameraConnected={props.isCameraConnected}\n                  config={props.config}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={configuring}\n                  fullWidth={true}\n                  className={classes.button}\n                  onClick={handleDisconnectRequest}\n                >\n                  Disconnect Device\n                </Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    component=\"fieldset\"\n                    disabled={configuring || props.isConnected}\n                    error={error}\n                    className={classes.formControl}\n                  >\n                    <div>\n                      <FormLabel component=\"legend\">Device Mode:</FormLabel>\n                      <RadioGroup\n                        aria-label=\"mode\"\n                        name=\"Streaming Source\"\n                        value={mode}\n                        onChange={handleModeChange}\n                        row\n                      >\n                        <FormControlLabel\n                          value=\"DATA_CAPTURE\"\n                          control={<Radio />}\n                          label=\"Data Capture\"\n                        />\n                        <FormControlLabel\n                          value=\"RECOGNITION\"\n                          control={<Radio />}\n                          label=\"Recognition\"\n                        />\n                      </RadioGroup>\n                    </div>\n                    <div className={classes.section1}></div>\n                    <div>\n                      <FormLabel>Connection Type</FormLabel>\n                      <RadioGroup\n                        aria-label=\"source\"\n                        value={source}\n                        onChange={handleRadioChange}\n                        row\n                      >\n                        <FormControlLabel\n                          value=\"SERIAL\"\n                          control={<Radio />}\n                          label=\"Serial\"\n                        />\n                        <FormControlLabel\n                          value=\"BLE\"\n                          control={<Radio />}\n                          label=\"BLE\"\n                        />\n                        <FormControlLabel\n                          value=\"TCPIP\"\n                          control={<Radio />}\n                          label=\"TCP/IP\"\n                        />\n                        <FormControlLabel\n                          value=\"TEST\"\n                          control={<Radio />}\n                          label=\"Test\"\n                        />\n                      </RadioGroup>\n                    </div>\n\n                    <Scan\n                      source={source}\n                      handleRowSelection={handleRowSelection}\n                      configuring={configuring}\n                    />\n\n                    <div className={classes.section1}></div>\n\n                    <div>\n                      <FormLabel component=\"legend\">Device ID:</FormLabel>\n                      <TextField\n                        id=\"outlined-basic\"\n                        variant=\"outlined\"\n                        value={deviceID}\n                        onChange={handleDeviceIDChange}\n                        fullWidth={true}\n                      />\n                    </div>\n\n                    <div className={classes.section1}></div>\n\n                    {source === \"SERIAL\" ? (\n                      <div>\n                        <FormLabel component=\"legend\">Baud Rate:</FormLabel>\n                        <TextField\n                          id=\"outlined-basic\"\n                          variant=\"outlined\"\n                          value={props.baudRate}\n                          onChange={handleDeviceBaudRate}\n                          fullWidth={true}\n                        />\n                      </div>\n                    ) : (\n                      <div />\n                    )}\n\n                    <div className={classes.section1}></div>\n                    <div>\n                      <Grid container columns spacing={2}>\n                        <Grid item xs={12}>\n                          <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={configuring}\n                            fullWidth={true}\n                            className={classes.button}\n                          >\n                            Connect to Device\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                    <div className={classes.section1}></div>\n                    <Typography> {helperText}</Typography>\n                  </FormControl>\n                </form>\n              </React.Fragment>\n            )}\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card className={classes.divWrapper}>\n          <CardContent>\n            <WebCamera\n              setIsCameraConnected={props.setIsCameraConnected}\n              isCameraConnected={props.isCameraConnected}\n            />\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Configure;\n","// root\nexport const SET_GLOBAL_LOADER = \"SET_GLOBAL_LOADER\";\n\n// errors\nexport const FETCH_DATA_ERROR_MSG = \"FETCH_DATA_ERROR_MSG\";\nexport const SET_DATA_ERROR_MSG = \"SET_DATA_ERROR_MSG\";\n\n// stream\nexport const START_STREAM_SENSOR_SAGA = \"START_STREAM_SENSOR_SAGA\";\nexport const STOP_STREAM_SENSOR_SAGA = \"STOP_STREAM_SENSOR_SAGA\";\nexport const SWITCH_STREAM_SENSOR_RECORD_SAGA =\n  \"SWITCH_STREAM_SENSOR_RECORD_SAGA\";\nexport const SET_IS_STREAMING_SENSOR = \"SET_IS_STREAMING_SENSOR\";\nexport const SET_IS_STREAMING_SENSOR_RECORDING =\n  \"SET_IS_STREAMING_SENSOR_RECORDING\";\nexport const SET_STREAM_SENSOR_DATA_RESET = \"SET_STREAM_SENSOR_DATA_RESET\";\n\n// sensor data\nexport const SET_CHUNK_SENSOR_DATA_SAGA = \"SET_CHUNK_SENSOR_DATA_SAGA\";\nexport const SET_STREAM_SENSOR_DATA = \"SET_STREAM_SENSOR_DATA\";\nexport const SET_STREAM_SENSOR_RECORD_DATA = \"SET_STREAM_SENSOR_RECORD_DATA\";\n\n// classes data\n\nexport const FETCH_CLASS_MAP_IMAGES = \"FETCH_CLASS_MAP_IMAGES\";\nexport const SET_CLASS_MAP_IMAGES = \"SET_CLASS_MAP_IMAGES\";\n\nexport const UPDATE_CLOUD_VERSION = \"UPDATE_CLOUD_VERSION\";\nexport const UPDATE_LOCAL_VERSION = \"UPDATE_LOCAL_VERSION\";\nexport const UPDATE_AVAILABLE = \"UPDATE_AVAILABLE\";\n","import React, { useEffect, useState } from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst SensorDataChart = (props) => {\n  const { sensorData, title } = props;\n  const [revision, setRevision] = useState(0);\n  let opacity = \"1\";\n\n  useEffect(() => {\n    setRevision(revision + 1);\n    if (sensorData && sensorData.length) {\n      if (sensorData[0].x && sensorData[0].x.length) {\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sensorData]);\n\n  return (\n    <Plot\n      data={sensorData}\n      revision={revision}\n      style={{ width: \"100%\", height: \"100%\", opacity }}\n      layout={{\n        title,\n        visible: false,\n        autosize: true,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 100,\n          t: 100,\n          pad: 4,\n        },\n        xaxis: {\n          autorange: true,\n        },\n        yaxis: {\n          autorange: true,\n        },\n      }}\n    />\n  );\n};\n\nexport default SensorDataChart;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Switch,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  SET_STREAM_SENSOR_DATA_RESET,\n  START_STREAM_SENSOR_SAGA,\n  STOP_STREAM_SENSOR_SAGA,\n} from \"../../redux/actions/actionTypes\";\nimport { sensorDataForChart } from \"../../redux/selectors/sensorData\";\nimport SensorDataChart from \"./SensorDataChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardWrapper: {\n    padding: theme.spacing(2),\n  },\n  dataWrapper: {\n    padding: theme.spacing(2),\n  },\n  chartWrapper: {\n    width: \"100%\",\n    margin: theme.spacing(1),\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  zeroOpacity: {\n    opacity: \"0\",\n  },\n}));\n\nconst SensorStream = (props) => {\n  const COUNT_SAMPLES = 1000;\n  const { columns } = props;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [isSplitCharts, SetIsSplitCharts] = useState(false);\n  const { isStreamingSensor, isStreamingSensorRecording } = useSelector(\n    (state) => state.stream\n  );\n  const sensorData = useSelector(sensorDataForChart(columns));\n\n  const startSensorStreaming = useCallback(\n    // max array is COUNT_SAMPLES * count of data types\n    () =>\n      dispatch({\n        type: START_STREAM_SENSOR_SAGA,\n        payload: {\n          countSamples: COUNT_SAMPLES * ((columns && columns?.length) || 1),\n          dataType: props.dataType,\n        },\n      }),\n    [dispatch]\n  );\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const setClearStream = useCallback(\n    () => dispatch({ type: SET_STREAM_SENSOR_DATA_RESET, payload: [] }),\n    [dispatch]\n  );\n\n  const switchSplitChart = () => {\n    SetIsSplitCharts(!isSplitCharts);\n  };\n\n  const manageStream = () => {\n    console.log(\"streaming\", isStreamingSensor);\n    if (isStreamingSensor) {\n      stopSensorStreaming();\n    } else {\n      setClearStream();\n      startSensorStreaming();\n    }\n  };\n\n  useEffect(() => {\n    if (!props.isConnected && isStreamingSensor) {\n      stopSensorStreaming();\n      setClearStream();\n    }\n    if (props.isConnected && !isStreamingSensor) {\n      startSensorStreaming();\n    }\n  }, []);\n\n  return (\n    <Card>\n      <CardContent>\n        <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n          Test Mode: Data Capture\n        </Typography>\n        <Box className={classes.dataWrapper}>\n          <Box className={classes.chartWrapper}>\n            <Box className={!isStreamingSensor && classes.zeroOpacity}>\n              <Switch\n                checked={isSplitCharts}\n                onChange={() => switchSplitChart()}\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />{\" \"}\n              Split charts\n            </Box>\n            {sensorData && sensorData.length && isSplitCharts ? (\n              sensorData.map((data) => (\n                <SensorDataChart\n                  title={data.name}\n                  sensorData={[data]}\n                  isStreamingSensor={isStreamingSensor}\n                />\n              ))\n            ) : (\n              <SensorDataChart\n                sensorData={sensorData}\n                isStreamingSensor={isStreamingSensor}\n              />\n            )}\n          </Box>\n          <Box className={classes.buttonWrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => manageStream()}\n            >\n              {isStreamingSensor ? \"Pause\" : \"Resume\"}\n            </Button>\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SensorStream;\n","export const sensorDataForChart = column => (state) => {\n  const { sensorSimpleData } = state.sensorData;\n  // generate chart zero array\n  const result = column.map(name => {\n    return {\n      x: [],\n      y: [],\n      type: 'scatter',\n      mode: 'lines',\n      name,\n    };\n  });\n  // fill result array\n  sensorSimpleData.forEach((el, i) => {\n    result[i % column.length].x.push(Math.floor(i / column.length));\n    result[i % column.length].y.push(el);\n  });\n  return result;\n};\n","import { Typography } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\n\nfunction getDifferenceInSeconds(date1, date2) {\n  const diffInMs = Math.abs(date2 - date1);\n  return diffInMs / 1000;\n}\n\nconst ResultsFilter = (props) => {\n  const now = new Date();\n  const [updateTime, setUpdateTime] = React.useState(now);\n  const [isIdle, setIsIdle] = React.useState(false);\n\n  function filterData(data, filter_length) {\n    let result = \"\";\n    if (data.length === 0) {\n      result = \"No Results\";\n      props.setLastValue(result);\n      return result;\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      result = \"UNC\";\n      props.setLastValue(result);\n      return result;\n    }\n\n    result = index;\n    props.setLastValue(result);\n    return result;\n\n  }\n\n  useEffect(() => {\n    let right_now = new Date();\n    setUpdateTime(right_now);\n    setIsIdle(false);\n\n  }, [props.data]);\n\n  function checkIdle(time) {\n    const right_now = new Date();\n    if (getDifferenceInSeconds(time, right_now) > props.delay) {\n      setIsIdle(true);\n      props.setLastValue(\"Idle\");\n    }\n  }\n\n  React.useEffect(() => {\n    if (!isIdle) {\n        const interval = setInterval(() => {\n        checkIdle(updateTime);\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }\n  }, [updateTime, isIdle]);\n\n  return (\n    <>\n      {isIdle ? (\n        <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n              IDLE\n        </Typography>\n      ) : (\n        <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n          {filterData(props.data, props.filter_length)}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nexport default ResultsFilter;\n","import React, { useState } from \"react\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadModelJson = (props) => {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleFile = (event) => {\r\n    const uploadedFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsText(uploadedFile);\r\n\r\n    reader.onload = function () {\r\n      console.log(reader.result);\r\n      let json_data = {};\r\n      try {\r\n        json_data = JSON.parse(reader.result);\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}config-model-json`, json_data)\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            setErrorMessage(\"\");\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessage(\"upload failed\");\r\n            console.log(error);\r\n          });\r\n      } catch {}\r\n    };\r\n\r\n    reader.onerror = function () {\r\n      console.log(reader.error);\r\n    };\r\n  };\r\n  return (\r\n    <Box>\r\n      <Button variant=\"contained\" component=\"label\">\r\n        Upload Class Map JSON\r\n        <input type=\"file\" hidden onChange={handleFile} />\r\n      </Button>\r\n      <Typography> {errorMessage}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UploadModelJson;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadClassImagesJson = (props) => {\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleFile = (event) => {\r\n    const uploadedFile = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.readAsText(uploadedFile);\r\n\r\n    reader.onload = function () {\r\n      console.log(reader.result);\r\n      let json_data = {};\r\n      try {\r\n        json_data = JSON.parse(reader.result);\r\n        axios\r\n          .post(\r\n            `${process.env.REACT_APP_API_URL}config-class-map-images-json`,\r\n            json_data\r\n          )\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            setErrorMessage(\"\");\r\n          })\r\n          .catch((error) => {\r\n            setErrorMessage(\"upload failed\");\r\n            console.log(error);\r\n          });\r\n      } catch {}\r\n    };\r\n\r\n    reader.onerror = function () {\r\n      console.log(reader.error);\r\n    };\r\n  };\r\n  return (\r\n    <Box>\r\n      <Button variant=\"contained\" component=\"label\">\r\n        Upload Class Images JSON\r\n        <input type=\"file\" hidden onChange={handleFile} />\r\n      </Button>\r\n      <Typography> {errorMessage}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UploadClassImagesJson;\r\n","import React, { useEffect, useRef } from \"react\";\nimport _ from \"lodash\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport ResultsFilter from \"./ResultsFilter\";\nimport UploadModelJson from \"./UploadModelJson\";\nimport UploadClassImagesJson from \"./UploadClassImagesJson\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  root: {\n    width: \"800px\",\n  },\n  sliderroot: {\n    width: \"100%\",\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n  cardBottom: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  setReader\n) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    setReader(reader);\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n\n            for (let i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nfunction handleStopStreaming(event, reader, setIsStreaming) {\n  reader.cancel();\n  setIsStreaming(false);\n}\n\nconst useCleanup = (val) => {\n  const valRef = useRef(val);\n  useEffect(() => {\n    valRef.current = val;\n  }, [val]);\n\n  useEffect(() => {\n    return () => {\n      valRef.current.cancel();\n    };\n  }, []);\n};\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [reader, setReader] = React.useState();\n  const [delay, setDelay] = React.useState(5);\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  let deviceColumns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"source\", headerName: \"Device ID\", width: 240 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ];\n\n  const classes = useStyles();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    setfilterLength(newValue);\n  };\n\n  const handleDelayLengthSliderChange = (event, newValue) => {\n    setDelay(newValue);\n  };\n\n  useEffect(() => {\n    handleStreamRequest(\n      \"clicked\",\n      `${process.env.REACT_APP_API_URL}results`,\n      setDeviceRows,\n      setIsStreaming,\n      setReader\n    );\n  }, []);\n\n  useCleanup(reader);\n\n  return (\n    <>\n      <Card>\n        <CardContent>\n          <div className={classes.section1}>\n            <Grid item xs={12}>\n              <Typography\n                align=\"center\"\n                component=\"h2\"\n                variant=\"h2\"\n                color=\"secondary\"\n              >\n                Test Mode: Recognition\n              </Typography>\n            </Grid>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n          </div>\n\n          <Grid item alignContent=\"center\" xs={12}>\n            <ResultsFilter\n              data={deviceRows}\n              filter_length={filterLength}\n              setLastValue={props.setLastValue}\n              delay={delay}\n            ></ResultsFilter>\n          </Grid>\n\n          <div className={classes.section1}>\n            <Divider variant=\"middle\" />\n          </div>\n\n          <div className={classes.section1}>\n            <div style={{ height: 600, width: \"100%\" }}>\n              <DataGrid\n                rows={deviceRows}\n                columns={deviceColumns}\n                pageSize={15}\n                sortModel={[{ field: \"id\", sort: \"desc\" }]}\n              />\n            </div>\n          </div>\n          {isStreaming ? (\n            <Button\n              aria-label=\"disconnect\"\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth={true}\n              onClick={() => {\n                handleStopStreaming(\"stopstreaming\", reader, setIsStreaming);\n              }}\n            >\n              Pause\n            </Button>\n          ) : (\n            <Button\n              aria-label=\"disconnect\"\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth={true}\n              onClick={() => {\n                handleStreamRequest(\n                  \"clicked\",\n                  `${process.env.REACT_APP_API_URL}results`,\n                  setDeviceRows,\n                  setIsStreaming,\n                  setReader\n                );\n              }}\n            >\n              Resume\n            </Button>\n          )}\n        </CardContent>\n      </Card>\n      <Card className={classes.cardBottom}>\n        <CardContent>\n          <Typography align=\"left\" color=\"primary\" component=\"h5\" variant=\"h5\">\n            Post Processing\n          </Typography>\n\n          <div className={classes.section1}>\n            <Divider variant=\"middle\" />\n          </div>\n\n          <Grid container spacing={4} rows alignItems=\"center\">\n            <Grid item xs={4}>\n              <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                Majority Vote Buffer\n              </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n              <div className={classes.sliderroot}>\n                <Slider\n                  value={typeof filterLength === \"number\" ? filterLength : 1}\n                  onChange={handleFilterLengthSliderChange}\n                  aria-labelledby=\"input-slider\"\n                  min={1}\n                  max={10}\n                />\n              </div>\n            </Grid>\n\n            <Grid item xs={1}>\n              <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                {filterLength}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={4} rows alignItems=\"center\">\n            <Grid item xs={4}>\n              <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                Idle Delay\n              </Typography>\n            </Grid>\n\n            <Grid item xs={6}>\n              <div className={classes.sliderroot}>\n                <Slider\n                  value={typeof delay === \"number\" ? delay : 5}\n                  onChange={handleDelayLengthSliderChange}\n                  aria-labelledby=\"input-slider\"\n                  min={1}\n                  max={10}\n                />\n              </div>\n            </Grid>\n\n            <Grid item xs={1}>\n              <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                {delay}\n              </Typography>\n            </Grid>\n          </Grid>\n          <div className={classes.section1}>\n            <Divider variant=\"middle\" />\n          </div>\n\n          <Typography align=\"left\" color=\"primary\" component=\"h5\" variant=\"h5\">\n            Mapping\n          </Typography>\n\n          <div className={classes.section1}>\n            <Divider variant=\"middle\" />\n          </div>\n          <Grid container spacing={2}>\n            <Grid item>\n              <UploadModelJson />\n            </Grid>\n            <Grid item>\n              <UploadClassImagesJson />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default Results;\n","import {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Tooltip,\n} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nconst Record = (props) => {\n  const classes = useStyles();\n  const [recording, setRecording] = React.useState(props.isRecording);\n  const [filename, setFilename] = React.useState(\"filename\");\n  const [recordDistabled, setRecordDistabled] = React.useState(false);\n  console.log(props.isCameraConnected);\n\n  const handleRecordRequest = (event, url, setRecording, filename) => {\n    setRecordDistabled(true);\n    console.log(event);\n\n    if (filename === \"\") {\n      filename = \"test\";\n    }\n    console.log(filename);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + url, {\n        filename: filename,\n        event_type: event,\n      })\n      .then((response) => {\n        console.log(response.data);\n        if (event === \"record-start\") {\n          setRecording(true);\n          console.log(event);\n        }\n        if (event === \"record-stop\") {\n          setRecording(false);\n          console.log(event);\n        }\n        setRecordDistabled(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setRecordDistabled(false);\n      });\n  };\n\n  const handleDownloadRequest = (event, filename) => {\n    console.log(`${process.env.REACT_APP_API_URL}download/` + filename);\n    fetch(`${process.env.REACT_APP_API_URL}download/` + filename, {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/zip\" },\n    })\n      .then((response) => response.blob())\n      .then((blob) => {\n        // Create blob link to download\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", filename + \".zip\");\n\n        // Append to html link element page\n        document.body.appendChild(link);\n\n        // Start download\n        link.click();\n\n        // Clean up and remove the link\n        link.parentNode.removeChild(link);\n      });\n  };\n  const handleFileNameChange = (event) => {\n    setFilename(event.target.value);\n  };\n\n  return (\n    <Card>\n      <CardContent>\n        <div className={classes.section1}>\n          <Typography component=\"h4\" variant=\"h4\" color=\"secondary\">\n            Record to Gateway\n          </Typography>\n        </div>\n        <Divider variant=\"middle\" />\n        <div className={classes.section2}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n        </div>\n\n        <Grid container columns spacing={6}>\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              value={filename}\n              onChange={handleFileNameChange}\n              fullWidth={true}\n              disabled={recording}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            {recording === false ? (\n              <Tooltip\n                title=\"This will record the device sensor data in .csv format to the gateway.\n                  If video source is connected, the video source will also be recorded.\n                  \"\n                aria-label=\"record\"\n              >\n                <Button\n                  aria-label=\"Record\"\n                  variant=\"contained\"\n                  fullWidth={true}\n                  disabled={recordDistabled}\n                  onClick={() => {\n                    handleRecordRequest(\n                      \"record-start\",\n                      props.isCameraConnected ? \"record\" : \"record-device\",\n                      setRecording,\n                      filename\n                    );\n                  }}\n                >\n                  Record\n                </Button>\n              </Tooltip>\n            ) : (\n              <Button\n                aria-label=\"Stop \"\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={recordDistabled}\n                onClick={() => {\n                  handleRecordRequest(\n                    \"record-stop\",\n                    props.isCameraConnected ? \"record\" : \"record-device\",\n                    setRecording\n                  );\n                }}\n              >\n                Stop Recording\n              </Button>\n            )}\n          </Grid>\n\n          <Grid item xs={6}>\n            <Tooltip\n              title=\"Download the recorded .csv and .mp4 for this capture from the gateway. A .dcli file will also be generated describing the data.\n                  \"\n              aria-label=\"record\"\n            >\n              <Button\n                aria-label=\"Download \"\n                variant=\"contained\"\n                fullWidth={true}\n                disabled={recordDistabled}\n                onClick={() => {\n                  handleDownloadRequest(\"download\", filename);\n                }}\n              >\n                Download\n              </Button>\n            </Tooltip>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Record;\n","export const APP_API_URL = process.env.REACT_APP_API_URL || '/';\nexport const CLOUD_API_URL = process.env.REACT_APP_CLOUD_API_URL || 'https://sensiml.cloud/'\nexport const apiHosts = {\n  baseHost: APP_API_URL,\n  cloudHost: CLOUD_API_URL,\n};\n","import React, { useState } from \"react\";\nimport { Grid, Box, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport { Record } from \"../Record\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectClassImage } from \"../../redux/selectors/classes\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n\n  classImageWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"1rem\",\n    marginBottom: \"1rem\",\n    minHeight: \"450px\",\n  },\n\n  classImage: {\n    width: \"90%\",\n  },\n\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n}));\n\nconst TestMode = (props) => {\n  const classes = useStyles();\n  const [currentClass, setCurrentClass] = useState(\"\");\n  const classImage = useSelector(selectClassImage(currentClass));\n\n  const handleLastValue = (value) => {\n    setCurrentClass(value || \"\");\n  };\n\n  return (\n    <Grid container rows spacing={6}>\n      {props.streamingMode !== \"recognition\" ? (\n        <>\n          <Grid item lg={8} md={12}>\n            <SensorStream\n              columns={props.columns}\n              isConnected={props.isConnected}\n              dataType={props.dataType}\n            />\n          </Grid>\n          <Grid item md={12} lg={4}>\n            <Record\n              isCameraConnected={props.isCameraConnected}\n              isRecording={props.isRecording}\n            />\n          </Grid>\n        </>\n      ) : (\n        <>\n          <Grid item md={12} lg={6}>\n            <Results setLastValue={handleLastValue} />\n          </Grid>\n          <Grid item md={12} lg={6}>\n            <Paper className={classes.imageWrapperCard}>\n              <Box className={classes.classImageWrapper}>\n                {classImage ? (\n                  <img\n                    className={classes.classImage}\n                    src={classImage}\n                    alt={currentClass}\n                  />\n                ) : currentClass ? (\n                  `No Image for ${currentClass}`\n                ) : (\n                  \"\"\n                )}\n              </Box>\n            </Paper>\n\n            <Record\n              isCameraConnected={props.isCameraConnected}\n              isRecording={props.isRecording}\n            />\n          </Grid>\n        </>\n      )}\n    </Grid>\n  );\n};\n\nexport default TestMode;\n","import _ from \"lodash\";\nimport { APP_API_URL } from \"../../../configs\";\n\nexport const selectClassImage = className => (state) => {\n  const { classMapImages } = state.classes;\n  const classNameValid = _.toString(className);\n\n  if (classMapImages && classNameValid) {\n    const imgPath = classMapImages[classNameValid];\n    if (imgPath) {\n      console.log(\"imgPath\", imgPath)\n      return `${APP_API_URL}${imgPath}`;\n    }\n    return \"\";\n  }\n  return \"\";\n};\n","import React, { useCallback, useEffect, useLayoutEffect } from \"react\";\n\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Configure } from \"../Configure\";\nimport { TestMode } from \"../TestMode\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { useSnackbar } from \"notistack\";\nimport { useDispatch, useSelector, } from \"react-redux\";\nimport { STOP_STREAM_SENSOR_SAGA, FETCH_CLASS_MAP_IMAGES } from \"../../redux/actions/actionTypes\";\nimport axios from \"axios\";\n\n\nconst Main = (props) => {\n\n  const dispatch = useDispatch();\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState('DATA_CAPTURE');\n  const [streamingSource, setStreamingSource] = React.useState(null);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n  const [isConnected, setIsConnected] = React.useState(false);\n  const [isCameraConnected, setIsCameraConnected] = React.useState(false);\n  const [isRecording, setIsRecording] = React.useState(false);\n  const [baudRate, setBaudRate] = React.useState(null);\n  const [config, setConfig] = React.useState({});\n  const [firstLoad, setFirstLoad] = React.useState(null);\n  const [dataType, setDataType] = React.useState('int16');\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { isStreamingSensor } = useSelector((state) => state.stream);\n  const { errorDataMsg } = useSelector((state) => state.errors);\n\n  function handleChange(newValue) {\n    if (activeView !== newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  function mapdata(data) {\n    if (data.mode) {\n      setStreamingMode(data.mode);\n    }\n    setIsConnected(data.streaming);\n    setColumns(Object.keys(data.column_location).sort());\n    setStreamingSource(data.source?.toUpperCase());\n    setDeviceID(data.device_id);\n    setIsCameraConnected(data.camera_on);\n    setBaudRate(data.baud_rate);\n\n    switch (data.data_type) {\n      case ('int16'):\n        setDataType('int16');\n        break;\n      case ('float'):\n        setDataType('float');\n        break;\n      default:\n        setDataType('int16');\n    }\n\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    setConfig(data);\n  }\n\n  const alertUser = (e) => {\n    if (isStreamingSensor) {\n      e.preventDefault();\n      e.returnValue = \"\";\n    }\n  };\n\n  const stopSensorStreaming = useCallback(\n    () => dispatch({ type: STOP_STREAM_SENSOR_SAGA }),\n    [dispatch]\n  );\n\n  const fetchClassMapImages = useCallback(\n    () => dispatch({ type: FETCH_CLASS_MAP_IMAGES }),\n    [dispatch]\n  );\n\n  // before leave handler\n  useEffect(() => {\n    if (isStreamingSensor) {\n      window.addEventListener(\"beforeunload\", alertUser);\n      window.addEventListener(\"unload\", stopSensorStreaming);\n      return () => {\n        window.removeEventListener(\"beforeunload\", alertUser);\n        window.removeEventListener(\"unload\", stopSensorStreaming);\n        stopSensorStreaming();\n      };\n    }\n  }, [isStreamingSensor]);\n\n  useEffect(() => {\n    if (errorDataMsg) {\n      enqueueSnackbar(errorDataMsg, { variant: \"warning\" });\n    }\n  }, [errorDataMsg]);\n\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      mapdata(response.data);\n      console.log(response.data)\n    });\n    fetchClassMapImages();\n  }, [activeView]);\n\n  useLayoutEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`, {}).then((response) => {\n      mapdata(response.data);\n    });\n  }, []);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar\n          onChange={handleChange}\n          isConnected={isConnected}\n          isCameraConnected={isCameraConnected}\n\n        />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Configure\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n              setIsConnected={setIsConnected}\n              isConnected={isConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              isCameraConnected={isCameraConnected}\n              config={config}\n              setConfig={setConfig}\n              streamingSource={streamingSource}\n              baudRate={baudRate}\n              setBaudRate={setBaudRate}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            <TestMode\n              columns={columns}\n              streamingMode={streamingMode}\n              isConnected={isConnected}\n              isRecording={isRecording}\n              isCameraConnected={isCameraConnected}\n              setIsCameraConnected={setIsCameraConnected}\n              samplerate={config.samplerate}\n              dataType={dataType}\n            />\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import { delay, put, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_DATA_ERROR_MSG,\n} from \"../../actions/actionTypes\";\n\nfunction* handleErrorMsg(action) {\n  yield put({ type: SET_DATA_ERROR_MSG, payload: action.payload });\n  yield delay(1000);\n  yield put({ type: SET_DATA_ERROR_MSG, payload: null });\n}\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_DATA_ERROR_MSG, handleErrorMsg);\n}\n","export class BaseStreamHttpError extends Error {\n  constructor(errorCode, response) {\n    super();\n    if (errorCode !== 500) {\n      this.detail = response.detail;\n    } else {\n      this.detail = 'Server Error. Please, contact support.';\n    }\n    this.name = this.constructor.name;\n    this.errorCode = errorCode;\n  }\n}","import { BaseStreamHttpError } from \"./errors\";\n\nimport store from \"../../redux/store\";\n\nclass StreamReader {\n  /* *\n   * StreamReader class based on browser fetch method for handling stream data to\n   * @constructs\n   * @param {string} fetchUrl - endpoint fetch url\n   * */\n  constructor(fetchUrl) {\n    /* @param {string} fetchUrl - endpoint fetch url */\n    this.reader = undefined;\n    this.fetchUrl = fetchUrl;\n  }\n\n  async startStreaming() {\n    /*\n      fetch streaming endpoint and setup this.reader\n    */\n    let response;\n    console.log(\"getting response\");\n    try {\n      response = await fetch(this.fetchUrl);\n    } catch (error) {\n      console.log(error);\n      throw new BaseStreamHttpError(404, {\n        detail: \"Failed to fetch API service\",\n      });\n    }\n    if (!response.ok) {\n      throw new BaseStreamHttpError(response.status, {\n        detail: response.statusText,\n      });\n    }\n    console.log(\"getting reader\");\n    this.reader = response.body.getReader();\n  }\n\n  async stopStreaming() {\n    if (this.reader) {\n      this.reader.cancel();\n      this.reader = undefined;\n    }\n  }\n\n  async readStreamToRedux(actionType, countSamples = 0, dataType = 'int16') {\n    /*\n      read and write array by chunk to redux\n      @param {string} actionType - redux action const name\n      @param {number} maxLength - max length of redux streamed array\n    * */\n    console.log('DATA TYPE IS ' + dataType);\n    const arrayType = dataType === 'float' ? Float32Array : Int16Array;\n    while (true) {\n      const { value, done } = await this.reader.read();\n      if (done) break;\n      store.dispatch({\n        type: actionType,\n        payload: { chunk: new arrayType(value.buffer), countSamples },\n      });\n    }\n  }\n}\n\nexport { BaseStreamHttpError };\nexport default StreamReader;\n","import StreamReader from \"../../services/StreamReader\";\nimport { apiHosts } from \"../../configs\";\n\nexport let streamSensorReader = undefined;\n\nexport const initStreamSensorReader = () => {\n  streamSensorReader = new StreamReader(`${apiHosts.baseHost}stream`);\n};","import { call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { BaseStreamHttpError } from \"../../../services/StreamReader\";\nimport {\n  FETCH_DATA_ERROR_MSG,\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_IS_STREAMING_SENSOR,\n  START_STREAM_SENSOR_SAGA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerStreamStart(action) {\n  try {\n    const { countSamples, dataType } = action?.payload;\n    console.log(action.payload);\n\n    yield call([streamSensorReader, \"startStreaming\"]);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: true });\n    yield call(\n      [streamSensorReader, \"readStreamToRedux\"],\n      SET_CHUNK_SENSOR_DATA_SAGA,\n      countSamples,\n      dataType,\n    );\n  } catch (e) {\n    console.debug(e);\n    if (e instanceof BaseStreamHttpError) {\n      yield put({ type: FETCH_DATA_ERROR_MSG, payload: e.detail });\n    } else {\n      yield put({\n        type: FETCH_DATA_ERROR_MSG,\n        payload: \"Failed to read stream data\",\n      });\n    }\n  }\n}\n\nexport default function* watchStreamSensorStart() {\n  yield takeLatest(START_STREAM_SENSOR_SAGA, workerStreamStart);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { streamSensorReader } from \"../../repositories/StreamSensorReader\";\nimport { SET_IS_STREAMING_SENSOR, STOP_STREAM_SENSOR_SAGA, } from \"../../actions/actionTypes\";\n\n\nfunction* workerStreamStop(action) {\n  try {\n    yield call([streamSensorReader, 'stopStreaming']);\n    yield put({ type: SET_IS_STREAMING_SENSOR, payload: false });\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchStreamSensorStop() {\n  yield takeLatest(STOP_STREAM_SENSOR_SAGA, workerStreamStop);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchStreamSensorStart from \"./watchStreamSensorStart\";\nimport watchStreamSensorStop from \"./watchStreamSensorStop\";\n\nexport default function* streamSagas() {\n  yield all([\n    fork(watchStreamSensorStart),\n    fork(watchStreamSensorStop),\n  ]);\n}\n\n","import { put, select, takeLatest } from \"redux-saga/effects\";\nimport {\n  SET_CHUNK_SENSOR_DATA_SAGA,\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n} from \"../../actions/actionTypes\";\n\nfunction* workerSetStreamChunkSensorData(action) {\n  try {\n    const { chunk, countSamples } = action.payload;\n    const chunkLength = (chunk && chunk.length) || 0;\n    let updatedSensorSimpleData = [];\n\n    const { sensorSimpleData, sensorRecordedData } = yield select(\n      (state) => state.sensorData\n    );\n    const { isStreamingSensorRecording } = yield select(\n      (state) => state.stream\n    );\n    console.log(\"called\", chunkLength / (2 * 6));\n\n    // when chunk greater than max of count samples set all chunk data or if countSamples == 0\n    if (chunkLength >= countSamples) {\n      updatedSensorSimpleData = [...chunk];\n    } else if (sensorSimpleData.length >= countSamples) {\n      // when reach countSamples limit\n      updatedSensorSimpleData = [...sensorSimpleData];\n      let [left, right, chunkI] = [0, sensorSimpleData.length, 0];\n      while (left < right) {\n        if (right - left > chunkLength) {\n          updatedSensorSimpleData[left] = sensorSimpleData[left + chunkLength];\n        } else {\n          updatedSensorSimpleData[left] = chunk[chunkI];\n          chunkI++;\n        }\n        left++;\n      }\n    } else {\n      updatedSensorSimpleData = [...sensorSimpleData, ...chunk];\n    }\n\n    yield put({\n      type: SET_STREAM_SENSOR_DATA,\n      payload: updatedSensorSimpleData,\n    });\n    // update whole list if recording\n    if (isStreamingSensorRecording) {\n      yield put({\n        type: SET_STREAM_SENSOR_RECORD_DATA,\n        payload: [...sensorRecordedData, ...chunk],\n      });\n    }\n  } catch (e) {\n    console.debug(e);\n  }\n}\n\nexport default function* watchSetChunkSensorData() {\n  yield takeLatest(SET_CHUNK_SENSOR_DATA_SAGA, workerSetStreamChunkSensorData);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchSetChunkSensorData from \"./watchSetChunkSensorData\";\n\nexport default function* sensorDataSagas() {\n  yield all([\n    fork(watchSetChunkSensorData),\n  ]);\n}\n","import axios from \"axios\";\n\n\nconst ApiService = {\n  // Stores the 401 interceptor position so that it can be later ejected when needed\n  interceptor_401: null,\n  refreshUrl: '/auth/refresh',\n\n\n  init(baseURL) {\n    axios.defaults.baseURL = baseURL;\n  },\n\n\n  mount401Interceptor() {\n    this.interceptor_401 = axios.interceptors.response.use((response) => response,\n      async (error) => {\n        if (error.request.status === 401) {\n          if (error.config.url.includes('auth')) {\n            // Refresh token has failed or auth endpoint return 401 => Logout the user\n            throw error;\n          } else {\n            // refresh token\n          }\n        }\n        // If error was not 401 just reject as is\n        throw error;\n      });\n  },\n\n\n  unmount401Interceptor() {\n    // Eject the interceptor\n    axios.interceptors.response.eject(this.interceptor_401);\n  },\n\n  setCustomAuthHeader(key) {\n    axios.defaults.headers.common.Authorization = key;\n  },\n\n  setContentType(type) {\n    axios.defaults.headers.contentType = type;\n  },\n\n  removeHeader() {\n    axios.defaults.headers.common = {};\n  },\n\n  get(resource) {\n    return axios.get(resource);\n  },\n\n  post(resource, data) {\n    return axios.post(resource, data);\n  },\n\n  put(resource, data) {\n    return axios.put(resource, data);\n  },\n\n  delete(resource) {\n    return axios.delete(resource);\n  },\n\n  customRequest(data) {\n    return axios(data);\n  },\n\n  customJsonRequest(data) {\n    this.setAuthHeader();\n    this.setContentType('application/json');\n    return axios(data);\n  },\n\n};\n\nexport default ApiService;\n","/* eslint-disable require-yield */\nimport _ from \"lodash\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\nimport ApiService from \"../../../services/api\";\nimport {\n  FETCH_CLASS_MAP_IMAGES,\n  SET_CLASS_MAP_IMAGES,\n} from \"../../actions/actionTypes\";\n\nfunction* classesMapImagesSagas() {\n  const reponse = yield ApiService.get(\"class-map-images\");\n  yield console.log(\"classesMapImagesSagas\");\n  if (!_.isEmpty(reponse.data)) {\n    const payload = yield _.reduce(\n      reponse.data,\n      (acc, el) => {\n        acc[el.name] = el.img;\n        return acc;\n      },\n      [{}]\n    );\n    yield put({ type: SET_CLASS_MAP_IMAGES, payload });\n  }\n}\n\nexport default function* watchErrorSaga() {\n  yield takeEvery(FETCH_CLASS_MAP_IMAGES, classesMapImagesSagas);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport watchErrorSaga from \"./errors\";\nimport streamSagas from \"./stream\";\nimport sensorDataSagas from \"./sensorData\";\nimport classesSagas from \"./classes\";\n\nexport default function* rootSaga() {\n  yield all([\n    fork(streamSagas),\n    fork(watchErrorSaga),\n    fork(sensorDataSagas),\n    fork(classesSagas),\n  ]);\n}\n","import {\n  SET_GLOBAL_LOADER,\n} from '../../actions/actionTypes';\n\nconst initialState = {\n  globalLoader: false,\n};\n\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_GLOBAL_LOADER:\n      return {\n        ...state,\n        globalLoader: action.payload || false,\n      };\n    default:\n      return state;\n  }\n}","import { SET_DATA_ERROR_MSG } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  errorDataMsg: null,\n};\n\nexport default function rootData(state = initialState, action) {\n  switch (action.type) {\n    case SET_DATA_ERROR_MSG:\n      return {\n        ...state,\n        errorDataMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import { SET_IS_STREAMING_SENSOR, SET_IS_STREAMING_SENSOR_RECORDING, } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  isStreamingSensor: false,\n  isStreamingSensorRecording: false,\n};\n\nexport default function streamData(state = initialState, action) {\n  switch (action.type) {\n    case SET_IS_STREAMING_SENSOR:\n      return {\n        ...state,\n        isStreamingSensor: action.payload,\n      };\n    case SET_IS_STREAMING_SENSOR_RECORDING:\n      return {\n        ...state,\n        isStreamingSensorRecording: action.payload,\n      };\n    default:\n      return state;\n  }\n}","import {\n  SET_STREAM_SENSOR_DATA,\n  SET_STREAM_SENSOR_RECORD_DATA,\n  SET_STREAM_SENSOR_DATA_RESET,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n  sensorSimpleData: new Int16Array(),\n  sensorRecordedData: new Int16Array(),\n};\n\nexport default function sensorData(state = initialState, action) {\n  switch (action.type) {\n    case SET_STREAM_SENSOR_DATA_RESET:\n      return {\n        ...state,\n        sensorSimpleData: new Int16Array(),\n        sensorRecordedData: new Int16Array(),\n      };\n    case SET_STREAM_SENSOR_DATA:\n      return {\n        ...state,\n        sensorSimpleData: [...action.payload],\n      };\n    case SET_STREAM_SENSOR_RECORD_DATA:\n      return {\n        ...state,\n        sensorRecordedData: [...action.payload],\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_CLASS_MAP_IMAGES } from \"../../actions/actionTypes\";\n\nconst initialState = {\n  classMapImages: {},\n};\n\nexport default function classesData(state = initialState, action) {\n  switch (action.type) {\n    case SET_CLASS_MAP_IMAGES:\n      return {\n        ...state,\n        classMapImages: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  UPDATE_CLOUD_VERSION,\n  UPDATE_AVAILABLE,\n  UPDATE_LOCAL_VERSION,\n} from \"../../actions/actionTypes\";\n\nconst initialState = {\n  localVersion: \"\",\n  cloudVersion: \"\",\n  updateAvailable: false\n}\n\nexport default function versionData(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CLOUD_VERSION:\n      return {\n        ...state,\n        cloudVersion: action.payload\n      };\n    case UPDATE_AVAILABLE:\n      return {\n        ...state,\n        updateAvailable: state.localVersion < state.cloudVersion\n      };\n    case UPDATE_LOCAL_VERSION:\n      return {\n        ...state,\n        localVersion: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\n// modules\nimport rootData from \"./root\";\nimport errors from \"./errors\";\nimport streamData from \"./stream\";\nimport sensorData from \"./sensorData\";\nimport classesData from \"./classes\";\nimport versionData from \"./version\";\n\nconst createAppReducer = () => combineReducers({\n  root: rootData,\n  errors,\n  stream: streamData,\n  sensorData,\n  versionData,\n  classes: classesData,\n});\n\nexport default createAppReducer;\n","import createSagaMiddleware from \"redux-saga\";\n\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootSaga from \"./sagas\";\nimport createAppReducer from \"./reducers\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancers = [];\n\nconst middleware = [\n  sagaMiddleware,\n];\n\nconst composedEnhancers = composeWithDevTools(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nconst appReducer = createAppReducer();\n\nconst store = createStore(\n  appReducer,\n  composedEnhancers,\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import \"./App.css\";\n\nimport React, { useEffect } from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nimport { Provider } from \"react-redux\";\nimport { SnackbarProvider } from \"notistack\";\n\nimport store from \"./redux/store\";\nimport { initStreamSensorReader } from \"./redux/repositories/StreamSensorReader\";\n\nimport ApiService from \"./services/api\";\nimport { apiHosts } from \"./configs\";\n\nApiService.init(apiHosts.baseHost);\n// initialize StreamSensorReader for handle as entrypoint\ninitStreamSensorReader();\n\nconst App = (props) => {\n\n  useEffect(() => {\n    const updateVersion = async () => {\n      await props.versionCheck.checkUpdate();\n    };\n    updateVersion();\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <LightTheme>\n      <Provider store={store}>\n        <SnackbarProvider\n          anchorOrigin={{\n            horizontal: \"right\",\n            vertical: \"top\",\n          }}\n          autoHideDuration={2000}\n        >\n          <Main />\n        </SnackbarProvider>\n      </Provider>\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import axios from \"axios\";\nimport { BaseStreamHttpError } from \"../StreamReader\";\nimport store from \"../../redux/store\";\nimport { UPDATE_AVAILABLE, UPDATE_CLOUD_VERSION, UPDATE_LOCAL_VERSION } from \"../../redux/actions/actionTypes\";\n\nexport class VersionCheck {\n  constructor(baseURL, cloudURL) {\n    this.baseurl = baseURL;\n    this.cloudurl = cloudURL;\n    this.localVersion = \"\";\n    this.cloudVersion = \"\";\n    this.updateAvailable = false;\n  }\n\n  async checkUpdate() {\n    let localResponse;\n    let response;\n    try {\n      localResponse = await axios.get(`${this.baseurl}version`);\n    } catch (error) {\n      console.log(error);\n      throw new BaseStreamHttpError(404, {\n        detail: \"Failed to fetch API service\",\n      });\n    }\n    if (localResponse.statusText !== \"OK\") {\n      throw new BaseStreamHttpError(response.status, {\n        detail: localResponse.statusText,\n      });\n    }\n    this.localVersion = localResponse.data\n    store.dispatch({ type: UPDATE_LOCAL_VERSION, payload: localResponse.data });\n\n    try {\n      let url = `${this.cloudurl}version/?format=json`\n      response = await axios.get(url, {\n        headers: { 'Content-Type': 'application/json' },\n      });\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n    if (response.statusText !== \"OK\") {\n      return;\n    }\n    let cloudResp = response.data;\n    if (cloudResp.SensiML_Open_Gateway_Windows) {\n      this.cloudVersion = cloudResp.SensiML_Open_Gateway_Windows;\n      store.dispatch({ type: UPDATE_CLOUD_VERSION, payload: cloudResp.SensiML_Open_Gateway_Windows });\n      store.dispatch({ type: UPDATE_AVAILABLE, payload: (this.localVersion < this.cloudVersion) });\n    }\n\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {VersionCheck} from \"./services/VersionCheck\";\nimport {apiHosts} from \"./configs\";\n\nconst versionCheck = new VersionCheck(apiHosts.baseHost, apiHosts.cloudHost);\n\nReactDOM.render(\n  <App versionCheck={versionCheck}/>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}