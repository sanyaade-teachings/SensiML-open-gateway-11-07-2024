{"version":3,"sources":["components/Themes/LightTheme.js","components/Layout/Header.js","components/Layout/NavBar.js","components/Main/MainStyles.js","components/SimpleCard/SimpleCard.js","components/Status/Status.js","components/Configure/Stepper.js","components/Configure/Configure.js","components/SensorStream/StreamChart.js","components/SensorStream/SensorStream.js","components/Results/ResultsFilter.js","components/Results/Results.js","components/Main/Main.js","App.js","index.js"],"names":["LightTheme","props","theme","useTheme","currentTheme","createMuiTheme","palette","primary","light","lightBlue","main","dark","contrastText","getContrastText","accent","deepOrange","secondary","notSelected","blueGrey","error","red","children","Header","classes","makeStyles","navbarDisplayFlex","display","justifyContent","navDisplayFlex","linkText","textDecoration","textTransform","color","appBar","zIndex","drawer","AppBar","position","className","Toolbar","Typography","variant","useStyles","root","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","InconSelector","index","Connected","Grid","isConnected","Button","aria-label","NavBar","Drawer","paper","List","map","text","ListItem","button","onClick","viewId","event","onChange","ListItemIcon","ListItemText","toolbar","alignItems","mixins","minWidth","bullet","transform","title","fontSize","backgroundColor","pos","marginBottom","marginTop","SimpleCard","item","xs","Card","CardContent","align","name","list","dense","value","split","details","flexDirection","flex","controls","Status","useState","config","setConfig","useEffect","axios","get","process","then","res","mapdata","data","mode","setStreamingMode","setIsConnected","streaming","setColumns","Object","keys","column_location","sort","setStreamingSource","source","setDeviceID","device_id","join","class","container","columns","rows","sample_rate","fullWidth","console","log","handleDisconnectRequest","handleConnectRequest","backButton","marginRight","instructions","stepIcon","HorizontalLabelPositionBelowStepper","React","activeStep","steps","Stepper","alternativeLabel","label","Step","StepLabel","active","StepIconProps","Configure","streamingSource","setSource","streamingMode","modeUrl","setModeUrl","deviceID","setError","scanHelperText","setScanHelperText","helperText","setHelperText","deviceRows","setDeviceRows","field","headerName","deviceColumns","onSubmit","preventDefault","post","toLowerCase","response","catch","message","status","headers","request","FormControl","component","FormLabel","RadioGroup","target","row","FormControlLabel","control","Radio","TextField","id","type","FormHelperText","style","height","onRowSelected","pageSize","formControl","StreamChart","layout","autosize","paddingLeft","paddingBottom","section1","margin","section2","textAlign","handleStreamRequest","url","setStreamCallback","setIsStreaming","fetch","method","reader","body","getReader","stream","ReadableStream","start","controller","push","read","done","close","int16Array","Int16Array","buffer","size","length","x_array","Array","lines","x","y","i","col","splitArray","Response","SensorStream","streamData","setStreamData","isStreaming","Divider","disabled","ResultsFilter","filter_length","m","Classification","max","entries","key","filterData","id_counter","sliderroot","sliderinput","results","array","String","fromCharCode","apply","pop","JSON","parse","bin2String","Results","filterLength","setfilterLength","alignContent","Slider","newValue","aria-labelledby","min","sortModel","Main","activeView","setActiveView","CssBaseline","direction","justify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.038f57cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { lightBlue, deepOrange, red, blueGrey } from \"@material-ui/core/colors\";\nimport {\n  useTheme,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core/styles\";\n\nconst LightTheme = props => {\n  const theme = useTheme();\n\n  const currentTheme = createMuiTheme({\n    palette: {\n      primary: {\n        light: lightBlue[600],\n        main: lightBlue[800],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[800])\n      },\n      accent: {\n        light: deepOrange[200],\n        main: deepOrange[500],\n        dark: deepOrange[800],\n        contrastText: theme.palette.getContrastText(deepOrange[500])\n      },\n      secondary: {\n        light: lightBlue[600],\n        main: lightBlue[700],\n        dark: lightBlue[800],\n        contrastText: theme.palette.getContrastText(lightBlue[600])\n      },\n      notSelected: {\n        light: blueGrey[500],\n        main: blueGrey[700],\n        dark: blueGrey[800],\n        contrastText: theme.palette.getContrastText(blueGrey[600])\n      },\n      error: {\n        light: red[200],\n        main: red[500],\n        dark: red[800],\n        contrastText: theme.palette.getContrastText(red[500])\n      }\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={currentTheme}>{props.children}</MuiThemeProvider>\n  );\n};\n\nexport default LightTheme;\n","import * as React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    navbarDisplayFlex: {\n      display: `flex`,\n      justifyContent: `space-between`,\n    },\n    navDisplayFlex: {\n      display: `flex-right`,\n      justifyContent: `space-between`,\n    },\n    linkText: {\n      textDecoration: `none`,\n      textTransform: `uppercase`,\n      color: `white`,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  }))();\n\nconst navLinks = [\n  { title: `company`, path: `/sensiml` },\n  { title: `contact`, path: `/contact` },\n];\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\" className={classes.appBar}>\n      <Toolbar>\n        <Typography variant=\"h6\">SensiML Streaming Gateway</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: \"auto\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst InconSelector = (props) => {\n  switch (props.index) {\n    case 0:\n      return <InfoIcon />;\n    case 1:\n      return <AssessmentIcon />;\n    case 2:\n      return <SettingsIcon />;\n    default:\n      return <InboxIcon />;\n  }\n};\n\nconst Connected = (props) => {\n  return (\n    <Grid>\n      {props.isConnected ? (\n        <Button color=\"green\" variant=\"contained\" aria-label=\"disconnect\">\n          Connected\n        </Button>\n      ) : (\n        <Button color=\"red\" variant=\"contained\" aria-label=\"disconnect\">\n          Disconnected\n        </Button>\n      )}\n    </Grid>\n  );\n};\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const handleMenu = (viewId) => (event) => {\n    props.onChange(viewId);\n  };\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <Toolbar />\n      <div className={classes.drawerContainer}>\n        <List>\n          {[\"Device Info\", \"Stream\", \"Configure Gateway\"].map((text, index) => (\n            <ListItem button key={text} onClick={handleMenu(index)}>\n              <ListItemIcon>\n                <InconSelector index={index}> </InconSelector>\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n          <ListItem>\n            <Connected isConnected={props.isConnected}></Connected>\n          </ListItem>\n        </List>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default NavBar;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = () =>\n  makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n    },\n    toolbar: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-end\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width: \"100%\",\n      padding: theme.spacing(5, 40),\n      justifyContent: \"flex-end\",\n    },\n  }))();\n\nexport default useStyles;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport { Grid } from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    transform: \"scale(1.0)\",\n  },\n  title: {\n    fontSize: 20,\n    backgroundColor: \"#e0e0e0\",\n  },\n  pos: {\n    marginBottom: 2,\n    marginTop: 2,\n  },\n});\n\nconst SimpleCard = (props) => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={props.xs}>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            align=\"center\"\n            className={classes.title}\n            color=\"textPrimary\"\n          >\n            {props.name}\n          </Typography>\n          {props.list ? (\n            <div className={classes.bullet}>\n              <List dense={true}>\n                {props.value.split(\",\").map((value) => (\n                  <ListItem>\n                    <ListItemText align=\"center\" primary={value} />\n                  </ListItem>\n                ))}\n              </List>\n            </div>\n          ) : (\n            <Typography\n              align=\"center\"\n              className={classes.pos}\n              color=\"textSecondary\"\n            >\n              {props.value}\n            </Typography>\n          )}\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SimpleCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { CardContent, Typography } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { SimpleCard } from \"../SimpleCard\";\nimport Card from \"@material-ui/core/Card\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"700px\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Status = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  let [config, setConfig] = useState([]);\n\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}config`).then((res) => {\n      setConfig(mapdata(res.data));\n    });\n  }, []);\n\n  const handleDisconnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}disconnect`).then((res) => {\n      console.log(res.data);\n      setConfig(mapdata(res.data));\n    });\n  };\n\n  const handleConnectRequest = (event, setConfig) => {\n    axios.get(`${process.env.REACT_APP_API_URL}connect`).then((res) => {\n      setConfig(mapdata(res.data));\n    });\n  };\n\n  function mapdata(data) {\n    if (data.mode) {\n      props.setStreamingMode(data.mode);\n    }\n    props.setIsConnected(data.streaming);\n    props.setColumns(Object.keys(data.column_location).sort());\n    props.setStreamingSource(data.source);\n    props.setDeviceID(data.device_id);\n    data.column_location =\n      \"column_location\" in data\n        ? Object.keys(data.column_location).sort().join(\", \")\n        : [];\n\n    return data;\n  }\n  return (\n    <div class={classes.root}>\n      <Card>\n        <CardContent>\n          <Grid container columns spacing={4}>\n            <Grid item xs={12} container rows spacing={2}>\n              <SimpleCard name=\"Mode\" xs=\"6\" value={config.mode}></SimpleCard>\n              <SimpleCard\n                name=\"Source\"\n                xs=\"6\"\n                value={config.source}\n              ></SimpleCard>\n            </Grid>\n            <Grid item xs={12} container rows spacing={2}>\n              <SimpleCard\n                name=\"Device ID\"\n                xs={6}\n                value={config.device_id}\n              ></SimpleCard>\n              {config.mode === \"data_capture\" ? (\n                <SimpleCard\n                  xs=\"6\"\n                  name=\"Sample Rate\"\n                  value={config.sample_rate}\n                ></SimpleCard>\n              ) : null}\n            </Grid>\n            <Grid item xs={12}>\n              {config.mode === \"data_capture\" ? (\n                <SimpleCard\n                  name=\"Sensor Columns\"\n                  value={config.column_location}\n                  list={true}\n                ></SimpleCard>\n              ) : null}\n            </Grid>\n            <Grid item xs={12}>\n              <div className={classes.controls}>\n                {props.isConnected ? (\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    aria-label=\"disconnect\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleDisconnectRequest(\"clicked\", setConfig);\n                    }}\n                  >\n                    Disconnect From Device\n                  </Button>\n                ) : (\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    aria-label=\"connect\"\n                    fullWidth={true}\n                    onClick={() => {\n                      handleConnectRequest(\"clicked\", setConfig);\n                    }}\n                  >\n                    Connect To Device\n                  </Button>\n                )}\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  stepIcon: {\n    color: \"primary\",\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"Select Connection Type\",\n    \"Scan and Select Device ID\",\n    \"Select Mode\",\n    \"Click Configure Gateway\",\n  ];\n}\n\nfunction getStepContent(stepIndex) {\n  switch (stepIndex) {\n    case 0:\n      return \"Select Connection Type\";\n    case 1:\n      return \"Scan and Select Device ID\";\n    case 2:\n      return \"Select Device Mode\";\n    case 3:\n      return \"Click Configure Gateway\";\n    default:\n      return \"\";\n  }\n}\n\nconst HorizontalLabelPositionBelowStepper = (props) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState();\n  const steps = getSteps();\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label} color=\"primary\">\n            <StepLabel\n              active={true}\n              StepIconProps={{\n                classes: { root: classes.stepIcon },\n              }}\n            >\n              {label}\n            </StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nexport default HorizontalLabelPositionBelowStepper;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { Grid } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport HorizontalLabelPositionBelowStepper from \"./Stepper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n}));\n\nconst Configure = (props) => {\n  const classes = useStyles();\n  const [source, setSource] = React.useState(props.streamingSource);\n  const [modeUrl, setModeUrl] = React.useState(\n    props.streamingMode === \"results\" ? \"config-results\" : \"config\"\n  );\n  const [deviceID, setDeviceID] = React.useState(props.deviceID);\n  const [error, setError] = React.useState(false);\n  const [scanHelperText, setScanHelperText] = React.useState(\"\");\n  const [helperText, setHelperText] = React.useState(\"\");\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 0 },\n    { field: \"device_id\", headerName: \"Device ID\", width: 240 },\n    { field: \"name\", headerName: \"Name\", width: 240 },\n  ]);\n\n  const handleRadioChange = (event) => {\n    setSource(event.target.value);\n  };\n\n  const handleModeChange = (event) => {\n    setModeUrl(event.target.value);\n  };\n\n  const handleDeviceIDChange = (event) => {\n    setDeviceID(event.target.value);\n    setHelperText(\" \");\n    setError(false);\n  };\n\n  const handleRowSelection = (event) => {\n    console.log(event.data.device_id);\n    setDeviceID(event.data.device_id);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (deviceID === \"\") {\n      setHelperText(\"Must Set DeviceID\");\n      return;\n    }\n    console.log(source);\n    console.log(deviceID);\n    axios\n      .post(`${process.env.REACT_APP_API_URL}` + modeUrl, {\n        device_id: deviceID,\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        console.log(props);\n        props.setStreamingMode(response.data.mode);\n        setHelperText(\"Configured Device\");\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  const handleDeviceScan = (event) => {\n    console.log(event);\n    event.preventDefault();\n    axios\n      .post(`${process.env.REACT_APP_API_URL}scan`, {\n        source: source.toLowerCase(),\n      })\n      .then((response) => {\n        console.log(response.data);\n        setDeviceRows(response.data);\n      })\n      .catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          setScanHelperText(error.response.data.error.message.join(\", \"));\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request);\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log(\"Error\", error.message);\n        }\n      });\n  };\n\n  // \"Configure the gateway to  use a Serial Connection to  connect to the remote  node.\" />\n  // \"Configure the gateway to  use a BLE Connection to connect to remote node.\"\n  // \"Configure the gateway to mock a node sending test data.\"\n  return (\n    <Card>\n      <CardContent>\n        <Grid xs={12} container rows spacing={6}>\n          <HorizontalLabelPositionBelowStepper />\n          <Grid item columns xs={6} alignItems=\"center\">\n            <Card>\n              <CardContent>\n                <form onSubmit={handleDeviceScan}>\n                  <FormControl component=\"fieldset\" error={error}>\n                    <Grid container columns spacing={2}>\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel>Connection Type</FormLabel>\n                            <RadioGroup\n                              aria-label=\"source\"\n                              value={source}\n                              onChange={handleRadioChange}\n                              row\n                            >\n                              <FormControlLabel\n                                value=\"SERIAL\"\n                                control={<Radio />}\n                                label=\"Serial\"\n                              />\n                              <FormControlLabel\n                                value=\"BLE\"\n                                control={<Radio />}\n                                label=\"BLE\"\n                              />\n                              <FormControlLabel\n                                value=\"TCPIP\"\n                                control={<Radio />}\n                                label=\"TCP/IP\"\n                              />\n                              <FormControlLabel\n                                value=\"TEST\"\n                                control={<Radio />}\n                                label=\"Test\"\n                              />\n                            </RadioGroup>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel component=\"legend\">Device ID:</FormLabel>\n                            <TextField\n                              id=\"outlined-basic\"\n                              variant=\"outlined\"\n                              value={deviceID}\n                              onChange={handleDeviceIDChange}\n                              fullWidth={true}\n                            />\n                          </CardContent>\n                        </Card>\n                      </Grid>\n\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          fullWidth={true}\n                        >\n                          Scan\n                        </Button>\n                      </Grid>\n\n                      <FormHelperText>{scanHelperText}</FormHelperText>\n                      <Grid item xs={12}>\n                        <div style={{ height: 350, width: \"100%\" }}>\n                          <DataGrid\n                            rows={deviceRows}\n                            columns={deviceColumns}\n                            onRowSelected={handleRowSelection}\n                            pageSize={4}\n                          />\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </FormControl>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item columns xs={6} alignItems=\"center\">\n            <Card>\n              <CardContent>\n                <form onSubmit={handleSubmit}>\n                  <FormControl\n                    component=\"fieldset\"\n                    error={error}\n                    className={classes.formControl}\n                  >\n                    <Grid container columns spacing={2}>\n                      <Grid item xs={12}>\n                        <Card>\n                          <CardContent>\n                            <FormLabel component=\"legend\">\n                              Device Mode:\n                            </FormLabel>\n                            <RadioGroup\n                              aria-label=\"mode\"\n                              name=\"Streaming Source\"\n                              value={modeUrl}\n                              onChange={handleModeChange}\n                              row\n                            >\n                              <FormControlLabel\n                                value=\"config\"\n                                control={<Radio />}\n                                label=\"Data Collection\"\n                              />\n                              <FormControlLabel\n                                value=\"config-results\"\n                                control={<Radio />}\n                                label=\"Recognition\"\n                              />\n                            </RadioGroup>\n                          </CardContent>\n                        </Card>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Button\n                          type=\"submit\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          fullWidth={true}\n                        >\n                          Configure Gateway\n                        </Button>\n                      </Grid>\n                      <FormHelperText>{helperText}</FormHelperText>\n                    </Grid>\n                  </FormControl>\n                </form>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Configure;\n","import React from \"react\";\nimport Plot from \"react-plotly.js\";\n\nconst StreamChart = (data) => {\n  return (\n    <Plot\n      data={data.data}\n      layout={{\n        autosize: true,\n      }}\n    />\n  );\n};\n\nexport default StreamChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport StreamChart from \"./StreamChart\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction splitArray(data, columns) {\n  var size = data.length / columns.length;\n  var x_array = [...Array(size).keys()];\n  var lines = columns.map((x) => {\n    return {\n      x: x_array,\n      y: [],\n      name: x,\n    };\n  });\n\n  for (var i = 0; i < data.length; i += columns.length) {\n    for (var col = 0; col < columns.length; col++) {\n      lines[col].y.push(data[i + col]);\n    }\n  }\n  return lines;\n}\n\nconst handleStreamRequest = (\n  event,\n  url,\n  setStreamCallback,\n  setIsStreaming,\n  columns\n) => {\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n\n            var int16Array = new Int16Array(value.buffer);\n            setStreamCallback(splitArray(int16Array, columns));\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst SensorStream = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [streamData, setStreamData] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardContent>\n          <div className={classes.section1}>\n            <Grid container spacing={2} rows>\n              <Typography component=\"h3\" variant=\"h3\" color=\"secondary\">\n                Mode: Data Collection\n              </Typography>\n            </Grid>\n          </div>\n          <Divider variant=\"middle\" />\n          <div className={classes.section2}>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\"></Typography>\n          </div>\n          <StreamChart data={streamData} />\n          <div className={classes.controls}>\n            <Button\n              aria-label=\"disconnect\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={isStreaming}\n              onClick={() => {\n                handleStreamRequest(\n                  \"clicked\",\n                  `${process.env.REACT_APP_API_URL}stream`,\n                  setStreamData,\n                  setIsStreaming,\n                  props.columns\n                );\n              }}\n            >\n              Start Stream\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default SensorStream;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst ResultsFilter = (props) => {\n  function filterData(data, filter_length) {\n    if (data.length === 0) {\n      return \"No Results\";\n    }\n\n    if (filter_length > data.length) {\n      filter_length = data.length - 1;\n    }\n\n    let m = {};\n    for (var i = data.length - filter_length; i < data.length; i++) {\n      if (data[i].Classification in m) {\n        m[data[i].Classification] += 1;\n      } else {\n        m[data[i].Classification] = 1;\n      }\n    }\n\n    let index = 0;\n    let max = 0;\n    for (const [key, value] of Object.entries(m)) {\n      if (value > max) {\n        max = value;\n        index = key;\n      }\n    }\n\n    if (max < filter_length / 2) {\n      return \"UNC\";\n    }\n    return index;\n  }\n\n  return (\n    <Typography align=\"center\" variant=\"h1\" component=\"h2\">\n      {filterData(props.data, props.filter_length)}\n    </Typography>\n  );\n};\n\nexport default ResultsFilter;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Typography } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport ResultsFilter from \"./ResultsFilter\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nvar id_counter = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  controls: {\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n  root: {\n    width: \"800px\",\n  },\n  sliderroot: {\n    width: \"100%\",\n  },\n  sliderinput: {\n    width: 42,\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    textAlign: \"center\",\n  },\n}));\n\nfunction bin2String(array) {\n  var results = String.fromCharCode.apply(null, array).split(\"\\n\");\n  results.pop();\n\n  return results.map((x) => {\n    return JSON.parse(x);\n  });\n}\n\nconst handleStreamRequest = (event, url, setStreamCallback, setIsStreaming) => {\n  id_counter = 0;\n  setStreamCallback([]);\n  setIsStreaming(true);\n  fetch(url, {\n    method: \"GET\",\n  }).then((response) => {\n    const reader = response.body.getReader();\n    const stream = new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // Is there no more data to read?\n            if (done) {\n              // Tell the browser that we have finished sending data\n              setIsStreaming(false);\n              controller.close();\n              return;\n            }\n            var results = bin2String(value);\n            for (var i = 0; i < results.length; i++) {\n              console.log(results[i]);\n              results[i].id = id_counter;\n              id_counter += 1;\n              setStreamCallback((x) => [...x, results[i]]);\n            }\n\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n\n    return new Response(stream, { headers: { \"Content-Type\": \"text/html\" } });\n  });\n};\n\nconst Results = (props) => {\n  const [deviceRows, setDeviceRows] = React.useState([]);\n  const [isStreaming, setIsStreaming] = React.useState(false);\n  const [deviceColumns, setDeviceColumns] = React.useState([\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"ModelNumber\", headerName: \"Model ID\", width: 240 },\n    { field: \"Classification\", headerName: \"Classification\", width: 240 },\n  ]);\n  const [filterLength, setfilterLength] = React.useState(1);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleFilterLengthSliderChange = (event, newValue) => {\n    console.log(newValue);\n    setfilterLength(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardContent>\n          <div className={classes.section1}>\n            <Grid item xs={12}>\n              <Typography\n                align=\"center\"\n                component=\"h2\"\n                variant=\"h2\"\n                color=\"secondary\"\n              >\n                Device Mode: Recognition\n              </Typography>\n            </Grid>\n\n            <div className={classes.section1}>\n              <Divider variant=\"middle\" />\n            </div>\n\n            <Grid item xs={12}>\n              <div className={classes.controls}>\n                <Button\n                  aria-label=\"disconnect\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  disabled={isStreaming}\n                  fullWidth={true}\n                  onClick={() => {\n                    handleStreamRequest(\n                      \"clicked\",\n                      `${process.env.REACT_APP_API_URL}results`,\n                      setDeviceRows,\n                      setIsStreaming\n                    );\n                  }}\n                >\n                  Start Stream\n                </Button>\n              </div>\n            </Grid>\n          </div>\n\n          <Grid item alignContent=\"center\" xs={12}>\n            <ResultsFilter\n              data={deviceRows}\n              filter_length={filterLength}\n            ></ResultsFilter>\n          </Grid>\n\n          <Divider variant=\"middle\" />\n          <div className={classes.section1}>\n            <Grid container spacing={4} rows alignItems=\"center\">\n              <Grid item xs={4}>\n                <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                  Filter Length{\" \"}\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6}>\n                <div className={classes.sliderroot}>\n                  <Slider\n                    value={typeof filterLength === \"number\" ? filterLength : 1}\n                    onChange={handleFilterLengthSliderChange}\n                    aria-labelledby=\"input-slider\"\n                    min={1}\n                    max={10}\n                  />\n                </div>\n              </Grid>\n\n              <Grid item xs={1}>\n                <Typography align=\"center\" component=\"h6\" variant=\"h6\">\n                  {filterLength}\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.section1}>\n            <div style={{ height: 600, width: \"100%\" }}>\n              <DataGrid\n                rows={deviceRows}\n                columns={deviceColumns}\n                pageSize={15}\n                sortModel={[{ field: \"id\", sort: \"desc\" }]}\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Results;\n","import React from \"react\";\nimport { Header, NavBar } from \"../Layout\";\nimport useStyles from \"./MainStyles\";\nimport { Grid } from \"@material-ui/core\";\nimport { Status } from \"../Status\";\nimport { Configure } from \"../Configure\";\nimport { SensorStream } from \"../SensorStream\";\nimport { Results } from \"../Results\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst Main = () => {\n  const [activeView, setActiveView] = React.useState(0);\n  const [streamingMode, setStreamingMode] = React.useState(0);\n  const [streamingSource, setStreamingSource] = React.useState(0);\n  const [columns, setColumns] = React.useState([]);\n  const [deviceID, setDeviceID] = React.useState([]);\n  const [isConnected, setIsConnected] = React.useState(false);\n\n  function handleChange(newValue) {\n    if (activeView != newValue) {\n      setActiveView(newValue);\n    }\n  }\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Header />\n        <NavBar onChange={handleChange} isConnected={isConnected} />\n        <main className={classes.content}>\n          {activeView === 0 ? (\n            <Status\n              setStreamingMode={setStreamingMode}\n              setColumns={setColumns}\n              setStreamingSource={setStreamingSource}\n              setDeviceID={setDeviceID}\n              setIsConnected={setIsConnected}\n              isConnected={isConnected}\n            />\n          ) : null}\n          {activeView === 2 ? (\n            <Configure\n              setStreamingMode={setStreamingMode}\n              streamingSource={streamingSource}\n              streamingMode={streamingMode}\n              deviceID={deviceID}\n            />\n          ) : null}\n          {activeView === 1 ? (\n            streamingMode == \"results\" ? (\n              <Results />\n            ) : (\n              <SensorStream columns={columns} />\n            )\n          ) : null}\n        </main>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\n\nimport React from \"react\";\nimport { LightTheme } from \"./components/Themes\";\nimport { Main } from \"./components/Main\";\nconst App = () => {\n  return (\n    <LightTheme>\n      <Main />\n    </LightTheme>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}